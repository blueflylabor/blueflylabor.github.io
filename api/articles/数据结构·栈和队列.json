{"title":"数据结构·栈和队列","slug":"数据结构·栈和队列","date":"2021-04-06T04:01:51.000Z","updated":"2024-06-30T07:40:05.328Z","comments":false,"path":"api/articles/数据结构·栈和队列.json","photos":[],"excerpt":"","covers":null,"content":"<h1 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h1><ul>\n<li>栈(Stack)：只允许在一端插入或删除的线性表</li>\n<li>栈顶：线性表允许进行插入或删除的那一端</li>\n<li>栈底：固定的，不允许进行插入和删除的另一端</li>\n<li>特点：是受限的线性表，拥有线性关系；后进先出<strong>LIFO</strong></li>\n</ul>\n<h1 id=\"顺序栈\"><a href=\"#顺序栈\" class=\"headerlink\" title=\"顺序栈\"></a>顺序栈</h1><ul>\n<li>使用顺序存储，自底向上存储数据元素，指针指向栈顶元素的位置</li>\n<li>操作</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s.top = <span class=\"number\">-1</span>;             <span class=\"comment\">//判空</span></span><br><span class=\"line\">s.data[++s.top] = x;    <span class=\"comment\">//进栈</span></span><br><span class=\"line\">x = s.data[s.top--];    <span class=\"comment\">//出栈</span></span><br><span class=\"line\">x = s.data[s.top];      <span class=\"comment\">//读取栈顶元素</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"共享栈\"><a href=\"#共享栈\" class=\"headerlink\" title=\"共享栈\"></a>共享栈</h1><ul>\n<li>两个栈共享一个一维数组空间</li>\n<li>两个栈分别设置在共享空间两端</li>\n<li>栈顶指向中间延伸位置</li>\n<li>有利于空间使用</li>\n</ul>\n<h1 id=\"链式栈\"><a href=\"#链式栈\" class=\"headerlink\" title=\"链式栈\"></a>链式栈</h1><ul>\n<li>采用链式存储</li>\n<li>便于多个栈共享存储空间</li>\n<li>效率高</li>\n</ul>\n<h1 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h1><ul>\n<li>允许在一端插入，另一端删除的线性表</li>\n<li>队头：允许删除的一端</li>\n<li>队尾：允许插入的一端</li>\n<li>先进先出<strong>FIFO</strong></li>\n</ul>\n<h1 id=\"顺序队列\"><a href=\"#顺序队列\" class=\"headerlink\" title=\"顺序队列\"></a>顺序队列</h1><ul>\n<li>连续的存储单元</li>\n<li>头指针指向队头元素</li>\n<li>尾指针指向队尾元素</li>\n</ul>\n<h1 id=\"循环队列\"><a href=\"#循环队列\" class=\"headerlink\" title=\"循环队列\"></a>循环队列</h1><ul>\n<li>首尾相连的顺序存储的队列</li>\n<li>操作</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Q.rear = Q.front = <span class=\"number\">0</span>;                           <span class=\"comment\">// 初始化</span></span><br><span class=\"line\">rear = (rear + <span class=\"number\">1</span>) % MaxSize;                    <span class=\"comment\">// 入队</span></span><br><span class=\"line\">front = (front + <span class=\"number\">1</span>) % MaxSize;                  <span class=\"comment\">// 出队</span></span><br><span class=\"line\">queueLen = (rear + MaxSize - front) % MaxSize;  <span class=\"comment\">// 队列长度</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>判断空队列或满队列</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用一个单元区分队空或队满</span></span><br><span class=\"line\">(Q.rear + <span class=\"number\">1</span>) % MaxSize = Q.front;   <span class=\"comment\">//</span></span><br><span class=\"line\">Q.front = Q.rear;                   <span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// 类型中增加表示个数的数据成员</span></span><br><span class=\"line\">Q.size = <span class=\"number\">0</span>;                         <span class=\"comment\">//</span></span><br><span class=\"line\">Q.size = MaxSize;                   <span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// 增加tag成员</span></span><br><span class=\"line\">tag = <span class=\"number\">0</span>;                            <span class=\"comment\">//</span></span><br><span class=\"line\">tag = <span class=\"number\">1</span>;                            <span class=\"comment\">//</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"链式队列\"><a href=\"#链式队列\" class=\"headerlink\" title=\"链式队列\"></a>链式队列</h1><h1 id=\"双端队列\"><a href=\"#双端队列\" class=\"headerlink\" title=\"双端队列\"></a>双端队列</h1><ul>\n<li>允许两端可以入队和出队</li>\n<li>输出受限的双端队列：允许一端进行插入和删除，另一端只允许插入的双端队列</li>\n<li>输入受限的双端队列：允许一端进行插入和删除，另一端只允许删除的双端队列</li>\n</ul>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><h2 id=\"栈在括号匹配的应用\"><a href=\"#栈在括号匹配的应用\" class=\"headerlink\" title=\"栈在括号匹配的应用\"></a>栈在括号匹配的应用</h2><h3 id=\"算法思想\"><a href=\"#算法思想\" class=\"headerlink\" title=\"算法思想\"></a>算法思想</h3><ul>\n<li>空栈，一次读入一个符号</li>\n<li>右括号：使栈顶元素消解，或不合法（序列不匹配，退出程序）</li>\n<li>左括号：放入栈顶，作为更高优先级的一个元素，栈为空，否则括号序列不匹配</li>\n</ul>\n<h3 id=\"栈在表达式中的应用\"><a href=\"#栈在表达式中的应用\" class=\"headerlink\" title=\"栈在表达式中的应用\"></a>栈在表达式中的应用</h3><ul>\n<li>中缀表达式转换后缀表达式</li>\n</ul>\n<h3 id=\"栈在递归中的应用\"><a href=\"#栈在递归中的应用\" class=\"headerlink\" title=\"栈在递归中的应用\"></a>栈在递归中的应用</h3><ul>\n<li>原理：将原始问题转换为相同属性的小规模问题</li>\n<li>求出递归表达式</li>\n<li>边界条件（递归出口）</li>\n</ul>\n<h2 id=\"队列-1\"><a href=\"#队列-1\" class=\"headerlink\" title=\"队列\"></a>队列</h2><h3 id=\"队列在层次遍历的应用\"><a href=\"#队列在层次遍历的应用\" class=\"headerlink\" title=\"队列在层次遍历的应用\"></a>队列在层次遍历的应用</h3><h3 id=\"队列在计算机系统中的应用\"><a href=\"#队列在计算机系统中的应用\" class=\"headerlink\" title=\"队列在计算机系统中的应用\"></a>队列在计算机系统中的应用</h3><ul>\n<li>解决主机与外设之间速度不匹配的问题</li>\n<li>解决多用户引起的资源竞争问题</li>\n</ul>\n<h1 id=\"特殊矩阵压缩存储\"><a href=\"#特殊矩阵压缩存储\" class=\"headerlink\" title=\"特殊矩阵压缩存储\"></a>特殊矩阵压缩存储</h1><h2 id=\"数组的存储结构\"><a href=\"#数组的存储结构\" class=\"headerlink\" title=\"数组的存储结构\"></a>数组的存储结构</h2><ul>\n<li>行优先：先存储行号较小的元素，行号相等先存储列号小的元素</li>\n<li>列优先：先存储列好较小的元素，列号相等先存储行号小的元素</li>\n</ul>\n<h2 id=\"n阶对称矩阵\"><a href=\"#n阶对称矩阵\" class=\"headerlink\" title=\"n阶对称矩阵\"></a>n阶对称矩阵</h2><ul>\n<li>上三角、主对角线、下三角，其中上下三角元素相同</li>\n<li>通常不使用二维数组存储，使用一维数组存储，元素$a_{ij}$在数组中下标为$k$</li>\n<li>元素下标之间的对于关系<br>$i \\ge j , k &#x3D; \\frac{i*(i-1)}{2+j}-1(下三角区和主对角线元素)$<br>$i &lt; j , k &#x3D; \\frac{j*(j-1)}{2+i}-1(上三角区元素)$</li>\n</ul>\n<h2 id=\"n阶三角矩阵\"><a href=\"#n阶三角矩阵\" class=\"headerlink\" title=\"n阶三角矩阵\"></a>n阶三角矩阵</h2><ul>\n<li>下三角矩阵（上三角区元素为常量）和上三角矩阵（下三角矩阵元素为常量）</li>\n<li>通常不使用二维数组存储，使用一维数组存储，元素$a_{ij}$在数组中下标为$k</li>\n<li>下三角矩阵的的元素下表之间的对应关系</li>\n<li></li>\n</ul>\n","categories":[],"tags":[]}