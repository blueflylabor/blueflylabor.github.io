{"title":"数据结构·简述","slug":"数据结构·简述","date":"2021-04-06T04:01:51.000Z","updated":"2024-06-30T07:40:05.342Z","comments":false,"path":"api/articles/数据结构·简述.json","photos":[],"excerpt":"","covers":null,"content":"<h1 id=\"数据结构绪论\"><a href=\"#数据结构绪论\" class=\"headerlink\" title=\"数据结构绪论\"></a>数据结构绪论</h1><h2 id=\"一、数据结构：相互存在一种或多种特定关系的集合\"><a href=\"#一、数据结构：相互存在一种或多种特定关系的集合\" class=\"headerlink\" title=\"一、数据结构：相互存在一种或多种特定关系的集合\"></a>一、数据结构：相互存在一种或多种特定关系的集合</h2><ul>\n<li>结构：任何问题，数据元素不孤立存在，之间存在关系  </li>\n<li>逻辑结构</li>\n<li>存储结构（物理结构）</li>\n<li>数据的运算</li>\n<li>逻辑结构和存储结构密不可分</li>\n<li>算法设计取决于逻辑结构，实现依赖存储结构</li>\n</ul>\n<h2 id=\"二、逻辑结构：数据元素之间的逻辑关系\"><a href=\"#二、逻辑结构：数据元素之间的逻辑关系\" class=\"headerlink\" title=\"二、逻辑结构：数据元素之间的逻辑关系\"></a>二、逻辑结构：数据元素之间的逻辑关系</h2><ul>\n<li>与存储无关，独立于计算机</li>\n<li>分为线性结构和非线性结构<br>线性结构：线性表、栈、队列、串、数组、广义表<br>非线性结构：树、二叉树、有向图、无向图</li>\n</ul>\n<h2 id=\"三、存储结构（物理结构）：数据结构在计算机中的映像\"><a href=\"#三、存储结构（物理结构）：数据结构在计算机中的映像\" class=\"headerlink\" title=\"三、存储结构（物理结构）：数据结构在计算机中的映像\"></a>三、存储结构（物理结构）：数据结构在计算机中的映像</h2><ul>\n<li>数据结构的表示</li>\n<li>关系的表示</li>\n<li>依赖于计算机语言</li>\n<li>分为顺序存储、链式存储、索引存储、散列存储</li>\n</ul>\n<h3 id=\"1-顺序存储：存储的物理位置相邻，逻辑上相邻的元素物理位置也相邻\"><a href=\"#1-顺序存储：存储的物理位置相邻，逻辑上相邻的元素物理位置也相邻\" class=\"headerlink\" title=\"1. 顺序存储：存储的物理位置相邻，逻辑上相邻的元素物理位置也相邻\"></a>1. 顺序存储：存储的物理位置相邻，逻辑上相邻的元素物理位置也相邻</h3><ul>\n<li>优：实现随机存取、每个元素占用的内存少</li>\n<li>缺：只能使用相邻的一块存储单元，产生较多的外部碎片</li>\n</ul>\n<h3 id=\"2-链式存储：存储的物理位置未必相邻，逻辑上的相邻的元素在物理位置上未必相邻，通过记录相邻元素的物理位置来找到相邻元素\"><a href=\"#2-链式存储：存储的物理位置未必相邻，逻辑上的相邻的元素在物理位置上未必相邻，通过记录相邻元素的物理位置来找到相邻元素\" class=\"headerlink\" title=\"2.链式存储：存储的物理位置未必相邻，逻辑上的相邻的元素在物理位置上未必相邻，通过记录相邻元素的物理位置来找到相邻元素\"></a>2.链式存储：存储的物理位置未必相邻，逻辑上的相邻的元素在物理位置上未必相邻，通过记录相邻元素的物理位置来找到相邻元素</h3><ul>\n<li>优：无碎片产生、充分利用存储单元</li>\n<li>缺：只能顺序存储</li>\n</ul>\n<h3 id=\"3-索引存储：类似目录\"><a href=\"#3-索引存储：类似目录\" class=\"headerlink\" title=\"3. 索引存储：类似目录\"></a>3. 索引存储：类似目录</h3><h3 id=\"4-散列存储：通过关键字直接计算出元素的物理地址\"><a href=\"#4-散列存储：通过关键字直接计算出元素的物理地址\" class=\"headerlink\" title=\"4. 散列存储：通过关键字直接计算出元素的物理地址\"></a>4. 散列存储：通过关键字直接计算出元素的物理地址</h3><h2 id=\"四、数据运算\"><a href=\"#四、数据运算\" class=\"headerlink\" title=\"四、数据运算\"></a>四、数据运算</h2><h2 id=\"五、算法的五个特征\"><a href=\"#五、算法的五个特征\" class=\"headerlink\" title=\"五、算法的五个特征\"></a>五、算法的五个特征</h2><ul>\n<li>有穷性：执行有限步后结束</li>\n<li>确定性：每条指令都有确定的含义，相同输入得到相同的输出</li>\n<li>可行性：通过实现的基本运算执行有限次得到确定的结果</li>\n<li>输入：有零或多个输入</li>\n<li>输出：一个或多个程序输出结果</li>\n</ul>\n<h2 id=\"六、算法的复杂度\"><a href=\"#六、算法的复杂度\" class=\"headerlink\" title=\"六、算法的复杂度\"></a>六、算法的复杂度</h2><h3 id=\"1-时间复杂度：衡量算法随问题规模增大，算法执行时间增加的快慢\"><a href=\"#1-时间复杂度：衡量算法随问题规模增大，算法执行时间增加的快慢\" class=\"headerlink\" title=\"1. 时间复杂度：衡量算法随问题规模增大，算法执行时间增加的快慢\"></a>1. 时间复杂度：衡量算法随问题规模增大，算法执行时间增加的快慢</h3><h3 id=\"2-空间复杂度：衡量算法随问题规模增大，算法占用空间增加的快慢\"><a href=\"#2-空间复杂度：衡量算法随问题规模增大，算法占用空间增加的快慢\" class=\"headerlink\" title=\"2. 空间复杂度：衡量算法随问题规模增大，算法占用空间增加的快慢\"></a>2. 空间复杂度：衡量算法随问题规模增大，算法占用空间增加的快慢</h3>","categories":[],"tags":[]}