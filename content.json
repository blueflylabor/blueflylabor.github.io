{"posts":[{"title":"操作系统同步问题","text":"经典同步问题 1.生产者消费者问题 一组生产者进程(Producer) 一组消费者进程(Consumer) 共享初始为空 大小为n的缓冲区(Buffer) 1234567891011121314151617181920212223semaphore mutex = 1; //mutexsemaphore empty = n; //buffersemaphore full = 0; //fullProducer(){ while(1){ Produce(); P(mutex); add2Buffer(); V(mutex); V(full); }}Consumer(){ while(1){ P(full); P(mutex); getFromBuffer(); V(mutex); Consume(); }} 2.读者写者问题 读者进程(Reader) 写者进程(Writer) 共享一个文档(Document) 多进程读，不可多进程写 写进程写，不可读 写进程检查是否有读进程读 读进程优先 12345678910111213141516171819202122232425int count = 0;semaphore mutex = 1;semaphore rw = 1;Reader(){ while(1){ P(mutex); if(count == 0) P(rw); count++; V(mutex); Read(); P(mutex); count--; if(count == 0) V(rw); V(mutex); }}Writer(){ while(1){ P(rw); write(); v(rw); }} 写进程优先 123456789101112131415161718192021222324252627282930int count = 0;semaphore mutex = 1;semaphore rw = 1;semaphore w = 1;Writer(){ while(1){ P(w); P(rw); Write(); V(rw); V(w); }}Reader(){ while(1){ P(w); P(mutex); if(count == 0) P(rw); count++; V(mutex); V(w); Read(); P(mutex); count--; if(count == 0) V(rw); V(mutex); }} 3.哲学家进餐问题 5名哲学家(Philosopher) 每两名之间有一根筷子(Chopstick) 每名有一碗饭 吃完饭思考 1234567891011121314semaphore Chopsticks[5] = {1, 1, 1, 1, 1};semaphore mutex = 1;Philosopher(){ do{ P(mutex); P(Chopsticks[i]); P(Chopsticks[(i+1)%5]); V(mutex); eat(); V(Chopsticks[i]); V(Chopsticks[(i+1)%5]); think(); }} 4.吸烟者问题 3个吸烟者进程(Smoker) 1个提供者进程(Offer) Smoker1(paper, glue) Smoker2(tobacco, glue) Smoker3(paper, tobacco) Offer(offer1) return paper, glue Offer(offer2) return tobacco, glue Offer(offer3) return paper, tobacco 123456789101112131415161718192021222324252627282930313233343536373839int num = 0; //store random numsemaphore offer1 = 0;semaphore offer2 = 0;semaphore offer3 = 0;semaphore end = 0;Offer(){ whlie(1){ num++; num = num % 3; if(num == 0) V(offer1); else if(num == 1) V(offer2); else V(offer3); P(end); }}Smoker1(){ while(1){ P(offer3); smoke(); V(end); }}Smoker2(){ while(1){ P(offer2); smoke(); V(end); }}Smoker3(){ while(1){ P(offer1); smoke(); V(end); }} eg1 3个进程P1 P2 P3 互斥使用N个单元的缓冲区(Buffer) P1 produce() return (int num) put() @Buffer P2","link":"/2021/04/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%90%8C%E6%AD%A5%E9%97%AE%E9%A2%98/"},{"title":"操作系统简述","text":"第一章 计算机系统概述并发、共享、虚拟、异步没有并发和共享，就没有虚拟和异步 并发和共享互为存在条件 只有系统有并发性，才能导致异步性 命令接口联机：交互式 脱机：批处理 程序接口系统调用（广义指令） 操作系统用作扩充机器没有任何软件支持的计算机称为裸机 覆盖了软件的机器称为扩充机器或虚拟机 操作系统发展手工操作系统：独占全机、CPU等待手工操作 单道批处理操作系统：解决人机矛盾、CPU和I/O设备速率不匹配、每次主机内存仅存放一道作业 多道批处理操作系统：资源利用率高、用户响应时间长、不提供人机交互 分时操作系统：同时、交互、独立、及时 实时操作系统：及时、可靠 网络操作系统 分布式计算机系统 个人操作系统 操作系统运行机制CPU的状态划分为用户态、核心态 中断和异常中断（外中断）：CPU执行指令意外的事件【设备发出的I/O结束中断】 异常（内中断、陷入）：CPU执行指令内部的事件【非法操作码、地址越界、算术溢出、虚拟存储系统的缺页、陷入指令】 中断处理过程12345678910graph LR关中断1--保存断点保存断点--中断服务程序寻址中断服务程序寻址--保存现场和屏蔽字保存现场和屏蔽字--开中断1开中断1--执行中断服务程序执行中断服务程序--关中断2关中断2--恢复现场和屏蔽字恢复现场和屏蔽字--开中断2开中断2--中断返回 系统调用用户程序中调用操作系统提供的子功能 程序员可以使用高级语言，估计又要可以调用库函数，有的库函数封装了系统调用 用户进程执行 调用系统调用 进入核心态 执行系统调用 退出核心态 从系统调用返回 大内核 微内核大内核：内核代码庞大、结构混乱、难以维护、提供高性能系统服务 微内核：分离内核与服务、频繁切换用户核心态、操作系统执行开销大、内核内容少、方便维护 第二章 进程管理进程:程序段、数据段、PCB进程控制块 进程映像是静态的，进程是动态的 动态、并发、独立、异步、结构 进程状态运行、就绪、阻塞、创建、结束 进程通信共享存储（需要同步互斥工具PV操作、低级：基于共享数据结构、高级：基于存储区） 消息传递（进程间数据交换以格式化消息为单位、直接/间接） 管道通信（pipe文件用于连接一个读进程和写进程通信、半双工、全双工需要两条管道） 线程 多线程引入进程目的：更好的使多道程序并发执行 引入线程目的：减小程序在并发执行付出的时空开销，提高并发性能 线程：线程ID、程序计数器、寄存器结合、堆栈组合、三态【就绪、阻塞、运行】 轻量实体，无系统资源，唯一ID和线程控制块 用户级线程ULT：操作系统意识不到ULT的存在，有关线程管理由应用程序完成 内核级线程KLT：有关线程管理由内核完成 多线程模型：多对一、一对一、多对多（m&lt;=n） 处理机调度调度层次：作业调度（高）、内存调度（中）、进程调度（低） 不能进行进程调度与切换：处理中断、进程处于内核态、其他需要完全屏蔽中断的原子操作 调度方式：非剥夺调度（非抢占方式、适用于大多批处理系统、不能用于分时系统和大多数的实时系统）、剥夺调度（抢占方式、有优先权、短进程优先、时间片原则） 调度基本原则：CPU利用率、系统吞吐量、周转时间、等待时间、响应时间 系统吞吐量：单位时间内CPU完成作业的数量 周转时间：从作业提交到作业完成所用时间 $$T=t_{等待}+t_{就绪队列排队}+t_{上处理机运行及输入输出}\\t_{周转时间}=t_{作业完成时间}-t_{作业提交时间}\\t_{平均周转时间}=\\frac{\\sum_i^n{t_i}}{n}(作业i的周转时间：t_i)\\t_{带权周转时间}=\\frac{t_{作业周转时间}}{t_{作业实际运转}}\\geq{1}\\t_{带权平均周转时间}=\\frac{\\sum_i^n{t_i}}{n}(作业i的带权周转时间：t_i)\\$$ 等待时间：进程处于等处理机状态的时间和 响应时间：从用户提交请求到系统首次产生响应所用时间 调度算法：先来先服务（FCFS、非抢占）、短作业优先（SJF、SPF）、抢占式短作业优先（SRTN）、优先级调度、高响应比优先（HRRN）、时间片轮转调度（RR）、多级反馈队列调度 1.先来先服务（FCFS）：简单，效率低；对长作业有利，对短作业不利；有利于CPU繁忙型作业，不利于I/O繁忙型作业；不会导致饥饿；多用于早期批处理系统 2.短作业优先（SJF、SPF）：当前已到达的最短作业先上处理机；有优先权、短进程优先、时间片原则；适用于实时/分时操作系统；调度机制导致长作业长时间不被调度（饥饿）；多用于早期批处理系统 3.抢占式短作业优先（SRTN）：最短剩余时间算法 4.优先级调度：适用于实时操作系统；剥夺、非剥夺、静态优先级、动态优先级；系统进程用户进程 交互型进程非交互型进程 I/O型进程计算型进程;不导致饥饿 5.高响应比优先（HRRN）：多用于早期批处理系统 $$响应比R_p=\\frac{t_{等待时间}+t_{要求服务时间}}{t_{要求服务时间}}\\geq{1}\\$$ 6.时间片轮转调度（RR）：时间片大小设置对系统性能影响很大，时间片足够大，以至于所有进程都能在一个时间片完成，退化为先来先服务算法；时间片太小，处理机频繁在进程间切换，增加处理机开销；时间片长短由系统的响应时间、就绪队列的进程数目、系统处理能力决定；不会导致饥饿 7.多级反馈队列调度：设置多个就绪队列，各个队列赋予不同优先级，赋予各个队列中进程执行时间片的大小各个不同，一个进程进入内存后挂在一级队列队尾，时间片内未完成进入第二级队列队尾，第一级队列为空下一级运行；课本认为是抢占式算法； 进程同步临界资源：进入区、临界区、退出区、剩余区 同步：完成某种任务而建立的两个或多个进程，需要协调制约关系 互斥：一个进程使用临界资源另一个进程必须等待，当占用临界资源的进程退出临界区后，另一进程允许访问临界资源 为禁止两个进程进入同一个临界区，指定准则： （1）空闲让进 （2）忙则等待 （3）有限等待 （4）让权等待 实现互斥基本方法： （1）软件：单标志法（违背空闲让进）、双标志法先检查（违法忙则等待）、双标志法后检查（导致饥饿、违背空闲让进、有限等待）、皮特森算法Peterson’s Algorithm（违法让权等待） （2）硬件：中断屏蔽方法（禁止一切中断发生、优：简单高效 / 缺：不适用多处理机、用户进程，只适用于系统内核进程）、硬件指令方法TS/TSL（优：适用于任意数目的进程，无论是单处理机还是多处理机，简单容易验证其正确性 / 缺：不能实现让权等待，从等待中随机选择一个进临界区，可能导致饥饿） 信号量 整型信号量：用于表示资源数目的整型量S，只要信号量S&lt;=0，就会不断测试，违背让权等待 1234567wait(S){ while(S &lt;= 0) S = S - 1;}signal(S){ S = S + 1;} 记录型信号量：一个用于记录资源数目的整型量value，一个进程链表L，链接等待资源的进程,S.L解决了让权等待的问题 1234567891011121314151617181920typedef struct{ int value; struct process *L;}semaphore;void wait(semaphore S){ S.value --; if(S.value &lt; 0){ add this process P to S.L; } block(S.L);}void signal(semaphore S){ S.value ++; if(S.value &lt;= 0){ remove a process P from S.L; wakeup(P); }} 利用信号量实现同步：前V后P，必须保证一前一后，实现同步关系 1234567891011semaphore S = 0;P1(){ x; V(S); ...}P2(){ P(S); y; ...} 利用信号量实现互斥： 123456789101112131415seamphore S = 1;P1(){ ... P(S); 进程P1的临界区; V(S); ...}P2(){ ... P(S); 进程P2的临界区 V(S); ...} 利用信号量实现前驱关系： 对不同的临界资源设置不同的互斥信号量，PV必须成对出现 123456789101112131415161718192021222324252627282930313233343536373839semaphore a1 = a2 = b1 = b2 = c = d = e = 0;S1(){ ... V(a1); V(a2);}S2(){ P(a1); ... V(b1); V(b2);}S3(){ P(a2); ... V(c);}S4(){ P(b1); ... V(d);}S5(){ P(b2); ... V(e);}S6(){ P(c); P(d); P(e); ...} 另一角度：图论出度（P）入度（V） 管程 名称、共享结构数据、一组过程（函数）、设置共享结构数据初值 互斥特性由编译器负责实现 各外部进程/线程，只能从管程提供的特定入口才能访问共享数据 每次只允许一个进程在管程内执行某个内部过程 经典同步问题 1.生产者消费者问题 一组生产者进程(Producer) 一组消费者进程(Consumer) 共享初始为空 大小为n的缓冲区(Buffer) 1234567891011121314151617181920212223semaphore mutex = 1; //mutexsemaphore empty = n; //buffersemaphore full = 0; //fullProducer(){ while(1){ Produce(); P(mutex); add2Buffer(); V(mutex); V(full); }}Consumer(){ while(1){ P(full); P(mutex); getFromBuffer(); V(mutex); Consume(); }} 2.读者写者问题 读者进程(Reader) 写者进程(Writer) 共享一个文档(Document) 多进程读，不可多进程写 写进程写，不可读 写进程检查是否有读进程读 读进程优先 12345678910111213141516171819202122232425int count = 0;semaphore mutex = 1;semaphore rw = 1;Reader(){ while(1){ P(mutex); if(count == 0) P(rw); count++; V(mutex); Read(); P(mutex); count--; if(count == 0) V(rw); V(mutex); }}Writer(){ while(1){ P(rw); write(); v(rw); }} 写进程优先 123456789101112131415161718192021222324252627282930int count = 0;semaphore mutex = 1;semaphore rw = 1;semaphore w = 1;Writer(){ while(1){ P(w); P(rw); Write(); V(rw); V(w); }}Reader(){ while(1){ P(w); P(mutex); if(count == 0) P(rw); count++; V(mutex); V(w); Read(); P(mutex); count--; if(count == 0) V(rw); V(mutex); }} 3.哲学家进餐问题 5名哲学家(Philosopher) 每两名之间有一根筷子(Chopstick) 每名有一碗饭 吃完饭思考 1234567891011121314semaphore Chopsticks[5] = {1, 1, 1, 1, 1};semaphore mutex = 1;Philosopher(){ do{ P(mutex); P(Chopsticks[i]); P(Chopsticks[(i+1)%5]); V(mutex); eat(); V(Chopsticks[i]); V(Chopsticks[(i+1)%5]); think(); }} 4.吸烟者问题 3个吸烟者进程(Smoker) 1个提供者进程(Offer) Smoker1(paper, glue) Smoker2(tobacco, glue) Smoker3(paper, tobacco) Offer(offer1) return paper, glue Offer(offer2) return tobacco, glue Offer(offer3) return paper, tobacco 123456789101112131415161718192021222324252627282930313233343536373839int num = 0; //store random numsemaphore offer1 = 0;semaphore offer2 = 0;semaphore offer3 = 0;semaphore end = 0;Offer(){ whlie(1){ num++; num = num % 3; if(num == 0) V(offer1); else if(num == 1) V(offer2); else V(offer3); P(end); }}Smoker1(){ while(1){ P(offer3); smoke(); V(end); }}Smoker2(){ while(1){ P(offer2); smoke(); V(end); }}Smoker3(){ while(1){ P(offer1); smoke(); V(end); }} eg1 3个进程P1 P2 P3 互斥使用N个单元的缓冲区(Buffer) P1 produce() return (int num) put() @Buffer P2 死锁 多个进程因竞争资源造成的一种互相等待，若无外力作用，这些进程都将无法向前推进 死锁产生的原因：（1）系统资源的竞争（2）进程推进顺序非法（3）死锁产生的必要条件：互斥条件、不剥夺条件（已经至少保持了一个资源）、请求并保持条件、循环等待条件 发生死锁一定有循环等待，但发生循环等待未必死锁 死锁的处理策略 死锁预防：破坏四个必要条件之一即可 破坏互斥条件 破坏不剥夺条件 破坏请求并保持条件 破坏循环等待条件 死锁避免：在资源分配过程，防止进入不安全状态 银行家算法 $$Need = Max -Allocation$$ 死锁检测和解除：系统分配进程时不做措施，应该提供死锁检测和解除的手段 资源分配图 请求边：从进程到资源分配边：从资源到进程 死锁定理：依次消除与不阻塞进程相连接的边，直到无边可消除 死锁解除：资源剥夺法、撤销进程法、进程回退法 第三章 内存管理程序装入和链接 编译：编译程序将源代码编译成若干目标模块 链接：链接程序将编译后形成一组目标模块及所需的库函数链接在一起，形成一个完整的装入模块 装入：装入程序装入模块装入内存运行 链接方式 静态：程序运行前，链接为一个完整可执行的程序 装入时动态：装入过程中，边装入边链接 运行时动态：程序执行过程需要该模块才进行 装入方式： 绝对装入：仅适用于单道程序，装入程序按照装入模块中的地址，将程序数据装入内存，逻辑地址与物理地址完全相同 可重定位装入（静态重定位）：一个作业装入内存，必须给它分配要求的全部内存空间，若没有足够的内存，则无法装入。一旦运行，作业进入内存，整个运行期间不能在内存中移动，也不能再申请内存空间 动态运行时装入（动态重定位）：程序在内存中发生移动，则需要采用动态的装入方式。装入程序把装入内存后，并不立即将装入模块中的相对地址转换为绝对地址，而是将地址转换推迟到程序真正要执行时才进行，需要重定位寄存器的支持 逻辑地址和物理地址 地址重定位：当装入程序将可执行代码装入内存时，必须通过地址转换将逻辑地址转换成为物理地址 内存保护 在CPU中设置一堆上、下限寄存器，CPU要访问一个地址，分别和两个寄存器值相比，判断有无越界 采用重定位寄存器（基址寄存器）和界地址寄存器（限长寄存器）来实现这种保护 连续分配管理方式 单一连续分配 内存分为系统区、用户区，无需进行内存保护，内存中只允许有有一道程序 优 简单无外部碎片 缺 只能用于单用户、单任务的操作系统中，有内部碎片，存储器利用率极低 固定分区分配 将用户内存空间划分为若干固定大小的区域，每个分区只装入一道作业。当有空闲分区时，可从外存的后备作业队列中选择适当大小的作业装入 划分分区方式：分区大小相等、分区大小不等 问题 程序可能太大放不进任何一块分区，用户不得不使用覆盖技术使用内存空间 主存利用率低，程序小也要占用一个分区，现象称为内部碎片 动态分区分配 又称可变分区分配，不预先划分内存，在进程装入内存时，根据进程大小动态地建立分区，并使分区的大小正好适合进程的需要 问题：所有分区外的存储空间会产生越来越多的碎片，克服外部碎片可以通过紧凑技术来解决 动态分区策略 首次适应Fiist Fit：空闲分区以地址递增的次序链接，找到大小能满足要求的第一个空间。会使得内存的低地址部分出现很多小的空闲分区，每次分配查找时，都要经过这些分区，增加了查找的开销 最佳适应Best Fit：空闲分区按容量递增的方式形成分区链，找到第一个能满足要求的空间。性能通常很差，因为每次最佳的分配会留下很小难以利用的内存块，会产生最多的外部碎片。 最坏适应Worst Fit（最大适应Lasgest Fit）:以容量递减的次序链接，找到第一个能满足要求的空闲分区。选择最大的块，但却把最大的连续内存的划分开，会很快导致没有可用的大内存块，导致性能很差 邻近适用Next Fit（循环首次适应算法）：分配内存时从上次查询结束的位置开始继续查找。在一次扫描中，内存前面部分使用后再释放时，不会参与分配，导致在内存的末尾分配空间分裂为小碎片。 非连续分配 基本分页存储管理方式：主存空间划分为大小相等且固定的块，块相对较小，作为主存的基本单位。每个进程以块为单位进行划分，进程在执行时，以块为单位逐个申请贮存中的空间 分页管理不会产生外部碎片，块的大小相对分区要小，进程按块划分，进程运行时按块申请主存可用空间并执行，进程只会在最后一个不完整的块，不产生主存碎片，，每个进程平均只产生半个块大小的内部碎片 页面和页面大小：进程中的块称为页（page），内存中的块称为页框（page frame、或页帧）。外存也以同样的单位进行划分，称为块（block）。进程在执行时需要申请主存空间，要为每个页面分配主存中的可用页框，页和页框一一对应 地址结构 页表：通过查找页表即可找到相应的物理块 基本地址变换： 将逻辑地址变换为内存中的物理地址，在系统中设置页表寄存器（PTR）存放内存起始地址F和页表长度M。 $$\\begin{aligned}&amp;（1）页号P=\\frac{A}{L}\\&amp;（2）页内偏移量W=A%L\\&amp;（3）比较页号P和页表长度M，P\\geq M产生越界中断\\&amp;（4）页表中页号P对应的页表项地址A=F+PM\\&amp;（5）物理地址E=bL+W\\\\end{aligned}$$页式管理中空间地址是一维的 问题 每次访存均需地址变换，地址变换必须足够快，否则访存速度会降低 每个进程引入页表，用于存储映射机制，页表不能过大 引入快表机制：在地址变换过程中加入具有并行查找能力的高速缓冲存储器——快表（相联存储器TLB，主存中的页表为慢表） 一次地址变换流程 （1）CPU给出逻辑地址，将页号送入高速缓冲寄存器，查询此页号是否存在于快表内 （2）若匹配到，直接取出对应页的页框号，与页内偏移拼接为物理地址，访存 （3）若未匹配到，访问慢表查询，读取页表项后复制到快表中，进行地址变换后访存 值得注意的是，题中是否说明快表初始为空以及快表慢表的查询机制，是否同时查询！ 两级页表 引入页表，执行时不需要调入所有内存页框，为了压缩页表，采取多级映射 多级页表大小不能超过一个页面 $$\\begin{aligned}&amp;逻辑地址：32bit\\&amp;以字节编址\\&amp;页表项：4B\\&amp;页面大小：4KB=2^{12}B （页内偏移量）\\&amp;页号：32-12=20\\&amp;全映射需要2^{20}个页表项\\&amp;共需4B2^{20}=4MB大小空间存储页表\\&amp;\\&amp;以40MB进程为例\\&amp;页表项：\\frac{40MB}{4B4KB}=40KB\\&amp;需要\\frac{40KB}{4KB}=10页面\\&amp;整个进程需要\\frac{40MB}{4KB}=10*2^{10}个页面\\&amp;\\&amp;为了压缩页表，采取二级页表机制\\&amp;页表10页进行映射只需要10个页表项\\&amp;上一级页表只需要1页就已经足够2^{10}=1024个页表项\\&amp;进程执行时，仅需将这一页的上级页表调入即可\\&amp;页面大小：4KB=2^{12}B （页内偏移量）\\&amp;页号：32-12=20\\&amp;顶级（一级）页表为1个页面\\&amp;一级页表项\\frac{4KB}{4B}=1K\\&amp;一级页表占用log_2{1K}=10位\\&amp;二级页表占用20-10=10位\\&amp;二级页表大小2^{10}*4B=4KB\\leq页面大小4KB\\\\end{aligned}$$ 基本分段存储管理方式 分页管理是从计算机角度考虑设计，提高内存利用率，分页通过硬件机制实现 分段管理是从用户和程序员出发，方便编程、信息保护和共享、动态增长以及动态链接等方面的需要 段号决定每个进程最多可以分几个段，段内地址决定每个段内的最大长度 段表：每个进程都有一张逻辑空间与内存空间映射的段表 地址变换机构 $$从逻辑地址A中取出前几位为段号S，后几位为段内偏移量W\\比较段号S和段表长度M，S\\geq M,产生越界中断，否则继续执行\\段表中段号S对应段表项地址=段表始址F+段号S*段表项长度\\段内偏移量\\geq C，产生越界中断，否则继续执行\\取出段表项中该段的起始地址b，E=b+W，得到物理地址E去访问内存\\$$ 段的共享与保护：分段系统，通过两个作业的段表中相应表项指向被共享的段同一个物理副本，当地一个作业从共享段读取数据，必须防止另一个修改数据，不能修改的的代码称为纯代码、可重入代码 段号和段内偏移需要显示给出，地址空间为二维 段页式管理方式 作业的地址空间被分为若干逻辑段，每段都有自己的段号，将每段分为若干大小的固定的页，内存空间分为若干和页面大小相同的存储块，对内存的分配以块为单位。 段号位数决定每个进程最多可以分几个段 页号位数决定最多有几个页 页内偏移量决定页面大小、内存块的大小 段页式系统的逻辑地址结构： 地址变换 需要三次访存，可以使用快表机制 虚拟内存管理 传统存储管理方式 一次性：一次全部装入，才能开始 驻留性：装入后，常驻内存，任何部分都不会被换出，直至结束 局部性原理 一个程序，一段时间内，只有一部分会被访问 空间 时间 虚拟存储器 将程序的一部分装入内存，其余部分留在外存，当所访问的部分不在内存，操作系统将需要的部分调入内存，将暂时不需要的内容换到外存 多次性：无需一次全部装入，允许分为多次调入 对换性：无需常驻内存 虚拟性：从逻辑上扩充内存容量，使用户看到的内存容量远大于内存容量 本质：用时间换空间 实现：请求分页、请求分段、请求段页式 支持：内存、外存、页表机制、段表机制、中断机构、地址变换机构 请求分页管理方式 访问不存在内存中的页面，通过调页将其调入，通过置换算法将暂时不需要的页面调到外存上 页表机制 $$状态位P：指示是否调入内存\\访问字段A：记录一段时间内被访问的次数\\修改位M：标识页面调入内存后是否被修改过\\外存地址：指出该页在外存上的地址，通常是物理块号\\$$ 缺页中断机制 访问页面不在内存中时，产生一个缺页中断，请求操作系统将缺页调入内存，将缺页的进程阻塞，若内存有闲置的空闲块，则分配一个块，将页面装入，并修改页表相应的页表项，若内存中无空闲块，则淘汰某页，淘汰页若在内存中修改过需要同步，写回外存 地址变换机构 页面置换算法 最佳置换算法OPT 选择的被淘汰页是以后永不使用的页面，或是最长时间内不再被访问的页面 先进先出算法FIFO 优先淘汰最早进入内存的页面，即内存中驻留时间最久的页面 会产生所分配的物理块增大页故障数不减反增的异常现象，Belady异常 最近最久未使用算法LRU 选择最近最长时间未访问过的页面予以淘汰，为每个页面设置一个访问字段记录上次被访问所经历的时间 性能较好，需要寄存器和栈的硬件支持 时钟置换算法CLOCK 简单的CLOCK算法：每帧关联一个附加位，使用位u，连成一个循环队列。某页装入时，使用位置为1；被访问时，使用位置为1；置换时，操作系统扫描缓冲区，每当遇到一个使用位为1的帧，置为0；最后停留在第一个使用位为0的帧 CLOCK算法性能比较接近LRU算法 改进的CLOCK算法：再增加一个修改位m，P(u,m) 第一轮扫描，指针扫描过的页面使用位u置为0 第一轮扫描中，未找到使用位u为0的页面进行第二轮扫描 第二轮扫描，第一个页面置换出，换入页面m修改位置为1，并将指针后移 页面分配策略 一个进程分配的物理页框的集合，分配给一个进程的存储量越小，任何时候驻留在主存中的进程数就越多，从而提高处理机的效率；一个进程页数过少，基于局部性原理，页错误率会相对较高；页数过多，基于局部性原理，给特定的进程分配更多主存空间对该进程的错误率没有明显改善。 策略：固定分配局部置换、可变分配全局置换、可变分配局部置换（没有固定分配全局分配） 调入时机：预调页策略、请求调页策略 从何处调页：系统拥有足够的对换区间、系统缺少足够的对换区间、UNIX方式 抖动 某进程频繁访问的页面数目高于可用的物理页帧数目 工作集 在某段时间间隔内，进程要访问的页面集合 一般，分配给进程的物理块数（驻留集大小）要大于工作集大小 第四章 文件系统文件 文件结构：数据项、记录、文件 属性：名称、标识符、类型、位置、大小、保护、时间 所有文件的信息都保存在目录结构中，而目录结构保存在外存上，文件信息在需要时调入内存。 基本操作：创建、写、读、重定位、删除、截断 文件逻辑结构 无结构文件（流式文件） 二进制式字符流组成 有结构文件（记录式文件） 顺序文件 索引文件 索引顺序文件 直接文件或散列文件 目录结构","link":"/2021/04/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AE%80%E8%BF%B0/"},{"title":"数据库简述","text":"数据库DB一、数据库系统概论基本概念数据库的四个基本概念：数据、数据库、数据库管理系统、数据库系统 数据DATA：描述事物的符号记录，数据的含义称为数据的语义，数据与其语义不可分 数据库DB：长期存储在计算机内、有组织的、可共享的大量数据的集合，数据库中的数据按一定数据模型组织、描述和存储，具有较小的冗余度、较高的数据独立性、易扩展性 数据库管理系统DBMS：位于操作系统和用户之间的一层数据管理软件，包括：数据定义、组织、存储、管理、操纵；数据库的事务管理、运行管理、建立、维护；其他； 数据库系统DBS：由数据库、数据库管理系统、应用程序、数据库管理员DBA组成的存储、管理、处理和维护的系统 数据库技术发展人工管理阶段、文件系统阶段、数据库系统阶段 数据库系统特点 数据结构化：是与文件系统的本质区别 数据的共享性高、冗余度低且易扩充 数据独立性高 数据由数据库管理系统统一管理和控制：安全性保护、完整性保护、并发控制、数据库恢复 数据模型：是对现实世界数据特征的抽象，是数据库系统的核心和基础两类数据模型 第一类概念模型（信息模型）：按用户的观点对数据和信息建模，主要用于数据库设计——面向用户 第二类逻辑模型：包括层次模型、网状模型、关系模型、面向对象模型、对象关系模型、半结构化模型；是按计算机系统的观点对数据建模——面向设计人员 第二类物理模型：是对数据最底层的抽象，面向计算机系统 概念模型基本概念 实体：客观存在并且可相互区别的事物 属性：实体具有的某一特性 码：唯一标识实体的属性集 实体型：用实体名及属性名集合来抽象和刻画同类实体 实体集：同一类型实体的集合 联系：实体之间的联系通常是指不同实体集之间的联系，一对一、一对多、多对多等类型 一种表示方法：实体-联系方法 E-R模型 组成要素：数据模型通常由数据结构、数据操作、数据的完整性约束条件组成 数据结构：描述数据库的组成对象以及对象之间的关系 数据操作：对数据库中的各种对象的实例允许执行的操作的集合，包括操作及有关的操作规则（SQL） 数据的完整性约束条件：是一组完整性规则，保证数据的正确、有效和相容，任何关系需满足实体完整性和参照完整性（DBMS自动完成，之外的由设计人员完成，用户自己的完整性也需设计人员完成）；在某个表中某一个属性不能重复且不能为空 常用数据模型 层次模型（非关系模型） 网状模型（非关系模型） 关系模型（表） 面向对象模型（对象） 对象关系模型 半结构化模型 层次模型早期的数据组织方式，IBM的IMS，在数据库中定义满足 有且只有一个结点没有双亲结点，这个结点叫根结点 根以外的其他结点有且只有一个双亲结点 层次模型更像是一颗倒立的树 网状模型 允许一个以上的结点无双亲 一个结点可以有多于一个的双亲 层次模型中子女结点与双亲结点的联系是唯一的，网状模型不唯一 关系模型IBM E.F.Codd 数据结构 关系：一个关系对应一个表 元组：表中的一行 属性：表中的一列 码：表中某个属性组，可以唯一确定一个元组 域：一组有相同数据类型的集合 分量：元组的一个属性值 关系模式：关系的描述（关系名（属性1，属性2，…，属性n）） 要求关系必须规范化，每一个分量必须是一个不可分的数据项 数据库系统的结构 单用户结构 主从式结构 分布式结构 客户-浏览器结构 浏览器-应用服务器、数据库服务器多层结构 系统模式的概念在数据模型中有“型”和“值”的概念，型是指对某一类数据的结构和属性的说明，值是型的一个具体赋值模式是数据库中全体数据的逻辑结构和特征的描述，涉及型的描述，不涉及具体的值模式是相对稳定的，而实例是相对变动的 数据库系统的三级模式：外模式、模式、内模式 模式：又称逻辑模式或用户模式，是数据库用户能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据试图，是与某一用户有关的数据的逻辑表示 外模式：通常是模式的子集，一个数据库可以有多个外模式，如果不同的用户在应用需求、看待的数据方式、对数据保密的要求等方面存在差异，则其外模式描述是不同的；同一模式也可以为某一用户的多个应用系统所使用，但一个应用程序只能使用一个外模式 内模式：又称存储模式或物理模式，一个数据库只有一个内模式，是数据物理结构和存储方式的描述，是数据在数据库内部的组织方式 数据库二级映像功能与数据独立性 外模式/模式映像：模式描述的是数据全局逻辑结构，外模式描述的是数据的局部逻辑结构，对于每一个外模式，数据库系统都有一个外模式/模式映像，定义了外模式与模式之间的对应关系，通常包含在各自的外模式描述中；当模式改变时，有数据库管理员对各个外模式/模式的映像做相应改变，可使外模式保持不变。应用程序是依据数据的外模式编写的，从而应用程序不必修改，保证了数据与程序的逻辑独立性，简称数据的逻辑独立性 模式/内模式映像：数据库只有一个模式，也只有一个内模式，模式/内模式是唯一的，定义了数据全局逻辑结构与存储结构之间的对应关系；当数据库的存储结构发生改变，由数据库管理员对模式/内模式映像作相应改变，可使模式保持不变，从而应用程序不必改变，保证了数据与程序的物理独立性，简称数据的物理独立性 数据库系统的组成 硬件平台&amp;数据库 软件 人员 二、关系数据库《Communications of the ACM》E.F.Codd 关系数据结构及形式化定义:单一的数据结构，在用户看来逻辑结构是一张二维表 域：一组具有相同数据结构的值的集合$$\\begin{aligned}&amp;D_1, D_2, \\dots, D_n\\\\end{aligned}$$ 笛卡尔积：域上的一种集合运算$$\\begin{aligned}&amp;D_1 * D_2 * \\dots * D_n = {(d_1, d_2, \\dots, d_n)|d_i\\in D_i, i = 1, 2, \\dots, n}\\&amp;每一个元素(d_1, d_2, \\dots, d_n)叫做一个n元组\\&amp;元组每一个值d_i叫做一个分量\\&amp;基数：一个域允许的不同取值个数M=\\prod_{i=1}^{n}{m_i}\\end{aligned}$$ 关系：$$\\begin{aligned}&amp;D_1 * D_2 * \\dots * D_n的子集叫做在域D_1, D_2, \\dots\\&amp;D_n上的关系，表示为R(D_1, D_2, \\dots, D_n)\\&amp;R表示为关系的名字，n是关系的目或度\\&amp;n=1，单元关系\\&amp;n=2，二元关系\\&amp;某一个属性组的值能唯一标识一个元组，而其子集不能，则称该属性组为候选码\\&amp;若一个关系有多个候选码，则选定一个为主码\\&amp;候选码的诸属性成为主属性，不包含在任何候选码中的属性成为非主属性或非码属性\\&amp;在最简单情况下，候选码只包含一个属性；在最极端情况下，关系模式的所有属性是这个关系模式的候选码，称为全码\\&amp;关系有三种类型：\\&amp;基本关系（基本表或基表）：实际存在的表，实际存储数据的逻辑表示；\\&amp;查询表：查询结果对应的表；\\&amp;视图表：基本表或其他视图表导出的表，虚表，不对应实际存储的数据\\&amp;关系是一个无限的集合，由于笛卡尔积的域不满足交换律\\&amp;(d_1, d_2, \\dots, d_n) \\neq (d_2, d_1, \\dots, d_n)(i, j =1, 2, \\dots, n)\\&amp;对关系数据模型的限定和扩充：\\&amp;(1)无限关系在数据库系统中是无意义的，限定关系数据模型中的关系必须是有限集合\\&amp;(2)通过关系的每个列附加一个属性名的方法取消属性的有序性\\&amp;基本关系的性质：\\&amp;(1)列是同质的\\&amp;(2)不同列可出自同一个域\\&amp;(3)列顺序可无序\\&amp;(4)任意两个元组的候选码不能取同值\\&amp;(5)行的顺序可无序\\&amp;(6)分量必须取原子值\\&amp;这些规范中最基本的是每一个分量必须是一个不可分的数据项\\\\end{aligned}$$ 关系模式：必须指出这个元组集合的结构，即由哪些属性构成，属性来自哪些域，属性和域之间的映像关系$$\\begin{aligned}&amp;关系模式：R(U, D, DOM, F)\\&amp;R：关系名\\&amp;D：U中属性所来自的域\\&amp;DOM：属性向域的映射集合\\&amp;F：属性间数据的依赖关系\\\\end{aligned}$$关系模式是静态的、稳定的，而关系是的动态的、随时间变化的； 关系数据库:有型和值的区分 型：关系数据库模式，是对关系数据库的描述 值：关系模式在某一时刻对应的关系的集合 关系操作基本操作：查询、插入、删除、修改查询：选择、投影、连接、除、并、差、笛卡尔积；{选择、投影、并、差、笛卡尔积}是5种基本操作关系操作的特点：集合操作方式，一次一集合操作；非关系模型的数据操作为一次一记录方式 关系数据语言：关系代数、关系演算 关系代数：用对关系的运算来表达查询要求 关系演算：用谓词来表达查询要求，按谓词变元的基本对象是元组变量还是域变量分为元组关系演算和域关系演算 SQL(Structured Query Language)是集查询、数据定义语言、数据操纵语言和数据控制语言DCL(Data Control Language)于一体的关系数据语言 关系代数语言:ISBL 关系演算语言:元组关系演算语言：ALPHA、QUEL；域关系演算语言：QBE 关系代数&amp;关系演算-语言:SQL 关系的完整性：是对关系的某种约束条件，有三类约束：实体完整性：若属性A是基本关系R的主属性，则A不能取空值；关系数据库中每个元组是可区分的，是唯一的，这点用实体的完整性来保证实体完整性规则说明：（1）实体完整性是针对基本关系而言，一个基本表对应现实世界的一个实体集（2）现实世界中的实体是可区分的，即它们具有某种唯一标识（3）关系模型中以主码作为唯一性标识（4）主码中的属性即主属性不能取空值 参照完整性：定义外码与主码之间的引用规则$$\\begin{aligned}&amp;设F是基本关系R的一个或一组属性，但不是关系R的码，K_s是基本关系S的主码\\&amp;如果F与K_s相对应，则称F是R的外码，并称基本关系R为参照关系，基本关系S为被参照关系或目标关系\\&amp;关系R和S不一定是不同的关系\\&amp;目标关系S的主码与K_s和参照关系R的外码F必须定义在同一个（同一组）\\\\end{aligned}$$ 参照完整性规则$$\\begin{aligned}&amp;若属性（或属性组）F是基本关系R的外码，它与基本关系S的主码K_s相对应（基本关系R和S不一定是不同的关系），则对于R中每个元组在F上的值必须\\&amp;取空值 \\space 等于S中某个元组的主码值 \\space空值 \\space非空值\\\\end{aligned}$$ 用户定义的完整：与现实语义相结合关系代数：抽象的查询语言，使用对关系的运算来表达查询[运算对象、运算符、运算结果]；按运算符分为传统的集合运算和专门的关系运算传统的集合运算（二目运算）：并、差、交、笛卡尔积$$\\begin{aligned}&amp;设关系R和S具有相同的目n（即两个关系都有的n个属性）\\&amp;具有相应的属性取自同一个域，t是元组变量，t\\in R表示t是R的一个元组\\&amp;（1）并\\&amp;R \\cup S = { t | t\\in R \\vee t\\in S}\\&amp;（2）差\\&amp;R - S = { t | t\\in R \\wedge t\\notin S}\\&amp;（3）交\\&amp;R \\cap S = { t | t\\in R \\wedge t\\in S}\\&amp;（4）广义笛卡尔积\\&amp;R \\times S = { \\widehat{t_r t_s} | t_r\\in R \\wedge t_S\\in S}\\\\end{aligned}$$$\\large{R}$: A B C $a_1$ $b_1$ $c_1$ $a_1$ $b_2$ $c_2$ $a_2$ $b_2$ $c_1$ $\\large{S}$: A B C – – – $a_1$ $b_2$ $c_2$ $a_1$ $b_3$ $c_2$ $a_2$ $b_2$ $c_1$ $\\large{R\\cup S}$: A B C – – – $a_1$ $b_1$ $c_1$ $a_1$ $b_2$ $c_2$ $a_2$ $b_2$ $c_1$ $a_1$ $b_3$ $c_2$ $\\large{R\\cap S}$: A B C – – – $a_1$ $b_2$ $c_2$ $a_2$ $b_2$ $c_1$ $\\large{R\\times S}$: R.A R.B R.C – – – $a_1$ $b_1$ $c_1$ $a_1$ $b_1$ $c_1$ $a_1$ $b_1$ $c_1$ $a_1$ $b_2$ $c_2$ $a_1$ $b_2$ $c_2$ $a_1$ $b_2$ $c_2$ $a_2$ $b_2$ $c_1$ $a_2$ $b_2$ $c_1$ $a_2$ $b_2$ $c_1$ 专门的关系运算：选择、投影、连接、除运算（1）设关系模式为R($A_1$,$A_2$,$\\dots$,$A_n$)，它的一个关系为R $t\\in R$表示t是R的一个元组 t$[A_i]$表示元组中相应的属性$A_i$的一个分量（2）若$A={A_{i1}, A_{i2}, \\dots, A_{ik}}$ ，其中$A_{i1}, A_{i2}, \\dots, A_{ik}$是$A_1, A_2, \\dots, A_n$中的一部分，则$A$称为属性列或属性组 $t[A]=(t[A_{i1}], t[A_{i2}], \\dots, t[A_{ik}])$表示元组$t$在属性列$A$上诸多分量的集合 $\\overline{A}$则表示$A={A_{1}, A_{2}, \\dots, A_{n}}$中去掉$A={A_{i1}, A_{i2}, \\dots, A_{ik}}$后剩余的属性组（3）$R$为$n$目关系，$S$为$m$目关系，$t_r\\in R, t_s \\in S$，$\\widehat{t_r t_s}$ 为元组的连接（串接） 是一个$n+m$的元组（4）给定一个关系$R(X,Z)$，$X$和$Z$为属性组 $t[X]=x$，$x$在$R$中的象集：$Z_x={t[Z]|t\\in R, t[X]=x}$ 表示R中属性组X上的值为x的诸多元组在Z上的分量集合$\\large{R}$ $x$ $Z$ $x_1$ $Z_1$ $x_1$ $Z_2$ $x_1$ $Z_3$ $x_2$ $Z_2$ $x_2$ $Z_3$ $x_3$ $Z_1$ $x_3$ $Z_3$ $x_1$在$R$中的象集$Z_{x_1}={Z_1, Z_2, Z_3}$$x_2$在$R$中的象集$Z_{x_2}={Z_2, Z_3}$$x_3$在$R$中的象集$Z_{x_3}={Z_1, Z_3}$ （1）选择（限制）：在关系$R$中选择满足条件的诸多元组$\\sigma_{F}(R)={t|t\\in R \\cap F(t)=’True’}$ $F(t)=X_1 \\theta Y_1$ $\\theta$:比较远算符（2）投影：关系$R$选择出若干属性列组成新的关系$\\prod_A(R)={t[A|t \\in R}$ $A$是$R$的属性列投影之后不仅取消原关系中的某些列，而且还可能取消某些组 查询关系Student在所在属性上的投影$\\large{\\prod_{Sdept}(Stud)}$ $\\LARGE{b = \\prod_{Sdept}(a)}$ $\\LARGE{a}$ Sname Sdept Nick CS Cay CS John MA West IS $\\LARGE{b}$ Sdept – CS – MA – IS – （3）连接（$\\theta$连接）：从两个关系的笛卡尔积中选取属性间满足一定条件的元组$R\\mathop{\\bowtie}\\limits_{A \\theta B} S ={\\widehat{t_r t_s}|t_r \\in R \\cap t_s \\in S \\cap t_r[A] \\theta t_s[B]}$","link":"/2020/02/04/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E8%BF%B0/"},{"title":"数据结构查找算法","text":"查找1.顺序查找一般表（1）代码 12345678910typedef struct{ ElemType *elem; int tableLen;}SSTable;int searchSeq(SSTable ST, ElemType key){ ST.elem[e] = key; //设置哨兵 for(int i = 0; i&lt;ST.tableLen; i++) return i; //存在返回, 不存在返回1} （2）设置哨兵：可以不必判断是否越界，注意数据下表从1开始（3）ASL$$如果不能知道查找概率，可先对记录的查找概率进行排序，是表中的记录按查找概率从小到大\\ASL_{success} = \\sum_{i=1}^{n} P_i(n-i+1) = \\frac{n+1}{2}\\ASL_{unsuccess} = n+1\\$$（4）优缺点优点：对数据的存储无要求，顺序存储或者链式存储皆可缺点：当n较大，平均查找长度较大，效率低 有序表12345678910111213graph LRid1((10))--id2((20))id1((10)).--infinity,10id2((20))--id3((30))id2((20)).--infinity,20id3((30))--id4((40))id3((30)).--infinity,30id4((40))--id5((50))id4((40)).--infinity,40id5((50))--id6((60))id5((50)).--infinity,50id6((60))--60,=id6((60)).--infinity,60 （1）一旦查到某个元素大于该元素便停止查找（2）方框是虚构的节点，查找长度=方框上的圆环（3)ASL$$ASL_{success} = \\sum_{i=1}^{n} P_i(n-i+1) = \\frac{n+1}{2}\\ASL_{unsuccess} = \\sum_{j=1}^{n} Q_j(l_j-1) = \\frac{1+2+…+n+n}{n+1} = \\frac{n}{2} + \\frac{n}{n+1}\\$$ 折半查找（二分查找）12345678910111213graph LRid29((29))--id37((37))--id41((41))--id43((43))id43((43))--43,+infinityid43((43))--37,43id37((37))--id32((32))--id33((33))id32((32))--29,32id33((33))--33,37id33((33))--32,33id13((13))--id16((16))--id19((19))--19,29id19((19))--16,19id29((29))--id13((13))--id7((7))--id10((10))--10,13id10((10))--7,10id7((7))---infinity,7 （1）仅适用于顺序表（2）代码 12345678910111213int binarySearch(SeqList L, ElemType key){ int low, high, mid = 0, L.tableLen, 0; while(low &lt;= high){ mid = (low + high) / 2; if(L.elem[mid] == key) return mid; else if(L.elem[mid] key) high = mid - 1; else low = mid + 1; } return -1;} （3）ASL$$ASL = \\frac{1}{n}\\sum_{i=1}^{n} l_i = \\frac{1}{n}(11+22+…+h*2^{h-1}) = \\frac{n+1}{n} log_2(n+1)-1 = log_2(n+1)-1\\h=[log_2(n+1)]（向上取整）$$ 查找11low=7, high=43, mid=2911&lt;2912345678910111213graph 7--low1013161929--mid3233374143--high low=7, high=mid-1=19, mid=1311&lt;1312345678910111213graph 7--low1013--mid1619--high293233374143 low=7, high=mid-1=7, mid=1011712345678910111213graph 7--low--mid10--high131619293233374143 low=mid+1=10, high=10, mid=101010 ×12345678910111213graph 710--low--mid--high131619293233374143 没找到，停在low分块查找（1）将查找表分为若干子块，块内可以无序，但块之间有序的 12345678910111213141516graph id24((24))--id((索引块24,54,78,88))id21((21))id6((6))id11((11))id8((8))id22((22))id32((32))--id((索引块24,54,78,88))id31((31))id54((54))id72((72))--id((索引块24,54,78,88))id61((61))id78((78))id88((88))--id((索引块24,54,78,88))id83((83)) （2）ASL$$n:长度\\b:分块个数\\s:每块s个记录\\P:等概率\\ASL = L_I+L_S = \\frac{b+1}{2}+\\frac{s+1}{2}=\\frac{s^2+2s+n}{2s}\\s=\\sqrt{n},ASL=\\sqrt{n}+1\\采用折半查找：ASL=L_I+L_S=[log_2(b+1)]+\\frac{s+1}{2}（向上取整）$$ ###B树（多路平衡查找树）$$m阶B树或空树\\每棵子树至多m棵子树，最多包含m-1个关键字\\若根节点不是终端节点，至少两棵子树\\除根结点外所有非叶节点至少[\\frac{m}{2}]（向上取整）棵子树（关键字）\\$$ 123456789graph id[22]--id0[5,11]id[22]--id1[36,45]id0[5,11]--id00[1,3]id0[5,11]--id01[6,8,9]id0[5,11]--id02[13,15]id1[36,45]--id10[30,35]id1[36,45]--id11[40,42]id1[36,45]--id12[47,48,50,56]","link":"/2018/10/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/"},{"title":"数据结构基本概念","text":"数据结构的基本概念 1.数据 2.数据元素： 数据的基本单位，一个数据元素可有若干个数据项构成，数据项是不可分割的最小单位 3.数据类型 4.抽象数据类型(ADT[Abstract Data Type]): 数学模型在计算机的一种实现，包括数据对象、数据关系、基本操作，如建立一个有限状态机模型 5.数据结构：数据元素之间的关系称之为结构，数据结构包括三方面：逻辑结构、存储结构、数据运算(程序=算法+数据结构) 6.逻辑结构：数据间的逻辑关系，与数据存储独立，分为线性结构和非线性结构 12345678910111213141516171819graph TD逻辑结构--线性结构逻辑结构--非线性结构线性结构--一般线性表线性结构--受限线性表线性结构--线性表推广受限线性表--栈和队列受限线性表--串线性表推广--数组线性表推广--广义表非线性结构--非线性表非线性表--集合非线性表--树形结构非线性表--图形结构树形结构--一般树树形结构--二叉树图形结构--有向图图形结构--无向图 7.物理结构：数据元素的表示以及关系的表示，主要有：顺序存储、链式存储、索引存储、散列存储 8.算法评估 （1）特性：有穷、确定、可行、输入、输出 （2）时间复杂度：衡量算法随问题规模的增大，算法执行的时间增长的快慢 T(n)=O(f(n))，f(n)为算法运算频度，一般采用最坏情况下的时间复杂度 计算方法：取算法时间增长最快的函数项，忽略其系数 a加法规则： $$ T(n)=T_1(n)+T_2(n)=O(f(n))+O(g(n))=O(max(f(n),g(n))) $$ 多项式相加，只保留最高阶的项，且系数变为1 b乘法规则： $$ T(n)=T_1(n)*T_2(n)=O(f(n))*O(g(n))=O(f(n)*g(n)) $$ 多项式相乘，都保留 从左到右性能依次降低： $$ O(1)&lt;O(log_2n)&lt;O(n)&lt;O(nlog_2n)&lt;O(n^2)&lt;O(n^3)&lt;O(2^n) $$ 单循环体型： 例题1：计算下列程序的时间复杂度 1234int i,sum //执行1次sum=0 //执行1次for(i=0;i&lt;=n;i++)//int i=0执行1次，i&lt;=n执行n+2次，i++执行n+1次 sum+=i; //执行n+1次 时间分析： 该算法执行了3n+6个语句。 假设每个语句执行时间一致，均为常数t。则总时间 $$ T=(3n+6)*t $$ 随着问题规模n的增大，总时间的增长率与n的增长率一致，所以复杂度为 $$ O(n) $$ 结论： 复杂度是关于增长率的，所以可以直接忽视常数项 一般可以直接关注循环段基本操作语句 1sum+=i; 的执行次数 例题2： 1234int sum,i;sum=0;for (i = 1;i &lt;= n;i=2*i){ sum=sum+i; 时间分析： i 取值：1,2,4,8… 满足条件：2^𝑘 ≤ n K𝑙𝑜𝑔_2𝑛时， 跳出循环 所以循环体执行次数：⌈𝑙𝑜𝑔_2𝑛⌉ 故时间复杂度为O(logn).i 取值：1,2,4,8 多循环体型 两个运算法则：乘法规则（嵌套循环）、加法规则（若干循环） 例题3： 123456int x,y,i,j;for(i=1;i&lt;=n;i++) x++;for(i=1;i&lt;=n;i++) for(j=1;j&lt;=n;j++) y++; 两个循环体是独立的，采用加法规则： $$ T(n)=T_1(n)+T_2(n) $$ $$ =max(T_1(n),T_2(n)) =O(n^2) $$ 例题4： 1234int i,j,sum;for (i=1;i&lt;=n;i++) for(j=1;j&lt;=n;j=2*j) sum=sum+j; 两个循环体是嵌套的，采用乘法规则： $$ T(n)=T_1(n)*T_2(n) $$ $$ =O(nlogn) $$ （3）空间复杂度：衡量算法随问题规模的增大，算法所需空间的快慢 S(n)=O(g(n))，算法所需空间的增长率和g(n)的增长率相同 空间复杂度S(n)指算法运行过程中所使用的辅助空间的大小 线性表 1.定义：线性表是具有相同数据类型的n个数据类型的有限序列，n为表长 线性表中第一个元素称为表头元素，最后一个元素称为表位元素 除第一个元素外，每个元素仅有一个直接前驱，除最后一个元素外，每个元素有且仅有一个直接后继 顺序存储 线性表的顺序存储又称顺序表 使用一组地址连续的存储单元(数组等)依次存储线性表的数据元素，从而使得逻辑相邻的两个元素在物理位置上也相邻 三个属性： 1.存储空间的起始位置 2.顺序表最大存储容量 3.顺序表当前的长度 宏定义 静态分配大小 123456#define MaxSize 100typedef int Elemtypetypedef struct{Elemtype elem[MaxSize];int length;}SqList; 动态分配大小(这里动态指空间大小运行时决定，但分配大小后，空间大小被固定) 12345typedef int Elemtypetypedef struct{Elemtype *elem;int length;}SqList; 优点：访问效率高、存储密度高 缺点：插入删除操作复杂 顺序存储线性表操作 1.初始化顺序存储线性表 1234567int initLinklist(SqList &amp;L){ L.elem=new Elemtype[MaxSize];if(!L.elem) exit(OVERFLOWS);L.length=0;return OK;} （1）创建一个顺序存储表后，需要初始化，首先根据数组大小通过new在堆空间开辟一段连续的空间赋值于先前创建的顺序存储表的elem空间 （2）检查elem是否存在，不存在溢出退出程序 （3）将length元素赋值为0，即设置顺序存储线性表长度为0 2.销毁顺序存储线性表 1234void destroyList(SqList &amp;L){if(L.elem) delete(L.elem);} 如果线性表存在，删除线性表elem开辟的空间 3.清空顺序存储线性表 123void clearList(SqList &amp;L){L.length=0;} 将线性表的长度置为0 4.判断顺序存储线性表是否为空 123456bool isEmpty(SqList &amp;L){if(L.length==0) return 1;else return 0;} 判断线性表长度是否为0，并返回相应bool值 5.引用类型按下表获取顺序存储线性表元素 123456int getElem(SqList L,int i,type&amp;e){ if(i&lt;1||iL.length) return ERROR; e=L.elem[i-1]; return OK;} （1）先检查传递参数下标量是否正确 （2）通过访问elem内数据存入引用类型变量内 6.按下表获取顺序存储线性表元素 12345Elemtype getElem(SqList L,int i){ if(i&lt;1||iL.length) return ERROR; return L.elem[i-1];} （1）先检查传递参数下标量是否正确 （2）通过访问elem内数据并返回 7.引用类型按值查询顺序存储线性表元素下标 12345int locateElem(SqList L,Elemtype e,int &amp;i){ for(int i=0;i&lt;L.length;i++) if(L.elem[i]==e) return OK;} 按照elem开辟空间进行迭代，当迭代元素与目标元素值相等时，将迭代量赋值于引用类型下标变量 8.按值获取顺序存储线性表元素下标 12345int locateElem(SqList L,Elemtype e){ for(int i=0;i&lt;L.length;i++) if(L.elem[i]==e) return i;} 按照elem开辟空间进行迭代，当迭代元素与目标元素值相等时，将迭代量返回 9.按下标插入元素 123456789int listInsert(SqList &amp;L,type e,int i){ if(i&lt;1||iL.length) return ERROR; ++L.length; for(int j=L.length-1;j=i-1;j--) L.elem[j+1]=L.elem[j]; L.elem[i-1]=e; return OK;} （1）先检查传递参数下标量是否正确 （2）增加线性表长度 （3）按照目标元素位置，将其尾部元素后移1偏移量 （4）将目标元素存入下标位置 时间复杂度分析: （1） $$ 最好情况：在表尾插入(即i=n+1) $$ $$ 元素后移语句执行的时间复杂度为O(1) $$ （2） $$ 最坏情况：在表头插入(即i=1) $$ $$ 元素后移语句执行n次，时间复杂度为O(n) $$ （3） $$ 平均情况：假设p_i(p_i=1/(n+1)) $$ $$ 是第i个位置上插入一个结点的概率 $$ $$ 则在长度为n的线性表中插入一个节点是需要移动结点的平均次数为 $$ $$ \\begin{equation*} f = \\sum_{i=1}^{n+1}p_i(n-i-1) \\end{equation*} $$ $$ \\begin{equation*} =\\sum_{i=1}^{n+1}{\\frac{n+1}{n-i+1}} \\end{equation*} $$ $$ \\begin{equation*} =\\frac{1}{n+1} \\sum_{i=1}^{n+1}(n-i-1) \\end{equation*} $$ $$ =\\frac{1}{n+1}\\frac{n(n+2)}{2}=\\frac{n}{2} $$ $$ 因此顺序存储线性表的插入算法平均时间复杂度为O(n) $$ 10.按下标删除元素 123456789int listDelete(SqList &amp;L, int i) { if ((i &lt; 1) || (i L.length)) return ERROR; for (int j = i; i &lt;= L.length - 1; j++) { L.elem[j - 1] = L.elem[j]; --L.length; } return OK;} （1）先检查传递参数下标量是否正确 （2）按照目标元素位置，将其头部元素前移1偏移量 （3）减少线性表长度 时间复杂度分析: （1） $$ 最好情况：在表尾插入(即i=n) $$ $$ 无需移动元素，时间复杂度为O(1) $$ （2） $$ 最坏情况：在表头插入(即i=1) $$ $$ 需移动除第一个元素外的所有元素，时间复杂度为O(n) $$ （3） $$ 平均情况：假设p_i(p_i=1/(n+1)) $$ $$ 是第i个位置上插入一个结点的概率 $$ $$ 则在长度为n的线性表中插入一个节点是需要移动结点的平均次数为 $$ $$ \\begin{equation*} f = \\sum_{i=1}^{n}p_i(n-i) \\end{equation*} $$ $$ \\begin{equation*} =\\sum_{i=1}^{n}{\\frac{n}{n-i}} \\end{equation*} $$ $$ \\begin{equation*} =\\frac{1}{n} \\sum_{i=1}^{n}(n-i) \\end{equation*} $$ $$ =\\frac{1}{n}\\frac{n(n-1)}{2}=\\frac{n-1}{2} $$ $$ 因此顺序存储线性表的插入算法平均时间复杂度为O(n) $$ 11.创建顺序存储线性表 12345678910int createList(SqList &amp;L, int n) { type e; L.length = n; for (int i = 0; i &lt; n; i++) { cout &lt;&lt; &quot;Please in put an element:&quot;; cin e; L.elem[i] = e; } return OK;} 11.打印顺序存储线性表内元素 123456void printList(SqList L) { printf(&quot;\\nList's element：\\n&quot;); for (int i = 0; i &lt; L.length; i++) { cout &lt;&lt; &quot;elem[&quot; &lt;&lt; i &lt;&lt; &quot;] =&quot; &lt;&lt; L.elem[i] &lt;&lt; endl; }}","link":"/2018/10/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"},{"title":"数据结构栈和队列","text":"栈 栈(Stack)：只允许在一端插入或删除的线性表 栈顶：线性表允许进行插入或删除的那一端 栈底：固定的，不允许进行插入和删除的另一端 特点：是受限的线性表，拥有线性关系；后进先出LIFO 顺序栈 使用顺序存储，自底向上存储数据元素，指针指向栈顶元素的位置 操作 1234s.top = -1; //判空s.data[++s.top] = x; //进栈x = s.data[s.top--]; //出栈x = s.data[s.top]; //读取栈顶元素 共享栈 两个栈共享一个一维数组空间 两个栈分别设置在共享空间两端 栈顶指向中间延伸位置 有利于空间使用 链式栈 采用链式存储 便于多个栈共享存储空间 效率高 队列 允许在一端插入，另一端删除的线性表 队头：允许删除的一端 队尾：允许插入的一端 先进先出FIFO 顺序队列 连续的存储单元 头指针指向队头元素 尾指针指向队尾元素 循环队列 首尾相连的顺序存储的队列 操作 1234Q.rear = Q.front = 0; // 初始化rear = (rear + 1) % MaxSize; // 入队front = (front + 1) % MaxSize; // 出队queueLen = (rear + MaxSize - front) % MaxSize; // 队列长度 判断空队列或满队列 123456789// 使用一个单元区分队空或队满(Q.rear + 1) % MaxSize = Q.front; //Q.front = Q.rear; //// 类型中增加表示个数的数据成员Q.size = 0; //Q.size = MaxSize; //// 增加tag成员tag = 0; //tag = 1; // 链式队列双端队列 允许两端可以入队和出队 输出受限的双端队列：允许一端进行插入和删除，另一端只允许插入的双端队列 输入受限的双端队列：允许一端进行插入和删除，另一端只允许删除的双端队列 应用栈在括号匹配的应用算法思想 空栈，一次读入一个符号 右括号：使栈顶元素消解，或不合法（序列不匹配，退出程序） 左括号：放入栈顶，作为更高优先级的一个元素，栈为空，否则括号序列不匹配 栈在表达式中的应用 中缀表达式转换后缀表达式 栈在递归中的应用 原理：将原始问题转换为相同属性的小规模问题 求出递归表达式 边界条件（递归出口） 队列队列在层次遍历的应用队列在计算机系统中的应用 解决主机与外设之间速度不匹配的问题 解决多用户引起的资源竞争问题 特殊矩阵压缩存储数组的存储结构 行优先：先存储行号较小的元素，行号相等先存储列号小的元素 列优先：先存储列好较小的元素，列号相等先存储行号小的元素 n阶对称矩阵 上三角、主对角线、下三角，其中上下三角元素相同 通常不使用二维数组存储，使用一维数组存储，元素$a_{ij}$在数组中下标为$k$ 元素下标之间的对于关系$i \\ge j , k = \\frac{i*(i-1)}{2+j}-1(下三角区和主对角线元素)$$i &lt; j , k = \\frac{j*(j-1)}{2+i}-1(上三角区元素)$ n阶三角矩阵 下三角矩阵（上三角区元素为常量）和上三角矩阵（下三角矩阵元素为常量） 通常不使用二维数组存储，使用一维数组存储，元素$a_{ij}$在数组中下标为$k 下三角矩阵的的元素下表之间的对应关系","link":"/2018/10/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"},{"title":"数据结构简述","text":"数据结构绪论一、数据结构：相互存在一种或多种特定关系的集合 结构：任何问题，数据元素不孤立存在，之间存在关系 逻辑结构 存储结构（物理结构） 数据的运算 逻辑结构和存储结构密不可分 算法设计取决于逻辑结构，实现依赖存储结构 二、逻辑结构：数据元素之间的逻辑关系 与存储无关，独立于计算机 分为线性结构和非线性结构线性结构：线性表、栈、队列、串、数组、广义表非线性结构：树、二叉树、有向图、无向图 三、存储结构（物理结构）：数据结构在计算机中的映像 数据结构的表示 关系的表示 依赖于计算机语言 分为顺序存储、链式存储、索引存储、散列存储 1. 顺序存储：存储的物理位置相邻，逻辑上相邻的元素物理位置也相邻 优：实现随机存取、每个元素占用的内存少 缺：只能使用相邻的一块存储单元，产生较多的外部碎片 2.链式存储：存储的物理位置未必相邻，逻辑上的相邻的元素在物理位置上未必相邻，通过记录相邻元素的物理位置来找到相邻元素 优：无碎片产生、充分利用存储单元 缺：只能顺序存储 3. 索引存储：类似目录4. 散列存储：通过关键字直接计算出元素的物理地址四、数据运算五、算法的五个特征 有穷性：执行有限步后结束 确定性：每条指令都有确定的含义，相同输入得到相同的输出 可行性：通过实现的基本运算执行有限次得到确定的结果 输入：有零或多个输入 输出：一个或多个程序输出结果 六、算法的复杂度1. 时间复杂度：衡量算法随问题规模增大，算法执行时间增加的快慢2. 空间复杂度：衡量算法随问题规模增大，算法占用空间增加的快慢","link":"/2018/10/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%80%E8%BF%B0/"},{"title":"数据结构线性表","text":"线性表一、逻辑结构和基本操作1. 逻辑结构 具有相同数据类型的n个数据元素的有限序列，表长n，n=0为空表 表头：第一个元素 表尾：最后一个元素 除第一个元素外，每个元素有且仅有一个直接前驱 除最后一个元素外，每个元素有且仅有一个直接后继 2. 基本操作123456789initList(&amp;L);len(L);locateElem(L, i);getElem(L, i);listInsert(&amp;L, i, e);listDelete(&amp;L, i, &amp;e);printList(L);isEmptyList(L);destroyList(&amp;L); 二、顺序存储结构1. 定义：又称顺序表，使用一组地址连续的存储单元，依次存储线性表的数据元素，使逻辑上相邻的两个元素物理位置也相邻 存储空间的起始位置data[ ] 顺序表最大存储容量MaxSize 顺序表当前最大长度len特点 随机访存，O(1)时间复杂度访问 存储密度高，每个结点只存储数据元素 无需花费空间建立数据之间的逻辑关系，由物理位置相邻特性决定 逻辑上物理上均相邻，插入删除操作需要移动大量元素 2. 基本操作（1）插入元素 1234567891011//插入元素boolean listInsert(SqList &amp;L, int i, Elemtype e){ if(i &lt; 1 || i L.len + 1) return -1; if(L.len = MaxSize) return -1; for(int j = L.len; j i; j--) L.data[j] = L.data[j - 1]; L.data[i - 1] = e; L.len++;} 分析 最好情况：在表尾插入 **(i=n+1)**，不需要移动元素，时间复杂度为O(1) 最坏情况：在表头插入 **(i=1)**，元素后移n次，时间复杂度O(n) 平均情况：假设$P_i$ **($P_i = \\frac{1}{n+1}$)**，是在第i个位置上插入一个结点的概率，则在长度为n的线性表中插入一个结点所需移动的平均次数为$\\frac{n}{2}$，其时间复杂度为O(n)（2）删除元素12345678910//删除元素boolean listDelete(SqList &amp;L, int i, Elemtype e){ if(i &lt; 1 || i L.len + 1) return -1; e = L.data[i-1]; for(int j = i; j &lt; L.len; j++) L.data[j-1] = L.data[j]; L.len--; return true;} 分析 最好情况：在表尾插入 **(i=n)**，不需要移动元素，时间复杂度为O(1) 最坏情况：在表头插入 **(i=1)**，元素后移n次，时间复杂度O(n) 平均情况：假设$P_i$ **($P_i = \\frac{1}{n+1}$)**，是在第i个位置上插入一个结点的概率，则在长度为n的线性表中插入一个结点所需移动的平均次数为$\\frac{n-1}{2}$，其时间复杂度为O(n)（3）查找元素123456int locateElem(SqList &amp;L, Elemtype e){ int i; for(i = 0; i &lt; L.len; i++) if(e == L.data[i]) return i+1;} 分析 最好情况：查找的元素在表头，仅需比较1次，时间复杂度O(1) 最坏情况：查找的元素在表尾或不存在，需要比较n次，时间复杂度O(n) 平均情况：假设$P_i$ **($P_i = \\frac{1}{n}$)**是在第i个位置上结点的概率，则在长度为n的线性表中插入一个结点所需移动的平均次数为$\\frac{n+1}{2}$，其时间复杂度为O(n) 链式存储结构1.创建单链表（1）头插法 为新插入的结点分配内存空间 每次都是把插入的新结点放入表头(头结点位置) 链表结点的次序与输入的顺序相反 （2）尾插法 为新插入的结点分配内存空间 每次都是把插入的新结点放入表尾(尾结点位置) 链表中的结点顺序与输入顺序一致 2.按值查找结点 在链表中从第一个结点出发，顺指针next逐个向下搜索，直到找到第i个结点，否则返回最后一个结点的指针域NULL 3.按序号查找结点 从链表第一个结点开始，由前往后按照序号递增定位到相应结点的位置，返回该值，需检查序号是否越界 4.插入 插入操作是将值为x的新结点插入到单链表的第i个位置 先检查插入位置是否合法 找到待插入位置的前驱结点 在其后将结点插入123p = getElem(L, i-1)s-next = p-next;p-next = s; 5.删除 将单链表的第i个结点删除 先检查插入位置是否合法 找到待删除位置的前驱结点 删除其后结点1234p = getElem(L, i-1)q = p-next;q-next = p-next;free(q); 双链表 双链表有两个指针prior和next，分别指向前驱和后继结点 插入操作1234s-next = p-next;p-next-prior = s;s-prior = p;p-next = s; 删除操作123p-next = q-next;q-next-prior = p;free(q); 循环链表 循环双链表和循环单链表 静态链表使用数组来描述线性表的链式存储结构","link":"/2018/10/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BA%BF%E6%80%A7%E8%A1%A8/"},{"title":"环境配置Ubuntu22.04安装Nodejs","text":"run bash code1curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash - &amp;&amp;sudo apt-get install -y nodejs","link":"/2024/05/14/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AEUbuntu22.04%E5%AE%89%E8%A3%85Nodejs/"},{"title":"环境配置Ubuntu1804安装CUDA和Pytorch","text":"Init Ubuntu and change deb&amp;pip source12wget https://fastly.jsdelivr.net/gh/blueflylabor/_ebxeax.github.io@0.0/toolbox/initUbuntu/initUbuntu.shbash ./initUbuntu.sh CUDA11.61234567wget https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-wsl-ubuntu.pinsudo mv cuda-wsl-ubuntu.pin /etc/apt/preferences.d/cuda-repository-pin-600wget https://developer.download.nvidia.com/compute/cuda/11.6.2/local_installers/cuda-repo-wsl-ubuntu-11-6-local_11.6.2-1_amd64.debsudo dpkg -i cuda-repo-wsl-ubuntu-11-6-local_11.6.2-1_amd64.debsudo apt-key add /var/cuda-repo-wsl-ubuntu-11-6-local/7fa2af80.pubsudo apt-get updatesudo apt-get -y install cuda Load library path1234gedit ~/.bashrcexport PATH=/usr/local/cuda/bin:$PATHexport LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATsource ~/.bashrc Test nvidia-smi1nvidia-smi Test nvcc -V1nvcc -V Pytorch1pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113 get file when network worse12345wget https://download.pytorch.org/whl/cu113/torch-1.10.2%2Bcu113-cp36-cp36m-linux_x86_64.whlwget https://download.pytorch.org/whl/cu113/torchvision-0.11.3%2Bcu113-cp36-cp36m-linux_x86_64.whlwget pip3 install ./torch-1.10.2+cu113-cp36-cp36m-linux_x86_64.whlpip3 install ./torchvision-0.11.3+cu113-cp36-cp36m-linux_x86_64.whl","link":"/2021/04/06/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AEUbuntu1804%E5%AE%89%E8%A3%85CUDA%E5%92%8CPytorch/"},{"title":"计算机组成原理Cache和主存的映射替换算法和写策略","text":"Cache和主存的映射·替换算法·写策略映射Cache行中的信息是主存某个块的副本地址映射：将主存地址空间映射到Cache地址空间，按某种规则将主存的信息装入CacheCache的行数比主存块少的多，只有一部分主存块的信息可以装入Cache中，因此在Cache中需要为每块加一个标记，指明它是主存的哪一块的副本，此标记相当于主存块的编号。为了说明Cache行中的信息是否有效还需要一个有效位，地址映射以下3种： 直接映射 全相联映射 组相联映射 直接映射Cache 行号 = 主存块号 mod Cache 总行数假设 Cache : $2^c$行 主存 : $2^m$块$0,2^c,2^{c+1},\\dots$块映射到第0行$1,2^c+1,2^{c+1}+1$块映射到第1行低c位为装入的Cache行号，给每行设置一个长为t=m-c的标记，当某个主存块调入Cache后，将主存块号的高t位设置为对应Cache行中的标记 t c b 标记 Cache行号 块内地址 CPU访存过程： 根据访存地址中间的c位找到对应Cache行 Cache行标记与主存地址高t位标记比较，确定是否有效 相等且有效位为1，访问Cache命中，根据主存地址低b位的块内地址，在对应Cache行中存取信息 不相等或有效位为0，不命中，CPU将主存读出该地址所在的一块信息送到相应的Cache行中，置有效位1，并将标记设置为地址高t位，同时将地址中的内容送CPU 全相联映射主存的每一块可以装入Cache中的任何位置，每行标记用于指出该行取自主存的哪一块，CPU访存时需要与所有Cache行的标记进行对比 t b 标记 块内地址 组相联映射将Cache分为Q个大小相等的组，每个主存块可以装入固定组的任意一行，即组间采用直接映射，而组内采用全相联映射，Q=1变为全相联映射，Q=Cache行数变为直接映射假设r个Cache行，则称之为r路组相联映射Cache组号=主存块号 mod Cache组数(Q) t g b 标记 组号 块内地址 CPU访存： 根据访存地址中间的g位组号找到对应的Cache组 将对应的Cache组的每个行标记与主存的高t位标记进行比较 相等且有效位为1，命中，根据主存地址中的低b位块内地址，在对应的Cache行中存取信息 不相等或有效位为0，未命中，CPU从主存读出该地址所在的一块信息送到对应的Cache组的任意一个空行，有效位置1，设置标记，同时将地址中的内容送CPU 替换算法在采用全相联映射或组相联映射方式时，主存向Cache传送一个新块，Cache或Cache组空间已满替换的策略 RAND FIFO LRU 写策略因为Cache中的内容是主存块副本，当对Cache中的内容进行更新时，就需选用写操作策略，使Cache内容和主存保持一致对于Cache写命中： 全写法：当CPU对Cache写命中时，必须八数据同时写入Cache和内存。当某一块需要替换时，不必把这一块写回主存，用新调入的块直接覆盖。 回写法：当CPU对Cache写命中时，只把数据写入Cache，而不立即写入主存，只有当此块被换出时，才写入主存。每个Cache行设置一个修改位（脏位），若修改位为1，Cache行被修改过，替换时需要写回主存，若为0，则说明Cache行中的块未被命中，替换时无需写回 对于Cache写不命中： 写分配法：加载主存中的块到Cache中，然后更新这个Cache块 非写分配法：只写入主存，不进行调块","link":"/2019/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86Cache%E5%92%8C%E4%B8%BB%E5%AD%98%E7%9A%84%E6%98%A0%E5%B0%84%E6%9B%BF%E6%8D%A2%E7%AE%97%E6%B3%95%E5%92%8C%E5%86%99%E7%AD%96%E7%95%A5/"},{"title":"考研英语作文模板","text":"The visual representation illustrated is highly relatable among a great number of individuals and depicts the image sth Upon critically analysing this photo most individuals would agree that the topic is a contentious issue which needs additional consideration Therefore we should seriously discuss this important issue Why is such a phenomenon A couple of reasons could account for itGoing forward to pay attention to this topic we can see where the society is going ride on the trend of the times and turn our people’s longing for a better life into reality Quite the opposite the indifference to this topic in variably just kind of nudges us off life path and if it remains unresolved Sometimes we can dangerous lost down pretty dark corridors With all issues considered from the discussion in the essay We should put our ideas into concrete and practical actions to ensure that issue of topic diminishes through systematic practices We are supposed to enrich our horizons and promote the publicity of this issue Thus trough social media platforms awareness can hopefully be raised in a shot amount of time reaching a range of people","link":"/2023/10/06/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF/"},{"title":"计算机组成原理指令系统","text":"指令系统指令系统是指令集体系结构ISA的核心ISA主要包括： 指令格式 数据类型及格式 操作数的存放方式 程序可访问的寄存器个数、位数和编号 存储空间大小和编址方式 寻址方式 指令执行过程的控制方式等 指令的基本格式一条指令包括操作码和地址码字段 操作码 地址码 操作码: 指出指令应执行的操作 识别指令 了解指令功能 区分操作数地址内容的组成和使用方法 地址码： 给出被操作的信息的地址 参加运算的一个或多个操作数所在的地址 运算结果的保存地址 程序的转移地址 被调用的子程序的入口地址等 指令长度是指一条指令中包含的二进制代码的位数指令字长取决于 操作码的长度 操作数地址码的长度 操作数地址个数 单字长指令：等于机器字长半字长指令：一半机器字长双字长指令：二倍机器字长定长指令字结构：一个指令系统所有指令的长度都是相等的 零地址指令：无显示地址 OP 不需要操作数的指令 零地址运算指令仅用于堆栈计算机，通常参与运算的两个操作数隐含的从栈顶和次栈顶弹出，送至运算器，运算结果再隐含的压入堆栈 一地址指令： OP $A_1$ OP($A_1$) $\\to$ $A_1$ 只有目的操作数，按$A_1$地址读取操作数，进行OP操作后，结果存回原地址 (ACC)OP($A_1$) $\\to$ ACC 隐含约定目的地址的双操作数指令，按指令地址$A_1$地址读取操作数，指令可隐含约定另一个操作数由ACC提供，运算结果也将存放在ACC中 若指令长度为32位，操作码占8位，1个地址码字段占24位，指令操作数直接寻址范围$2^{24}=16M$ 二地址指令 OP $A_1$ $A_2$ ($A_1$)OP($A_2$) $\\to$ $A_1$ 常用的算术和逻辑运算指令，需要两个操作数，需要分别给出目的操作数和源操作数，其中目的操作数地址还用于存放本次运算结果 指令字长位32位，操作码占8位，两个地址码各占12位，则指令操作数的直接寻址范围$2^{12}=4K$ 三地址指令 OP $A_1$ $A_2$ $A_3$(结果) ($A_1$)OP($A_2$) $\\to$ $A_3$ 指令字长位32位，操作码占8位，3个地址码各占8位，直接寻址范围$2^8=256$，地址字段为主存地址，则完成一条三地址需要4次访存，取指令1次，取两个操作数2次，存放结果1次 四地址指令 OP $A_1$ $A_2$ $A_3$ $A_4$ ($A_1$)OP($A_2$) $\\to$ $A_3$ ，$A_4$ = 下一条执行指令的地址 地址字长为32位，操作码占8位，4个地址码各占6位，直接寻址范围$2^6=64$ 定长操作码指令格式在指令字的最高位部分分配固定的若干位（定长）表示操作码。n位操作码字段的指令系统最大能表示$2^{n}$条指令 扩展操作码指令格式 不允许短码是长码的前缀 各指令的操作码一定不能重复 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 操作码情况 OP $A_1$ $A_2$ $A_3$ 说明 15条三地址 0000-1110 余出16-15=1，1*2^4=16种 12条二地址 1111 0000-1011 余出16-12=4，4*2^4=64种 62条一地址 1111 (1100-1110)/1111 (0000-1111)/(0000-1101) 余出64-62=2，2*2^4=32种 32条零地址 1111 1111 1110-1111 0000-1111 指令的操作类型 数据传送 算术和逻辑运算 移位 转移 输入输出 指令寻址方式确定本条指令的数据地址以及下一条待执行指令的地址，分为： 指令寻址：寻找下条要执行的指令（1）顺序寻址通过PC+(1)，自动形成下一条指令（2）跳跃寻址通过转移指令实现，下条指令的地址不由PC自动给出，而由本条指令给出下条指令地址的计算方式。是否可跳跃受到状态寄存器和操作数的控制，跳跃的结果是当前指令修改PC值，下一条指令仍通过PC给出 数据寻址：寻找本条指令的数据通常在指令字中设一个字段指明寻址方式 操作码 寻址特征 形式地址A 常见数据寻址方式隐含寻址不明显的给出操作数，在指令中隐含操作数地址 优：有利于缩短指令字长 缺：需要增加存储操作数或隐含地址的硬件 立即（数）寻址指令的地址字段指出的不是操作数地址，而是操作数本身，又称立即数，#表示立即寻址特征，使用补码表示 优：指令在执行阶段不访问主存，指令执行时间最短 缺：A的位数限制立即数的范围 直接寻址指令中的形式地址A是操作数的真实地址EA，EA=A 优：简单，访存1次，不需要专门计算操作数的地址 缺：A的位数决定了指令操作数的寻址范围，操作数的地址不易修改 间接寻址指令的地址字段给出的形式地址不是操作数的真正地址，而是操作数有效地址的存储单元地址，EA=(A)，间接寻址可以迭代多次间接寻址，主存第一位表示是否为多次间址 优：可扩大寻址范围（有效地址EA的位数大于形式地址A的位数），便于编制程序（用间址寻址可方便的完成子程序返回） 缺：访问速度慢 寄存器寻址指令字中直接给出操作数所在的寄存器编号EA= $R_i$，操作数在由$R_i$所指的寄存器内 优：指令执行阶段不访存，只访问寄存器，寄存器对应地址码长度较小，使得指令字短且因不用访存，所以执行速度快，支持向量/矩阵运算 缺:寄存器昂贵，有限 寄存器间接寻址寄存器$R_i$中给出的不是一个操作数，而是操作数所在主存单元的地址EA=($R_i$) 优：与一般间址寻址速度快 缺：需要访存 相对寻址PC的内容加上指令格式的形式地址A而形成操作数的有效地址EA=(PC)+A，A是相对于当前PC的值的位移量，可正可负，用补码表示，A的位数决定寻址范围 操作数的地址是不固定的，随PC的值变化而变化，且与指令地址之间相差一个固定值，便于程序浮动，广泛用于转移指令 JMP A，CPU从存储器取出一字节，自动执行(PC)+1 $\\to$ PC，若转移指令的地址为X，且占2B，取出该指令后，PC自增2，(PC)=X+2，执行完该指令，会自动跳转至X+2+A的地址继续执行 基址寻址将CPU的基址寄存器BR的内容加上指令格式的形式地址A形成操作数的有效地址EA=(BR)+A，基址寄存器可采用专用寄存器也可为通用寄存器 基址寄存器面向操作系统，内容通过操作系统或管理程序确定，主要用于解决程序逻辑空间与存储器物理空间的无关性 执行过程中基址寄存器内容不变，形式地址可变（偏移量） 采用通用寄存器作为基址寄存器，用户可决定使用哪个寄存器，内容由操作系统确定 优：可扩大寻址范围（基址寄存器位数大于形式地址A的位数），用户不必考虑自己的程序存于主存哪个区域，有利于多道程序设计，可用于制成浮动程序 缺：偏移量位数较短 变址寻址有效地址EA等于指令字中的形式地址A与变址寄存器IX的内容之和，EA=(IX)+A IX可使用专用寄存器或通用寄存器 变址寄存器面向用户，在程序执行过程，变址寄存器内容可由用户改变（作为偏移量），形式地址A不变（作为基地址） 可扩大寻址范围（变址寄存器位数大于形式地址A的位数），适合编制循环程序，偏移量的位数（IX）足以表示整个存储空间 堆栈寻址堆栈是存储器（或专用寄存器组）中一块特定的、按照后进先出（LIFO）的原则管理的存储区，存储区读写单元地址是用一个特定寄存器给出的称为堆栈指针(SP)，分为硬堆栈（不适合做大容量堆栈）和软堆栈（主存划出一段区域） 寻址方式 有效地址 访存次数 隐含寻址 程序指定 0 立即寻址 A是操作数 0 直接寻址 EA=A 1 一次间接寻址 EA=(A) 2 寄存器寻址 EA= $R_i$ 0 寄存器间接一次寻址 EA = ($R_i$) 1 相对寻址 EA=(PC)+A 1 基址寻址 EA=(BR)+A 1 变址寻址 EA=(IX)+A 1","link":"/2019/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/"},{"title":"计算机组成原理中央处理器","text":"中央处理器控制器：负责协调并控制计算机各部件执行程序的指令序列：取指令、分析指令、执行指令运算器：对数据加工 指令控制 操作控制 数据加工 时间控制 中断处理 基本结构运算器和控制器两大部分组成运算器： 算术逻辑单元（ALU） 暂存寄存器 累加寄存器（ACC） 通用寄存器组（AX/BX/CX/DX/SP） 程序状态字寄存器（PSW：OF/SF/ZF/CF） 移位器 计数器 控制器（CU）： 程序计数器（PC） 指令寄存器（IR） 指令译码器 存储器地址寄存器 存储器数据寄存器 时序系统 微操作信号发生器 指令执行过程指令周期CPU从主存取出并执行一条指令的时间，指令周期通常使用若干机器周期表示，每个机器周期可等长或不等，一个机器周期包含若干时钟周期（节拍），每个机器周期内的时钟周期数可以不等 无条件转移指令：执行阶段不需要访存，只包含取指阶段（取指和分析）和执行阶段 间接寻址指令：为了取操作数，需要先访1次，取出有效地址，然后访存，取出操作数，所有需要包含间址周期，介于取指和执行之间 CPU采用中断方式实现主机和I/O设备的信息交换，CPU在每条指令结束前，都要发送中断查询信号，若有中断请求，CPU进入中断响应阶段（中断周期） 取指周期 间址周期 执行周期 中断周期 只有访存的目的不同，取指周期是为了取指令，间址周期是为了取有效地址，执行周期是为了取操作数，中断周期是为了保存程序断点CPU内设置了4个标志触发器FE/IND/EX/INT FE IND EX INT Fetch Index Execute Interrupt 取值 间址 执行 中断 指令周期的数据流取指周期根据PC中的内容从主存取出指令代码放入IR PC $\\to$ IR $\\to$ AddrBus $\\to$ Mem CU $\\to$ DataBus $\\to$ MDR $\\to$ Mem Mem $\\to$ DataBus $\\to$ MDR $\\to$ IR（存放指令） CU $\\stackrel{SignalControl::FE}{\\longrightarrow}$ [(PC) + 1 $\\to$ PC] 间址周期取操作数有效地址，间址为例：指令中的地址码送到MAR并送至地址总线，CU向存储器发送读命令，以获取有效地址并存在MDR Addr(IR) / MDR $\\to$ MAR $\\to$ AddrBus $\\to$ Mem CU $\\stackrel{SignalI/O::READ}{\\longrightarrow}$ ControlBus $\\to$ Mem（存放有效地址） Mem $\\to$ DataBus $\\to$ MDR 执行周期取操作数，根据IR的指令字的操作码通过ALU操作产生执行结果 无统一的数据流向 中断周期处理中断请求，假设程序断点存入堆栈，用SP指示栈顶地址，入栈操作是先修改栈顶指针，后存入数据 CU $\\stackrel{SignalStack::SP}{\\longrightarrow}$ [(SP) - 1 $\\to$ SP] $\\to$ MAR $\\to$ AddrBus $\\to$ Mem CU $\\stackrel{SignalI/O::WRITE}{\\longrightarrow}$ ControlBus $\\to$ Mem PC $\\to$ MDR $\\to$ DataBus $\\to$ Mem（程序断点存入主存） CU $\\to$ PC（中断服务程序的入口地址送至PC） 指令执行方案 单指令周期 多指令周期 流水线方案 数据通路功能数据通路：数据在功能部件之间传输的路径由控制部件控制，控制部件根据每条指令功能的不同生成对数据通路的控制信号数据通路功能：实现CPU内部的运算器与寄存器以及寄存器之间的数据交换 基本结构 CPU内部单总线模式所有寄存器的输入输出端都连接在一条公共通路上，结构简单但数据传输存在较多的冲突现象，性能较低。连接各部件的总线只有一条时，称为单总线结构，CPU中有两条或更多的总线时，构成双总线结构或多总线结构 CPU内部多总线模式所有寄存器的输入输出端都连接在多条公共通路上，相比之下单总线在一个时钟内只允许传一个数据，因此指令执行效率很低，因此在多总线方式，同时在多总线上传输不同的数据，提高效率 专用数据通路方式根据指令执行过程中的数据和地址的流动方向安排连接线路，避免使用共享的总线，性能较高，但硬件量大 寄存器之间的数据传输通过内部总线完成寄存器AX的输入输出由AXout和AXin控制 (PC) $\\to$ MAR，PCout和MARin有效 主存与CPU之间的数据传输主存与CPU之间的数据传输需要借助CPU内部总线完成主存内读取 (PC) $\\to$ MAR，PCout和MARin有效 1 $\\to$ R，CU发出读命令 MEM(MAR) $\\to$ MDR，MDRin有效 (MDR) $\\to$ IR，MDRout和IRin有效 执行算术或逻辑算术由于ALU没有内部存储功能，执行加法操作，相加的两个数必须在ALU的两个输入输出端同时有效 (MDR) $\\to$ MAR，MDRout和MARin有效 1 $\\to$ R，CU读命令 MEM(MAR) $\\to$ 操作数从主存送至MDR (MDR) $\\to$ Y，MDRout和Yin有效 (ACC) + (Y) $\\to$ Z ACCout和ALUin有效 (Z) $\\to$ ACC，Zout和ACCin有效 控制器功能与原理结构和功能 运算器部件通过数据总线与内存储器、输入设备和输出设备传送数据 输入设备和输出设备通过接口电路与总线相连接 内存储器、输入设备通过接口电路与总线相连接 内存储器、输入设备和输出设备从地址总线接收地址信息，从控制总线得到控制信号，通过数据总线与其他部件传输数据 控制器部件从数据总线接受指令信息，从运算器部件接收指令转移地址，送出指令地址到地址总线，还要向系统中的部件通过运算所需的控制信号 控制器功能： 从主存取指令，并指出下一条指令在主存中的位置 对指令进行译码或测试，产生相应的操作控制信号，以便启动规定的动作 指挥并控制CPU、主存、输入输出设备之间的数据流动方向 根据控制器产生微操作控制信号的方式不同，控制器可分为 硬布线控制器 微程序控制器 两类控制器的PC和IR是相同的，但确定和表示指令执行步骤的办法以及给出控制部件各部件运算所需控制信号的方案不同 硬布线控制器 根据指令的要求、当前的时序及外部和内部的状态，按时间的顺序发送一系列微操作控制信号 由复杂的组合逻辑门电路和一些触发器构成 硬布线控制单元指令的操作码是决定控制单元发出不同操作命令（控制信号）的关键CU的输入信号来源： 经指令译码器译码产生的信息指令 时序系统产生的机器周期信号和节拍信号 来自执行单元的反馈信号（标志） 系统总线（控制总线）控制信号（中断请求、DMA请求） 硬布线控制器的时序系统及微操作 时钟周期用时钟信号控制节拍发生器，可以产生节拍，每个节拍的宽度对应一个时钟周期，每个节拍内机器可以完成一个或几个需要同时执行的操作 机器周期是所有指令执行过程的一个基准时间，访问一次存储器的时间是固定的，因此通常以存取周期作为基准时间，即内存中读取一个指令字的最短时间作为机器周期，在存储字长等于指令字长前提下，取指周期视为机器周期 指令周期 微操作命令分析控制单元具有发出各种操作命令（控制信号）序列的功能，这些命令与指令有关 执行过程，一条指令分为3个工作周期：取指周期、间址周期、执行周期 取指周期 (PC) $\\to$ MAR 1 $\\to$ R M(MAR) $\\to$ MDR (MDR) $\\to$ IR OP(IR) $\\to$ CU (PC) + 1 $\\to$ PC 间址周期 Addr(IR) $\\to$ MAR 1 $\\to$ R M(MAR) $\\to$ MDR 执行周期 非访存指令 访存指令 CPU控制方式 同步控制方式具有统一的时钟，所有控制信号均来自统一的时钟信号 异步控制方式不存在基准时标信号，各部件按自身固有的速度工作，以应答方式联络 联合控制方式大部分采用同步控制，小部分采用异步控制 微程序控制器采用存储逻辑实现,把微操作信号代码化,使每条机器指令转化为一段微程序并存入一个专门的存储器（控制存储器），微操作控制信号由微指令产生 基本概念 微操作和微命令一条机器指令可以分解为一系列微操作序列，微操作是计算机中最基本、不可再分解的操作；微程序控制的计算机中，将控制部件向执行部件发出的各种控制命令称为微命令，是构成控制系列的最小单位微命令有相容性和互斥性 微指令和微周期微指令是若干微命令的集合，存放微指令的控制存储器的单元地址称为微地址一条微地址包括：（1）操作控制字段（微操作码）：用于产生某一步操作所需的各种操作控制信号（2）顺序控制字段（微地址码）：用于控制产生下一条要执行的微指令地址微周期是执行一条微指令所需的时间，通常为一个时钟周期 主存储器和控制存储器主存储器M，用于存放程序和数据，在CPU外部，用RAM实现控制存储器CM，用于存放微程序，在CPU内部，用ROM实现 程序和微程序程序是指令的有序集合，用于完成某些特定的功能微程序是微指令的有序集合，一条指令的给你由一段微程序实现微程序和程序是两个不同的概念，微程序由微指令组成，描述机器指令，微程序实质是机器指令的实时解释器，由计算机设计者实现编制并存放于控制存储器CM中，无需知道，而程序最终由机器指令组成，由软件设计人员事先编制并存放于主存储器或辅助存储器 MAR 存放主存的读写地址 CMAR 存放控制存储器的读写微指令地址 IR 存放从主存中读出的指令 CMDR/$\\mu$IR 存放控制存储器中读出的微指令 组成&amp;过程 控制存储器：存放各指令对应的微程序 微指令寄存器：用于存放从CM中取出的微指令，位数同微指令字长相等 微地址形成部件：产生初始微地址和后继微地址，以保证微指令的连续执行 微地址寄存器：接收微地址形成部件送来的微地址，为在CM中读取微指令作准备 在微程序控制器的控制下计算器执行机器指令的过程： 执行取微指令：自动将取指微程序的入口地址送入CMAR，从CM中读取相应的微指令送入CMDR（取指微程序的入口地址一般为CM的0号单元，当取指微程序执行完成，从主存取出的机器指令就已经存入指令寄存器中） 由机器指令的操作码字段通过微地址形成部件产生该机器指令对应的微程序入口地址，并送入CMAR 从CM中逐条读取对应的微指令并执行 执行完对应于一条机器指令的一个微程序后，又回到取指微程序的入口地址，继续第一步 微程序和机器指令：一条机器指令对应一个微程序，由于机器指令的取指令操作都是相同的，因此可将取指令操作的微命令统一编制为一个微程序，这个微程序只负责将指令从主存单元取出送入指令寄存器，也可编制对应的间址周期和中断周期的微程序控制存储器CM中的微程序个数 = 机器指令数+取指+间址+中断 编码方式又称微指令的控制方式，如何对微指令的控制字段进行编码，以形成控制信号 直接编码（直接控制）无需进行译码，微指令的微命令字段中每位代表一个微命令，设计微指令，选用某个微命令只需将微命令对应的字段设置为1或0优：简单直观速度快缺：微指令字长过长，n个微命令要求微指令的操作字段有n位，造成控制存储器容量极大 字段直接编码将微指令的微命令字段分成若干小字段，互斥性微命令组合在同一字段，相容性微命令组合在不同字段，每个字段独立编码，每种编码代表一个微命令且各字段编码含义单独定义，与其他字段无关优:可以缩短微指令字长缺：需要通过编译电路后发出微命令，较直接编译慢 地址形成方式 直接由微指令的下地址字段指出，微指令格式中设置一个下地址字段，由微指令的下地址字段直接指出后继微指令的地址（断定方式） 根据机器指令的操作码形成，机器指令取至指令寄存器后，微指令的地址由操作码经微地址形成部件形成 增量计算器法：(CMAR) + 1 $\\to$ CMAR 根据各种标志决定微指令分支转移地址 通过测试网络形成 由硬件直接产生微程序入口地址 格式 水平型：直接编码、字段直接编码、字段间接编码、混合编码 $A_1$ $A_2$ $\\dots$ $A_{n-1}$ $A_{n}$ 判断测试字段 后继地址字段 操作控制 顺序控制 优：微程序短，执行速快缺：微指令长，编写微程序复杂 垂直型：采用类似机器指令操作码的方式，在微指令中设置微操作码字段，采用微操作码编译法，由微操作码规定微指令的功能 $\\mu$OP Rd Rs 微操作码 目的地址 源地址 优：微指令短、简单、规整，便于编写微程序缺：微程序长，执行速度慢，工作效率低 混合型在垂直型的基础上增加一些不太复杂的并行操作 水平型 垂直型 并行能力 并行能力强、灵活性高、效率高 较差 执行时间 短 长 长度 微指令字较长，微程序较短 微指令字较短，微程序较长 难易程度 难 易 动态微程序设计和毫微程序设计 动态微程序设计：根据用户的要求改变微程序，需要可写控制寄存器，使用EPROM 毫微程序设计：硬件不由微程序直接控制，通过存放在第二级控制存储器中的毫微程序来解释 微程序控制器和硬布线控制器比较 微程序控制器 硬布线控制器 工作原理 微操作控制信号以微程序的形式存放在控制存储器中，执行指令时读出即可 微操作控制信号由组合逻辑电路根据当前的指令码、状态和时序，即时产生 执行速度 慢 快 规整性 较规整 烦琐、不规整 应用场合 CISC CPU RISC CPU 易扩充性 容易 困难 异常（内中断）和中断异常是由CPU内部产生的意外事件，分为硬故障中断和程序性异常硬故障中断：是由硬连线出现异常引起（存储器校验异常、总线错误）程序性异常（软件中断）：CPU内部因执行指令而引起的（整除0、溢出、断点、单步跟踪、非法指令）按照异常发生的原因和返回方式，可进一步分为故障、自陷、终止 故障（Fault）引起故障的指令启动后、执行结束前被检测到的异常，因为无法通过异常处理程序恢复故障，因此不能回到原断点处执行，必须终止进程的执行 自陷（Trap）事先安排的一种异常事件，事先在程序中用一条特殊指令或通过某种方式设定特殊控制标志人为设置一个陷阱，当执行到被设置了陷阱的指令时，CPU在执行陷阱指令后，自动根据不同的陷阱类型进行相应的处理，然后返回到自陷程序下一条指令执行。当自陷指令是转移指令时，并不是返回到下一条指令执行，而不是返回到转移目标指令执行 终止（Abort）如果在执行指令的过程中发生了使计算机无法继续执行的硬件故障，程序将无法继续执行，只能终止，此时调出中断服务程序来重启系统，终止异常和外中断属于硬件中断 中断是来自CPU外部、与CPU执行指令无关的事件引起的中断中断的分类： 可屏蔽中断通过可屏蔽中断请求线INTR向CPU发出中断请求，CPU可通过设置相应的屏蔽字来屏蔽或不屏蔽某个中断 不可屏蔽中断通过专门的不可屏蔽中断请求NMI向CPU发出的中断请求，通常是非常紧急的硬件故障 中断和异常的不同： 缺页或溢出等异常事件是由特定指令在执行过程中产生的，而中断不和任何指令相关联，也不阻止任何指令的完成 异常的检测由CPU完成，不通过外部的某个信号通知CPU，中断CPU必须通过中断请求线获取中断源信息，才能知道哪个设备发生了何种中断 异常和中断响应过程 关中断 保存断点和程序状态 识别异常和中断并转到相应的处理程序（软件识别和硬件识别） 软件识别：CPU设置一个异常状态寄存器，用于记录异常原因，操作系统使用一个统一的异常和中断查询程序，按优先级顺序查询异常状态寄存器，以检查异常和中断类型，先查询到的先处理，然后转到内核中相应的处理程序 硬件识别（向量中断）：异常或中断处理程序的首地址称为中断向量，所有中断向量都存放于中断向量表中，每个异常或中断都被指定一个中断类型号，在中断向量表内，类型号和中断向量一一对应 指令流水线从两方面提高处理机的并行性： 时间并行：流水线技术 空间并行：超标量处理机 指令流水的定义一条指令的执行过程分解为几个阶段，每个阶段由相应的功能部件完成 取指IF 译码/读寄存器ID 执行/计算地址EX 访存MEM 写回WB","link":"/2019/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/"},{"title":"计算机组成原理数据表示与运算","text":"数据表示和运算进制 r进制 $K_{n} K_{n-1} K_{n-2} \\dots K_{0} K_{-1} \\dots K_{-m}$数值表示 $K_{n} r^{n} + K_{n-1} r^{n-1} + \\dots + K_{0} r^{0} + K_{-1} r^{-1} + \\dots + K_{-m} r^{-m} = \\sum_{i=n}^{-m} K_{i} r^{i}$ 二进制$01 \\space r=2$ 八进制$01234567 \\space r=8=2^3$ 十六进制$0123456789ABCDEF \\space r=16=2^4$ 进制转换4位二进制数码与1位十六进制数码相对应3位二进制数码与1位八进制数码相对应 原反补移 原码 反码 补码 移码","link":"/2019/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA%E4%B8%8E%E8%BF%90%E7%AE%97/"},{"title":"计算机网络传输层","text":"传输层 功能概述 提供应用进程间的逻辑通信 复用和分用 复用 发送方不同的应用进程使用同一个传输层协议 分用 接收方的传输层在剥去报文首部后能把这些数据正确交付至目的应用进程 差错检测（首部和数据部分） TCP和UDP 寻址与端口 端口作用 让应用层各应用程序将其数据通过端口向下交付给传输层 让传输层知道应当将其报文段中的数据向上通过端口交付给应用层相应的进程 端口号 长度16bit $2^{16}=65536$个不同的端口号 端口划分 服务器端使用 熟知端口 0 ~ 1023 FTP 21 TELNET 23 SMTP 25 DNS 53 TFTP 69 HTTP 80 SNMP 161 登记端口 1024 ~ 49151 客户端使用 客户进程运行时动态选择 又称临时端口 套接字 端口和IP拼接 Socket = (IP地址:端口号) UDP 概述 在IP数据报基础上增加 复用 分用 差错检测 无需建立连接 无连接状态 分组首部开销小 不保证可靠交付 面向报文 IP协议字段17 报文长度由发送程序决定 首部格式 8B 4字段构成 源端口 需要对方回信时选用 不需要可用全0 目的端口 终点交付报文时必须使用 长度 最小值8（仅首部） 校验和 检测UDP数据报传输过程是否有错 有错丢弃 源主机不想计算校验和填写全0 校验 计算校验和在UDP数据报前增加12B伪首部 伪首部不是UDP真正首部只用于计算校验和 TCP 概述 面向连接 可靠交付 全双工通信 允许双方任何时候都能发送数据 两端设有缓存暂存数据 发送缓存 发送程序传给发送方TCP准备的数据 TCP已发送尚未收到确认的数据 接收缓存 按序到达但尚未被接收程序读取的数据 不按序到达的数据 面向字节流 仅视为一连串无结构的字节流 报文长度由接受方给出的窗口值和当前网络拥塞程度决定 报文段 源端口和目的端口 2B + 2B 序号 4B 0 ~ $2^{32}-1$ 面向字节流 TCP连接传送的字节流的每个字节都按顺序编号 本报文段发送的数据的第一个字节的序号 确认号 4B 期望收到对方下一报文段的第一个数据字节的序号 确认号为N表明到序号N-1为止的所有数据都已正确收到 数据偏移 表示首部长度 指出TCP报文段的数据起始处距离TCP报文段的起始处有多远 保留 占6位 今后使用 目前置0 紧急位URG URG=1 表明紧急指针字段有效 应尽快传送 确认位ACK ACK=1 确认号字段才有效 ACK=0 确认号无效 推送位PSH 接收方TCP收到PSH=1的报文段 尽快交付给接收应用进程 不等到缓存满在交付 复位位RST RST=1 表明TCP连接中出现严重错误 必须释放链接 重新建立连接 同步位SYN SYN=1表明这是一个连接请求或连接接受报文 SYN=1 ACK=0表明这是一个连接请求报文 对方同意建立连接 则响应报文中使用SYN=1 ACK=1 终止位FIN 用来释放一个连接 FIN=1 表明此报文段的发送方的数据已经发送完毕 并要求释放运输链接 窗口 2B $2^{16}-1$ 现在允许对方发送的数据量 设确认号为701 窗口字段1000 从701起发送此报文段的一方 还有接受1000字节数据的接受缓存空间 701~1700 校验和 2B 校验和字段检验的范围包括首部和数据两部分 计算校验和 报文段前加入12B伪首部 协议字段6 紧急指针 2B URG=1有意义 指出在本报文段中紧急数据共多少字节 选项 长度可变 最大报文段长度MSS TCP报文段的数据字段最大长度 填充 为了使整个首部长度为4B的整数倍 连接管理 三阶段 连接建立 数据传输 连接释放 客户/服务器模式 连接建立 三次握手 建立前 服务器进程进入LISTEN 等待客户连接请求 客户机TCP首先向服务器TCP发送请求报文段 SYN=1 seq=x SYN报文段不能携带数据 消耗一个序号 客户机进入SYN-SENT 服务器TCP收到连接请求报文段同意连接 发回确认报文段并配置该TCP缓存和变量 SYN=1 ACK=1 seq=y ack=x+1 确认报文段不能携带数据 消耗一个序号 服务器进入SYN-RCVD同步收到状态 客户机收到确认报文段还要向服务器给出确认 并为该TCP连接配置缓存和变量 ACK=1 seq=x+1 ack=y+1 该报文段可携带数据 不携带数据不消耗序号 客户机进入ESTABLISHED 三次握手易受到SYN洪泛攻击 连接释放 四次握手 客户机打算关闭连接 发送TCP连接释放报文段 主动关闭TCP连接 FIN=1 seq=u seq为先前传输的最后一个序号+1 客户进程进入FIN-WAIT-1终止等待1 服务器收到连接释放报文段 ack=u+1 seq=v 序号等于前面传过的数据最后一个字节的序号+1 服务器CLOSE-WAIT关闭等待 客户机到服务器方向连接关闭 服务器到客户机方向连接未关闭 半关闭状态 服务器若发送数据 客户机仍要接收 服务器无数据发送至客户机 发送通知TCP释放连接报文段 FIN=1 ACK=1 seq=w ack=u+1 设报文段的序号为w 在半关闭状态又传输部分数据 需重复上次发送的确认号ack=u+1 服务器进入LAST-ACK最后确认状态 客户机收到连接释放报文段后 必须发出确认 ACK=1 ack=w+1 seq=u+1 此时TCP连接还未释放 必须经过时间等待计时器设置的时间2MSL最长报文段寿命 客户机进入CLOSED连接关闭状态 可靠传输 序号 序号保证数据能有序提交至应用层 TCP视数据为无结构但有序的字节流 序号建立在传输的字节流 序号字段值是指本报文段所发送的数据的第一个字节的序号 确认 期望收到对方的下一个报文段的数据的第一个字节的序号 默认使用累积确认 只确认数据流中至第一个丢失字节为止的字节 重传 只针对两种情况进行重传 超时 冗余ACK 超时 TCP发送一个报文段就对这个报文段设置一次计时器 超时未收到确认就要重传这一报文段 采用自适应算法记录一个报文段发出的时间和收到确认的时间 ${RTT}_S$加权平均往返时间 冗余ACK 超时触发重传存在的一个问题是周期往往太长 是再次确认某个报文段的ACK 而发送方先前已经收到过该报文段的确认 发送方收到对同一个报文段的3个冗余ACK 就可以认为跟在这个被确认报文段之后的报文段已经丢失 流量传输 使用流量控制消除发送方速率过快使接收方缓存区溢出的可能性 基于滑动窗口协议的流量控制机制 rwnd 接收方根据自己的接收缓存 动态调整发送方的发送窗口大小 cwnd 发送方根据其对当前网络拥塞程度的估计而确定的窗口值 发送窗口=min{rwnd, cwnd} 拥塞控制 防止过多数据注入网络 保证网络中的路由器或链路不致过载 慢开始 TCP连接好并开始发送报文段 cwnd=1 即一个最大报文段长度MSS 每收到一个对新报文段的确认后 cwnd+1 使用慢开始算法后 每经过一个传输轮次RTT cwnd加倍 指数增长 一直增长到一个规定的慢开始门限值ssthresh 拥塞避免 让拥塞窗口cwnd缓慢增大 每经过一个往返时延RTT就把发送方的拥塞窗口cwnd+1 加法增大 根据cwnd大小选择算法 cwnd &lt; ssthresh 慢开始 cwnd &gt; ssthresh 拥塞避免算法 cwnd = ssthresh 均可 拥塞处理 初始 拥塞窗口置1 cwnd=1 慢开始门限ssthresh=16 慢开始 cwnd=1 发送方每收到一个确认ACK cwnd+1 经过每个RTT cwnd指数增长 达到门限值ssthresh 使用拥塞避免算法 拥塞避免 假定cwnd=24出现超时 更新ssthresh=12 cwnd=1 执行慢开始 快重传 当发送方连续收到三个重复的ACK报文 直接重传对方未收到的报文段 不必等待那个报文段设置的重传计算器超时 快恢复 发生黄连续收到三个冗余ACK 乘法减小 将慢开始门限ssthresh设置为此时发送方cwnd的一半","link":"/2023/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%B1%82/"},{"title":"计算机组成原理虚拟存储器页式段式和段页式","text":"虚拟存储器·页式·段式·段页式主存和辅存共同构成了虚拟存储器，在硬件和系统软件的共同管理下工作。对于程序员而言，虚拟存储器是透明的，将主存和辅存的地址空间统一编址用户编程允许涉及的地址称为虚地址或逻辑地址，虚拟地址对应的是存储空间称为虚拟空间实际的主存单元地址称为实地址或物理地址，实地址对应的存储空间称为主存地址空间或实地址空间 实地址 = 主存页号 + 页内字地址 虚地址 = 虚存页号 + 页内字地址 辅存地址 = 磁盘号 + 盘面号 + 磁道号 + 扇区号 CPU使用虚地址访存，由辅助硬件找出虚地址和实地址之间的对应关系，并判断这个虚地址对应的存储单元是否已装入内存 在内存，通过地址变换，CPU可直接访问主存指示的数据单元 不在内存，则把包含这个 字的一页或一段调入主存后，在通过虚实地址变换访问 页式虚拟存储器以页为基本单位，虚拟空间与主存空间划分为同样大小的页，主存的页称为实页、页框，虚存的页称为虚页 页表页表是一张存储在主存中的虚页号和实页号对照表，记录程序的虚页调入主存时被安排在主存中的位置，页表一般长期存在于主存内 1 2 3 4 有效位 脏位 引用位 物理页 有效位（装入位）：表示对应页是否在主存 脏位（修改位）：表示页面是否被修改过，配合回写策略，判断是否需要写回磁盘 引用位（使用位）：配合替换算法进行设置 CPU运行指令时，虚地址转实地址： 页表基址寄存器存放进程的页表首地址 根据虚拟地址高位部分的虚拟页号找到相应的页表项 装入位为1，则取出物理页号和虚拟地址地位进行拼接，形成实际物理地址 装入位为0，说明缺页，需要操作系统进行缺页处理 快表(TLB)高速缓存器制成，依据程序的局部性原理，内存中的页表称之为慢表，地址转换时，先查快表，命中无需访问主存中的页表快表通常采用组相联或全相联方式 t r p 标记 有效位 实页号 具有TLB和Cache的多级存储系统三种缺失的情况 TLB Page Cache 说明 1 命中 命中 命中 TLB命中则Page一定命中，信息在主存，就可能在Cache 2 命中 命中 缺失 TLB命中则Page一定命中，信息在主存，也可能不在Cache 3 缺失 命中 命中 TLB缺失但Page可能命中，信息在主存，就可能在Cache 4 缺失 命中 缺失 TLB缺失但Page一定命中，信息在主存，也可能不在Cache 5 缺失 缺失 缺失 TLB缺失则Page也可能缺失，信息不在主存，也一定不在Cache 段式虚拟存储器按照程序的逻辑结构划分，将逻辑地址分为段号和段内地址，虚实地址转换是由段表来是实现的，段表是程序的逻辑段和在主存中存放位置的对照表 段号 段首地址 装入位 段长 CPU访存时： 根据段号与段表基地址拼接成对应的段表行 根据段表行的装入位判断是否调入内存 调入内存，则从段表读出该段在主存的起始地址，与段内地址相加，得到对应的主存实地址 段页式虚拟存储器根据程序的逻辑结构，将每段划分为固定的大小页，主存空间也划分为大小相等的页，程序对主存调入、调出仍以页为基本传送单位每个程序对应一个段表，每个段表对应一个页表，段的长度必须是页长的整数倍 段号 段内页号 页内地址 CPU访存： 根据段号得到段表地址 从段表中取出该段的页表起始地址，与虚地址段页号合成，得到页表地址 从页表中取出实页号，与页内地址拼接形成实地址 虚拟存储器与Cache的比较 相同 不同 目的均为提供系统性能 Cache主要解决系统速度，虚拟存储器解决主存容量 均把数据划分为小的信息块作为基本传递单位，虚存系统的信息块更大 Cache由硬件实现，对程序员透明，虚拟存储器由OS和硬件实现，是逻辑上的存储器，对系统程序员不透明，对应用程序员透明 都有地址的映射、替换算法、更新策略 均依据程序的局部性原理","link":"/2019/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8%E9%A1%B5%E5%BC%8F%E6%AE%B5%E5%BC%8F%E5%92%8C%E6%AE%B5%E9%A1%B5%E5%BC%8F/"},{"title":"计算机网络网络层","text":"网络层功能概述 数据报服务 简单灵活 无连接 尽最大努力交付 为了使路由器简单 可靠通信由传输层负责 传送分组可能 出错 丢失 重复 失序 超时 异构网络互连 各层中继系统 物理层 转发器 集线器 数据链路层 网桥 交换机 网络层 路由器 网络层以上 网关 路由与转发 路由选择（确定哪一条路径） 按照分布式算法 根据从各相邻的路由器 所得的关于整个网络拓扑的变化情况 动态改变选择的路由 分组转发（一个分组到达时采取的动作） 根据转发表 将用户IP数据报 从合适端口转发出去 SDN Software Define Network 网络层定义 数据平面 转发 控制平面 路由选择 SDN网络 数据、控制平面分离 数据平面 控制平面 集中式 拥塞控制 开环控制 闭环控制 路由算法 静态路由算法 非自适应路由算法 网络管理员手动配置 拓扑结构发生变化手动修改静态路由 小型网络 动态路由算法 自适应路由算法 互连的路由器间彼此交换路由表 距离-向量算法 所有节点定期 将各自整个路由选择表 转发到相邻节点 每条路径的目的地 路径的代价（距离） RIP算法 链路状态路由算法 每个参与算法的节点 均具有完全的拓扑信息 主动测试所有相邻节点 定期将链路状态传播所有其他节点 OSPF算法 洪泛法发送信息 所有路由器 路由器相邻的所有路由链路状态 度量 metric 费用 距离 时延 带宽 链路状态变化才发送 层次路由 网络规模增大 路由表增大 整个互联网划分 划分为很多较小的自治系统 内部网关协议 RIP OSPF 外部网关协议 BGP IPV4 IPV4分组 首部长度 占4位 最大十进制数15 最大值15 * 4B = 60B 总长度 首部和数据之和 单位为字节 以太网帧的最大传送单元 MTU=1500B 最大长度$2^{16}=65535B$ 标识 占16位 计数器 i++ 数据报长度超过网络MTU 必须分片 此时每个数据报片 均复制一次标识号 标志 占3位 标志字段最低位MF MF=1表示后面还有分片 MF=0表示最后一个分片 标志字段中间的一位DF DF=0时才允许分片 片偏移 占13位 较长的分组在分片后 某片在原分组中相对位置 以8个字节为偏移单位 除最后一个分片 每个分片的长度一定 是8B的整数倍 生存时间 TTL 占8位 数据报可通过路由数最大值 确保分组不会永远在网络中循环 协议 占8位 TCP : 6 UDP : 17 首部校验和 占16位 只校验分组的首部 不校验数据部分 源地址字段 占4B 目的地址字段 占4B 数据报分片 链路承载最大数据量 最大传送单元MTU IP数据报4000B 首部20B 数据3980B MTU=1500B 标识=777 MF=0 DF=0 分片大小为8B的倍数=1480 分片1 标识=777 片偏移=0 MF=1 DF=0 有效数据1480B 分片2 标识=777 片偏移=185 MF=1 DF=0 有效数据1480B 分片3 标识=777 片偏移=370 MF=0 DF=0 有效数据(3980-1480*2)B IPV4地址 A类 1 ~ 126 0000,0000;0;0;0 ~ 0111,1111;1;1;1 B类 128 ~ 191 1000,0000;0;0;0 1011,1111;1;1 C类 192 ~ 223 1100,0000;0;0;0 ~ 1101,1111;1;1;1 D类 224 ~ 239 1110,0000;0;0;0 ~ 1110,1111;1;1;1 E类 240 ~ 255 1111,0000;0;0;0 ~ 1111,1111;1;1;1 IP::={&lt;网络号&gt;,&lt;主机号&gt;} 主机号全为0表示本网络 主机号全1表示本网络广播地址 127.x.x.x为环回自检地址 表示任意主机自身 目的地址为127.x的 IP数据报不会出现在任何网络 32位全为0表示本网络上本主机 32位全为1表示整个TCP/IP网络的广播地址 IP地址使用范围 A 最大网络可用数=$2^{7}-2$ 第一个可用的网络号=1 最后一个可用的网络号=126 每个网络中最大的主机=$2^{24}-2$ B 最大网络可用数=$2^{14}$ 第一个可用的网络号=128.0 最后一个可用的网络号=191.255 每个网络中最大的主机=$2^{16}-2$ C 最大网络可用数=$2^{21}$ 第一个可用的网络号=192.0.0 最后一个可用的网络号=223.255.255 每个网络中最大的主机=$2^{8}-2$ NAT 专门网络地址转换为公用地址 而对外隐藏内部管理的IP 划分私有IP 只用于LAN 不用于WAN 私有IP不能直接接入Internet 通过网关利用NAT 私有IP转为Internet中合法的全球IP 网段 A 1个A类 10.0.0.0 ~ 10.255.255.255 B 16个B类 172.16.0.0 ~ 172.31.255.255 C 256个C类 192.168.0.0 ~ 192.168.255.255 目的地址为私有IP不进行转发：本地互联网 NAT转换表 WAN : LAN 138.76.29.7:5001 | 192.168.0.2:2233 普通路由器转发IP数据报，不改变源IP和目的IP NAT路由器转发IP数据报，一定改变 子网划分 两级IP 缺点 地址空间利用率低 每分配一个网络号会是路由表变得太大 网络性能变坏 不够灵活 划分 对内表现为子网划分，对外表现为没有划分的网络 从主机号借用若干比特作为子网号 IP = {&lt;网络号&gt;,&lt;子网号&gt;,&lt;主机号&gt;} 从其他网络发送给本单位某主机的IP 仍然根据IP目的网络 找到连接本单位网络的路由 该路由收到IP 按目的网络和子网找到目的子网 最后交付IP至目的主机 划分只根据主机号借用位作子网号 不改变网络号 从一个IP地址或首部无法判断是否子网划分 子网掩码 表达对原网络主机号的借位 将IP与子网掩码按位相与AND 得到相应的子网地址 要求 主机设置IP地址必须设置子网掩码 同属一个子网的所有主机及路由器的相应端口必须设置相同的子网掩码 路由器的路由表所包含信息：目的网络地址、子网掩码、下一跳地址 CIDR 在变成子网掩码基础上消除ABC类网络划分 在软件下实现超网构成 IP = {&lt;网络前缀&gt;,&lt;主机号&gt;} 斜线记法 IP地址/网络前缀所占比特数 128.14.32.5/20 IP: 1000,0000;0000,1110;0010,0000;0000,0101 子网掩码: 1111,1111;1111,1111;1111,0000;0000,0000 网络前缀: 1000,0000;0000,1110;0010,0000;0000,0000 128.14.32.0 CIDR不使用子网，仍使用掩码 CIDR地址块 网络前缀相同的连续IP组成 206.1.0.0/17 1100,1010;0000,0001;0000,0000;0000,0000 206.1.128.0/17 1100,1010;0000,0001;1000,0000;0000,0000 206.1.0.0/16 1100,1010;0000,0001;0000,0000;0000,0000 最长前缀匹配（最佳匹配） 路由表中的每个项目由&lt;网络前缀&gt;&lt;下一跳地址&gt;组成 在查找路由表时可能不止一个匹配结果 匹配结果中选择具有最长网络前缀的路由 网络前缀越长 地址块越小 路由越具体 网络层转发分组 基于目的主机所在的网络 网络数远小于主机数 分组到达路由器 路由器根据目的IP地址的网络前缀查找转发表 确定下一跳应到哪个路由器 转发表中每条路由必须有下面两条信息 (目的网络, 下一跳地址) IP数据报最终一定可以找到目的主机所在目的网络上的路由器 达到最后一个路由器，向目的主机进行直接交付 ARP、DHCP、ICMP IP地址与硬件地址 IP地址是网络层使用 MAC地址是数据链路层使用 网络层及网络层之上使用IP IP地址放在IP数据报首部 MAC地址放在MAC帧首部 数据封装后 IP数据报分组封装为MAC帧 数据链路层看不见数据报分组中的IP地址 决定了MAC地址无法跨网络通信 ARP Address Resolution Protocol 无论网络层使用什么协议 在实际网络的链路上传输数据帧 必须使用硬件地址 使用ARP进行映射 每台主机设有ARP映射表 工作原理 主机A向本局域网上某台主机B发送IP数据报 先在ARP高速缓存中查找有无主机B的IP 有则将对应MAC地址写入MAC帧 无则通过目的MAC地址 FFFF-FF-FF-FF-FF的帧封装并广播ARP请求分组 主机B收到该ARP请求分组，向ARP响应分组（单播） 分组包含B的IP与MAC地址的映射 主机A收到ARP响应分组 写入ARP缓存 按查询到的硬件地址发送MAC帧 DHCP Dynamic Host Configuration Protocol 动态分配地址 即插即用联网机制 应用层协议 UDP 客户/服务器模式 工作原理 需要IP地址的主机在启动时 就向DHCP服务器广播发送发现报文 主机成为DHCP客户 DHCP客户只能在一段有限的时间内 使用分配到的IP地址：租用期 ICMP Internet Control Message Protocol 提高IP数据报交付成功机会 在网络层使用网际控制报文协议 让主机或路由器报告差错和异常情况 ICMP报文作为IP层数据报的数据 加上数据报的首部 组成IP数据报发送出去 网络层协议 报文种类 差错报告报文 询问报文 5种常用类型 终点不可达 源点抑制 时间超过 参数问题 改变路由 PING使用ICMP回答请求和回答报文 Tracert使用ICMP时间超过报文 IPV6- 特点 - 解决IP地址耗尽问题 - 采用CIDR、NAT - 128位 - 即插即用 - 只有在包的源结点才能分片 - 传输路径中的路由器不能分片 - 首部长度必须8B的整数倍 - 地址 - 目的地址 - 单播 - 点对点 - 多播 - 一对多 - 任播 - 目的站是一组计算机 - 数据报交付其中的一台计算机 - 距离最近的计算机 - 缩写表示法 - 4BF5:0000:0000:0000:BA5F:039A:000A:2176 - 4BF5:0:0:0:BA5F:39A:A:2176 - 双冒号缩写[::] - 4BF5:0000:0000:0000:BA5F:039A:000A:2176 - 4BF5::BA5F:39A:A:2176 - 双协议栈 - 设备同时安装IPV4和IPV6协议栈 - 路由器不同接口配置 - 隧道技术 - IPV6数据报进入IPV4网络 封装到IPV4数据报的数据部分 路由协议- 自治系统 AS Autonomous System - 本自治系统内必须连通 - 域内路由与域间路由 - 域内路由 RIP、OSPF - 域间路由 BGP - RIP - 基于距离-向量算法 - 简单 - 距离称为跳数，经过一个路由距离+1 - 路由器维护自身到其他每个目的网络的距离记录 - 定义好的路由就是通过路由器数目少 - 一跳路径最多15跳 - 距离为16表示网络不可达 为了防止出现环路 - 默认两个使用RIP的路由之间30秒广播一次RIP路由更新信息 - 仅和相邻路由器交换信息 - 交换自己的路由表（全部信息） - 距离向量算法 - 路由表项 - &lt;目的网络N,距离d,下一跳路由器地址&gt; - 地址X的相邻路由器发来的RIP报文 修改下一跳字段的地址改为X 距离向量+1 - 原有路由表没有目的网络N，加入 - 有目的网络N，下一跳地址为X，替换 - 有目的网络N，下一跳地址不为X 发来的d小于路由表的d，替换 否则什么也不做 - 限制了网络的规模 - 坏消息传得慢，收敛时间长 - 应用层协议 - UDP端口520 - OSPF - 分布式链路状态路由算法 - 洪泛法 - 向自治系统所有路由器发送信息 - 发送与本路由器相邻的所有路由器链路状态 - 只有链路发生变化，才发送 - 快收敛 - 网络层协议 - IP 协议字段89 - 每个链路状态都带一个32位序号 序号越大代表状态越新 - 使用Dijkstra算法计算最优路径 - OSPF五种分组 - 问候 - 数据库描述 - 链路状态请求 - 链路状态更新 - 链路状态确认 - BGP - 基于路径-向量算法 - 寻找一条能够达到目的网络且比较好的路由 不能有环路并非最佳路由 - 应用层协议 - 基于TCP - 每个自治系统的管理员 至少选择一个路由作为BGP发言人 - BGP-4使用4种报文 - 打开 - 更新 - 保活 - 通知 IP组播- 组播 - 应用于UDP - 有的应用程序把一个分组发送给多个目的主机 - IPV4的D类地址 - IP组播地址 - D类地址前4位：1110 - 224.0.0.0 ~ 239.255.255.255 - D类IP与以太网组播地址映射 - IP组播地址1110,**xxxx;x**yyy,yyyy;y;y xxxxx不做映射 - 48位MAC地址后23位装载IP组播地址后23位 - IGMP Internet Group Management Protocol - 组播路由选择 - 找出以源主机为根节点的组播转发树 - 三种算法 - 基于链路状态 - 基于距离-向量 - 建立在任何路由器协议，协议无关组播 移动IP- 概念 - 以固定的网络IP地址实现跨越不同网段的漫游功能 - 并保证基于网络IP的网络权限在漫游过程不发生改变 - 功能实体 - 移动节点 - 本地代理 - 外地代理 - 通信过程 - 移动站在归属网络，按照TCP/IP通信 - 漫游到外地网络，向外地代理登记获得临时转交地址 外地代理向移动站归属代理登记转交地址 - 归属代理登记转交地址后，构建一条通向转交地址的隧道 并将截获的发送给移动站的IP分组进行封装 通过隧道发送给被访问网络的外地代理 - 外地代理收到封装的数据报进行拆封 恢复原始IP分组转发给移动站 - 移动站向外部发送数据报仍使用自己的永久地址作为源地址 无需通过归属代理转发直接通过被访网络的外部代理 网络层设备- 冲突域 - 连接在同一物理介质上的所有节点集合 - 节点存在对介质的争用现象 - 集线器、中继器不能划分冲突域 - 网桥、交换机、路由器可以划分冲突域 - 广播域 - 接收同样广播消息的节点集合 - 路由器可以划分广播域 - LAN特指使用路由器分割的网络也就是广播域 - 路由器组成和功能 - 多输入/输出的专用计算机 - 连接不同的网络完成路由转发 - 直接交付 - 源主机和目标主机在同一个网络 无需通过路由器 - 间接交付 - 源主机和目标主机不在同一个网络 需要路由器按照转发表指出的路由 将数据报转发给下一个路由器 网络层功能概述 数据报服务 简单灵活 无连接 尽最大努力交付 为了使路由器简单 可靠通信由传输层负责 传送分组可能 出错 丢失 重复 失序 超时 异构网络互连 各层中继系统 物理层 转发器 集线器 数据链路层 网桥 交换机 网络层 路由器 网络层以上 网关 路由与转发 路由选择（确定哪一条路径） 按照分布式算法 根据从各相邻的路由器 所得的关于整个网络拓扑的变化情况 动态改变选择的路由 分组转发（一个分组到达时采取的动作） 根据转发表 将用户IP数据报 从合适端口转发出去 SDN Software Define Network 网络层定义 数据平面 转发 控制平面 路由选择 SDN网络 数据、控制平面分离 数据平面 控制平面 集中式 拥塞控制 开环控制 闭环控制 路由算法 静态路由算法 非自适应路由算法 网络管理员手动配置 拓扑结构发生变化手动修改静态路由 小型网络 动态路由算法 自适应路由算法 互连的路由器间彼此交换路由表 距离-向量算法 所有节点定期 将各自整个路由选择表 转发到相邻节点 每条路径的目的地 路径的代价（距离） RIP算法 链路状态路由算法 每个参与算法的节点 均具有完全的拓扑信息 主动测试所有相邻节点 定期将链路状态传播所有其他节点 OSPF算法 洪泛法发送信息 所有路由器 路由器相邻的所有路由链路状态 度量 metric 费用 距离 时延 带宽 链路状态变化才发送 层次路由 网络规模增大 路由表增大 整个互联网划分 划分为很多较小的自治系统 内部网关协议 RIP OSPF 外部网关协议 BGP IPV4 IPV4分组 首部长度 占4位 最大十进制数15 最大值15 * 4B = 60B 总长度 首部和数据之和 单位为字节 以太网帧的最大传送单元 MTU=1500B 最大长度$2^{16}=65535B$ 标识 占16位 计数器 i++ 数据报长度超过网络MTU 必须分片 此时每个数据报片 均复制一次标识号 标志 占3位 标志字段最低位MF MF=1表示后面还有分片 MF=0表示最后一个分片 标志字段中间的一位DF DF=0时才允许分片 片偏移 占13位 较长的分组在分片后 某片在原分组中相对位置 以8个字节为偏移单位 除最后一个分片 每个分片的长度一定 是8B的整数倍 生存时间 TTL 占8位 数据报可通过路由数最大值 确保分组不会永远在网络中循环 协议 占8位 TCP : 6 UDP : 17 首部校验和 占16位 只校验分组的首部 不校验数据部分 源地址字段 占4B 目的地址字段 占4B 数据报分片 链路承载最大数据量 最大传送单元MTU IP数据报4000B 首部20B 数据3980B MTU=1500B 标识=777 MF=0 DF=0 分片大小为8B的倍数=1480 分片1 标识=777 片偏移=0 MF=1 DF=0 有效数据1480B 分片2 标识=777 片偏移=185 MF=1 DF=0 有效数据1480B 分片3 标识=777 片偏移=370 MF=0 DF=0 有效数据(3980-1480*2)B IPV4地址 A类 1 ~ 126 0000,0000;0;0;0 ~ 0111,1111;1;1;1 B类 128 ~ 191 1000,0000;0;0;0 1011,1111;1;1 C类 192 ~ 223 1100,0000;0;0;0 ~ 1101,1111;1;1;1 D类 224 ~ 239 1110,0000;0;0;0 ~ 1110,1111;1;1;1 E类 240 ~ 255 1111,0000;0;0;0 ~ 1111,1111;1;1;1 IP::={&lt;网络号&gt;,&lt;主机号&gt;} 主机号全为0表示本网络 主机号全1表示本网络广播地址 127.x.x.x为环回自检地址 表示任意主机自身 目的地址为127.x的 IP数据报不会出现在任何网络 32位全为0表示本网络上本主机 32位全为1表示整个TCP/IP网络的广播地址 IP地址使用范围 A 最大网络可用数=$2^{7}-2$ 第一个可用的网络号=1 最后一个可用的网络号=126 每个网络中最大的主机=$2^{24}-2$ B 最大网络可用数=$2^{14}$ 第一个可用的网络号=128.0 最后一个可用的网络号=191.255 每个网络中最大的主机=$2^{16}-2$ C 最大网络可用数=$2^{21}$ 第一个可用的网络号=192.0.0 最后一个可用的网络号=223.255.255 每个网络中最大的主机=$2^{8}-2$ NAT 专门网络地址转换为公用地址 而对外隐藏内部管理的IP 划分私有IP 只用于LAN 不用于WAN 私有IP不能直接接入Internet 通过网关利用NAT 私有IP转为Internet中合法的全球IP 网段 A 1个A类 10.0.0.0 ~ 10.255.255.255 B 16个B类 172.16.0.0 ~ 172.31.255.255 C 256个C类 192.168.0.0 ~ 192.168.255.255 目的地址为私有IP不进行转发：本地互联网 NAT转换表 WAN : LAN 138.76.29.7:5001 | 192.168.0.2:2233 普通路由器转发IP数据报，不改变源IP和目的IP NAT路由器转发IP数据报，一定改变 子网划分 两级IP 缺点 地址空间利用率低 每分配一个网络号会是路由表变得太大 网络性能变坏 不够灵活 划分 对内表现为子网划分，对外表现为没有划分的网络 从主机号借用若干比特作为子网号 IP = {&lt;网络号&gt;,&lt;子网号&gt;,&lt;主机号&gt;} 从其他网络发送给本单位某主机的IP 仍然根据IP目的网络 找到连接本单位网络的路由 该路由收到IP 按目的网络和子网找到目的子网 最后交付IP至目的主机 划分只根据主机号借用位作子网号 不改变网络号 从一个IP地址或首部无法判断是否子网划分 子网掩码 表达对原网络主机号的借位 将IP与子网掩码按位相与AND 得到相应的子网地址 要求 主机设置IP地址必须设置子网掩码 同属一个子网的所有主机及路由器的相应端口必须设置相同的子网掩码 路由器的路由表所包含信息：目的网络地址、子网掩码、下一跳地址 CIDR 在变成子网掩码基础上消除ABC类网络划分 在软件下实现超网构成 IP = {&lt;网络前缀&gt;,&lt;主机号&gt;} 斜线记法 IP地址/网络前缀所占比特数 128.14.32.5/20 IP: 1000,0000;0000,1110;0010,0000;0000,0101 子网掩码: 1111,1111;1111,1111;1111,0000;0000,0000 网络前缀: 1000,0000;0000,1110;0010,0000;0000,0000 128.14.32.0 CIDR不使用子网，仍使用掩码 CIDR地址块 网络前缀相同的连续IP组成 206.1.0.0/17 1100,1010;0000,0001;0000,0000;0000,0000 206.1.128.0/17 1100,1010;0000,0001;1000,0000;0000,0000 206.1.0.0/16 1100,1010;0000,0001;0000,0000;0000,0000 最长前缀匹配（最佳匹配） 路由表中的每个项目由&lt;网络前缀&gt;&lt;下一跳地址&gt;组成 在查找路由表时可能不止一个匹配结果 匹配结果中选择具有最长网络前缀的路由 网络前缀越长 地址块越小 路由越具体 网络层转发分组 基于目的主机所在的网络 网络数远小于主机数 分组到达路由器 路由器根据目的IP地址的网络前缀查找转发表 确定下一跳应到哪个路由器 转发表中每条路由必须有下面两条信息 (目的网络, 下一跳地址) IP数据报最终一定可以找到目的主机所在目的网络上的路由器 达到最后一个路由器，向目的主机进行直接交付 ARP、DHCP、ICMP IP地址与硬件地址 IP地址是网络层使用 MAC地址是数据链路层使用 网络层及网络层之上使用IP IP地址放在IP数据报首部 MAC地址放在MAC帧首部 数据封装后 IP数据报分组封装为MAC帧 数据链路层看不见数据报分组中的IP地址 决定了MAC地址无法跨网络通信 ARP Address Resolution Protocol 无论网络层使用什么协议 在实际网络的链路上传输数据帧 必须使用硬件地址 使用ARP进行映射 每台主机设有ARP映射表 工作原理 主机A向本局域网上某台主机B发送IP数据报 先在ARP高速缓存中查找有无主机B的IP 有则将对应MAC地址写入MAC帧 无则通过目的MAC地址 FFFF-FF-FF-FF-FF的帧封装并广播ARP请求分组 主机B收到该ARP请求分组，向ARP响应分组（单播） 分组包含B的IP与MAC地址的映射 主机A收到ARP响应分组 写入ARP缓存 按查询到的硬件地址发送MAC帧 DHCP Dynamic Host Configuration Protocol 动态分配地址 即插即用联网机制 应用层协议 UDP 客户/服务器模式 工作原理 需要IP地址的主机在启动时 就向DHCP服务器广播发送发现报文 主机成为DHCP客户 DHCP客户只能在一段有限的时间内 使用分配到的IP地址：租用期 ICMP Internet Control Message Protocol 提高IP数据报交付成功机会 在网络层使用网际控制报文协议 让主机或路由器报告差错和异常情况 ICMP报文作为IP层数据报的数据 加上数据报的首部 组成IP数据报发送出去 网络层协议 报文种类 差错报告报文 询问报文 5种常用类型 终点不可达 源点抑制 时间超过 参数问题 改变路由 PING使用ICMP回答请求和回答报文 Tracert使用ICMP时间超过报文 IPV6- 特点 - 解决IP地址耗尽问题 - 采用CIDR、NAT - 128位 - 即插即用 - 只有在包的源结点才能分片 - 传输路径中的路由器不能分片 - 首部长度必须8B的整数倍 - 地址 - 目的地址 - 单播 - 点对点 - 多播 - 一对多 - 任播 - 目的站是一组计算机 - 数据报交付其中的一台计算机 - 距离最近的计算机 - 缩写表示法 - 4BF5:0000:0000:0000:BA5F:039A:000A:2176 - 4BF5:0:0:0:BA5F:39A:A:2176 - 双冒号缩写[::] - 4BF5:0000:0000:0000:BA5F:039A:000A:2176 - 4BF5::BA5F:39A:A:2176 - 双协议栈 - 设备同时安装IPV4和IPV6协议栈 - 路由器不同接口配置 - 隧道技术 - IPV6数据报进入IPV4网络 封装到IPV4数据报的数据部分 路由协议- 自治系统 AS Autonomous System - 本自治系统内必须连通 - 域内路由与域间路由 - 域内路由 RIP、OSPF - 域间路由 BGP - RIP - 基于距离-向量算法 - 简单 - 距离称为跳数，经过一个路由距离+1 - 路由器维护自身到其他每个目的网络的距离记录 - 定义好的路由就是通过路由器数目少 - 一跳路径最多15跳 - 距离为16表示网络不可达 为了防止出现环路 - 默认两个使用RIP的路由之间30秒广播一次RIP路由更新信息 - 仅和相邻路由器交换信息 - 交换自己的路由表（全部信息） - 距离向量算法 - 路由表项 - &lt;目的网络N,距离d,下一跳路由器地址&gt; - 地址X的相邻路由器发来的RIP报文 修改下一跳字段的地址改为X 距离向量+1 - 原有路由表没有目的网络N，加入 - 有目的网络N，下一跳地址为X，替换 - 有目的网络N，下一跳地址不为X 发来的d小于路由表的d，替换 否则什么也不做 - 限制了网络的规模 - 坏消息传得慢，收敛时间长 - 应用层协议 - UDP端口520 - OSPF - 分布式链路状态路由算法 - 洪泛法 - 向自治系统所有路由器发送信息 - 发送与本路由器相邻的所有路由器链路状态 - 只有链路发生变化，才发送 - 快收敛 - 网络层协议 - IP 协议字段89 - 每个链路状态都带一个32位序号 序号越大代表状态越新 - 使用Dijkstra算法计算最优路径 - OSPF五种分组 - 问候 - 数据库描述 - 链路状态请求 - 链路状态更新 - 链路状态确认 - BGP - 基于路径-向量算法 - 寻找一条能够达到目的网络且比较好的路由 不能有环路并非最佳路由 - 应用层协议 - 基于TCP - 每个自治系统的管理员 至少选择一个路由作为BGP发言人 - BGP-4使用4种报文 - 打开 - 更新 - 保活 - 通知 IP组播- 组播 - 应用于UDP - 有的应用程序把一个分组发送给多个目的主机 - IPV4的D类地址 - IP组播地址 - D类地址前4位：1110 - 224.0.0.0 ~ 239.255.255.255 - D类IP与以太网组播地址映射 - IP组播地址1110,**xxxx;x**yyy,yyyy;y;y xxxxx不做映射 - 48位MAC地址后23位装载IP组播地址后23位 - IGMP Internet Group Management Protocol - 组播路由选择 - 找出以源主机为根节点的组播转发树 - 三种算法 - 基于链路状态 - 基于距离-向量 - 建立在任何路由器协议，协议无关组播 移动IP- 概念 - 以固定的网络IP地址实现跨越不同网段的漫游功能 - 并保证基于网络IP的网络权限在漫游过程不发生改变 - 功能实体 - 移动节点 - 本地代理 - 外地代理 - 通信过程 - 移动站在归属网络，按照TCP/IP通信 - 漫游到外地网络，向外地代理登记获得临时转交地址 外地代理向移动站归属代理登记转交地址 - 归属代理登记转交地址后，构建一条通向转交地址的隧道 并将截获的发送给移动站的IP分组进行封装 通过隧道发送给被访问网络的外地代理 - 外地代理收到封装的数据报进行拆封 恢复原始IP分组转发给移动站 - 移动站向外部发送数据报仍使用自己的永久地址作为源地址 无需通过归属代理转发直接通过被访网络的外部代理 网络层设备- 冲突域 - 连接在同一物理介质上的所有节点集合 - 节点存在对介质的争用现象 - 集线器、中继器不能划分冲突域 - 网桥、交换机、路由器可以划分冲突域 - 广播域 - 接收同样广播消息的节点集合 - 路由器可以划分广播域 - LAN特指使用路由器分割的网络也就是广播域 - 路由器组成和功能 - 多输入/输出的专用计算机 - 连接不同的网络完成路由转发 - 直接交付 - 源主机和目标主机在同一个网络 无需通过路由器 - 间接交付 - 源主机和目标主机不在同一个网络 需要路由器按照转发表指出的路由 将数据报转发给下一个路由器","link":"/2023/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E7%BB%9C%E5%B1%82/"},{"title":"高等数学不定积分与定积分与反常积分","text":"不定积分、定积分与反常积分不定积分一、不定积分概念1.定义$$\\begin{align}&amp;原函数：设对于区间I上的任意一点x均有F’(x)=f(x),则称F(x)为f(x)在区间I上的一个原函数\\&amp;不定积分：设函数f(x)于区间I上有原函数,则其余原函数的全体称为f(x)于区间I上的不定积分,记为\\int{f(x)dx}\\&amp;线性：\\int[\\alpha f(x)+\\beta g(x)]dx=\\alpha\\int f(x)dx+\\beta\\int g(x)dx\\\\end{align}$$ 2.计算$$\\begin{align}&amp;计算方法\\begin{cases}&amp;1.基本公式\\&amp;2.线性\\&amp;3.积分法\\begin{cases}&amp;1.换元法\\&amp;2.分部积分法\\\\end{cases}\\\\end{cases}\\\\end{align}$$ (1)第一换元法(凑微分)$$\\begin{align}&amp;设F’(u)=f(u),则\\int{f(\\Phi(x))\\Phi’(x)}dx=\\int{f(\\Phi(x))d(\\Phi(x))}=F(\\Phi(x))+C\\&amp;注解：找到合适的凑微分\\Phi’(x)dx=d(\\Phi(x))\\end{align}$$ 常见凑微分：$$\\begin{align}&amp;1.\\int{f(ax+b)dx=\\frac{1}{a}\\int{f(ax+b)d(ax+b)}}(a\\neq0)\\&amp;eg1.\\int{\\sin (2x+3)}dx=\\frac{1}{2}\\int\\sin (2x+3)d(2x+3)=\\frac{1}{2}\\cos{(2x+3)}+C\\&amp;2.\\int{f(ax^n+b)x^{n-1}dx}=\\frac{1}{na}\\int{f(ax^n+b)d(ax^n+b)}\\&amp;eg2.\\int{\\cos(2x^4+3)x^3dx}=\\frac{1}{4*2}\\int{\\cos(2x^4+3)d(2x^4+3)}=\\frac{1}{8}\\cos{(2x^4+3)}+C\\&amp;3.\\int{f(a^x+c)a^xdx}=\\frac{1}{\\ln{a}}\\int{f(a^x+c)}d(a^x+c)\\&amp;eg3.\\int{\\sin(2^x+3)2^xdx}=\\frac{1}{\\ln2}\\int{\\sin{(2^x+3)}d(2^x+3)}=\\frac{1}{\\ln 2}\\cos{(2^x+3)}\\&amp;4.\\int{f(\\frac{1}{x})\\frac{1}{x^2}}dx=-\\int{f(\\frac{1}{x})}d(\\frac{1}{x})\\&amp;eg4.\\int{\\ln(\\frac{1}{x})}\\frac{1}{x^2}dx=-\\int\\ln (\\frac{1}{x})d({\\frac{1}{x}})+C\\&amp;5.\\int{f(\\ln |x|})\\frac{1}{x}d(x)=\\int{f(\\ln{|x|)}}{d(\\ln|x|)}\\&amp;eg5.\\int{\\sin ({\\ln{|x|}}})\\frac{1}{x}dx=\\int{\\sin(\\ln(|x|)d(\\ln{|x|})}=\\cos(\\ln x)+C\\&amp;6.\\int{f(\\sqrt x)\\frac{1}{\\sqrt x}}dx=2\\int{f(\\sqrt x)}d(\\sqrt x)\\&amp;7.\\int f(\\sin x)\\cos xdx=-\\int{(\\sin x)}d(\\sin x)\\&amp;8.\\int{f(\\cos x)\\sin dx}=\\int{f(\\cos x)d(\\cos x)}\\&amp;9.\\int{f(\\tan x)\\sec^2 xdx}=\\int{f(\\tan x)d(\\tan x)}\\&amp;10.\\int{f(\\cot x)\\csc^2xdx}=-\\int{f(\\cot x)d{(\\cot x)}}\\&amp;11.\\int{f{(\\arcsin x)\\frac{1}{\\sqrt{1-x^2}}}}dx=\\int{f(\\arcsin x)d({\\arcsin x})}\\&amp;12.\\int{f(\\arccos x)(-\\frac{1}{\\sqrt{1-x^2}}})dx=\\int{f(\\arccos x)d(\\arccos x)}\\&amp;13.\\int{f(\\arctan x)\\frac{1}{1+x^2}dx}=\\int{f(\\arctan x)d(\\arctan x)}\\&amp;14.\\int{f(\\sqrt{x^2+a})}\\frac{x}{\\sqrt{x^2+a}}dx=\\int{f(\\sqrt{x^2+a})}d(\\sqrt{x^2+a})\\&amp;注解：(\\sqrt{x^2\\pm a})’=\\frac{x}{\\sqrt{x^2+a}},(\\sqrt{a^2-x^2})’=\\frac{-x}{\\sqrt{a^2-x^2}}\\\\end{align}$$ (2)第二换元法$$\\begin{align}&amp;设F’(u)=f(\\Phi(u))\\Phi’(u),则\\&amp;\\int{f(x)dx}\\overset{x=\\Phi(u)}{=}\\int{f(\\Phi(u))\\Phi’(u)du}=F(u)+C=F(\\Phi^{-1}(x))+C\\&amp;注解：找到合适的x=\\Phi(u)\\\\end{align}$$ 1)三角换元$$\\begin{align}&amp;x=a\\sin u,x=a\\tan u,x=a \\sec u\\&amp;\\sqrt{a^2-x^2}\\overset{x=a\\sin u}{=}a\\cos u,u\\in[-\\frac{\\pi}{2},\\frac{\\pi}{2}],x\\in[-a,a]\\&amp;\\sqrt{a^2+x^2}\\overset{x=a\\tan u}{=}a\\sec u,u\\in{(-\\frac{\\pi}{2},\\frac{\\pi}{2})},x\\in{(-\\infty,\\infty)}\\&amp;\\sqrt{x^2-a^2}\\overset{x=a\\sec u}{=}a\\tan u,u\\in(\\frac{\\pi}{2},\\pi]\\cup(0,\\frac{\\pi}{2}]\\\\end{align}$$2)倒变换$$\\begin{align}&amp;x=\\frac{1}{u}常用于含\\frac{1}{x}的函数\\\\end{align}$$3）指数(或对数)变换$$\\begin{align}&amp;a^x=u或x=\\frac{\\ln u}{\\ln a}常用于含a^x的函数\\\\end{align}$$4）用于有理化的变换$$\\begin{align}&amp;\\frac{1}{\\sqrt{x}+\\sqrt[3]{x}}用x=u^6\\&amp;\\sqrt[n]{\\frac{ax+b}{cx+d}}用u=\\sqrt[n]{\\frac{ax+b}{cx+d}}或x=-\\frac{du^n-b}{cu^n-a}\\\\end{align}$$ (3)分部积分法$$\\begin{align}&amp;\\int{u(x)v’(x)dx}=\\int{u(x)d(v(x))}=u(x)v(x)-\\int{v(x)u’(x)dx}\\&amp;注解：找到合适的u(x),v(x)\\\\end{align}$$ 1)降幂法$$\\begin{align}&amp;\\int{x^ne^{ax}dx},\\int{x^n\\sin axdx},\\int{x^n\\cos ax dx}\\&amp;取u(x)=x^n\\\\end{align}$$2)升幂法$$\\begin{align}&amp;\\int{x^a\\ln xdx},\\int{x^a\\arcsin xdx},\\int{x^a\\arccos x dx},\\int{x^a\\arctan x dx}\\&amp;取u(x)=\\ln x\\\\end{align}$$3)循环法$$\\begin{align}&amp;\\int{e^{ax}\\sin ax dx},\\int{e^{ax}\\cos {ax} dx}\\&amp;取u(x)=e^{ax}或\\sin{ax}\\end{align}$$4)递推公式法$$\\begin{align}&amp;与n有关的结果I_n，建立递推关系I_n=f(I_{n-1})或f(I_{n-2})\\\\end{align}$$ 定积分一、定积分概念1.定义$$\\begin{align}&amp;定义:设函数f(x)在区间[a,b]上有定义且有界\\&amp;(1)分割：将[a,b]分成n个[x_{i-1},x_{i}]小区间\\&amp;(2)求和：[x_{i-1},x_{i}]上取一点\\xi_{i},\\sum_{i=1}^{n}{f(\\xi_{i})\\Delta x_i},\\lambda=\\max{\\Delta x_{1},\\Delta x_{2},…,\\Delta x_{n}}\\&amp;(3)取极限：若\\lim_{\\lambda \\rightarrow 0}{\\sum_{i=1}^{n}f(\\xi_{i})\\Delta x}\\exist,且极值不依赖区间[a,b]分发以及点\\xi_{i}的取法,则称f(x)在区间[a,b]上可积,\\&amp;\\int^{b}{a}{f(x)dx}=\\lim{\\lambda \\rightarrow 0}{f(\\xi)\\Delta x_{i}}&amp;\\&amp;注解：\\&amp;(1)\\lambda \\rightarrow0 \\rightarrow \\nleftarrow n\\rightarrow \\infty\\&amp;(2)定积分表示一个值,与积分区间[a,b]有关,与积分变化量x无关\\&amp;\\int_{a}^{b}{f(x)dx}=\\int_{a}^{b}{f(t)dt}\\&amp;(3)如果积分\\int_{0}^{1}{f(x)dx}\\exist,将[0,1]n等分，此时\\Delta{x_{i}}=\\frac{1}{n},取\\xi_{i}=\\frac{i}{n},\\&amp;\\int_{0}^{1}f(x)dx=\\lim_{\\lambda \\rightarrow 0}{\\sum_{i=1}{n}{f(\\xi_{i})\\Delta x_{i}}}=\\lim_{n\\rightarrow \\infty}\\sum_{i=1}^{n}f(\\frac{i}{n})\\\\end{align}$$ $$\\begin{align}&amp;\\int^{b}{a}{f(x)dx}=\\lim{\\lambda \\rightarrow 0}\\sum^{n}{i=1}f(\\xi_i)\\Delta_i=\\begin{cases}&amp;\\lim{n\\rightarrow \\infty}{\\sum_{i=1}^{n}{f(a+(i-1)\\frac{b-a}{n})\\frac{b-a}{n}}},左侧\\&amp;\\lim_{n\\rightarrow \\infty}{\\sum_{i=1}^{n}{f(a+i\\frac{b-a}{n})\\frac{b-a}{n}}},右侧\\\\end{cases}\\&amp;中点：\\Phi_i=a+(i-1)\\frac{b-a}{n}+\\frac{b-a}{2n}\\\\end{align}$$ 定理：(线性)$$\\begin{align}&amp;\\int[\\alpha f(x)+\\beta g(x)]dx=\\alpha\\int f(x)dx+\\beta\\int g(x)dx\\\\end{align}$$注解：积分无小事$$\\begin{align}&amp;\\int{e^{\\pm x^2}dx,\\int{\\frac{\\sin x}{x}}}积不出来\\&amp;F’(x)=f(x),x\\in I,连续函数一定存在原函数，无穷多个\\&amp;[F(x)+C]’=f(x)\\end{align}$$ 2.定积分存在的充分条件$$\\begin{align}&amp;若f(x)在[a,b]上连续,则\\int^{b}{a}{f(x)dx}必定存在\\&amp;若f(x)在[a,b]上有上界,且只有有限个间断点,则\\int^{b}{a}{f(x)dx}必定存在\\&amp;若f(x)在[a,b]上只有有限个第一类间断点,则\\int^{b}_{a}{f(x)dx}必定存在\\\\end{align}$$ 3.定积分的几何意义$$\\begin{align}&amp;(1)f(x)\\geqslant{0},\\int_{a}^{b}{f(x)dx}=S\\\\end{align}$$$$\\begin{align}&amp;(2)f(x)\\leqslant{0},\\int_{a}^{b}{f(x)dx}=-S\\\\end{align}$$ $$\\begin{align}&amp;(3)f(x)\\geqslant{0}\\cup f(x)\\leqslant{0},\\int_{a}^{b}{f(x)dx}=S_1+S_3-S_2\\ \\end{align}$$ 注解：$$\\begin{align}&amp;（1）当f(x)\\geq0时,定积分的几何意义是,以区间[a,b]为底,y=f(x)为曲边的曲边梯形面积\\&amp;（2）定积分是一个常数，只与f和区间[a,b]有关,与积分变量用什么字母无关\\&amp;\\int_a^b{f(x)}dx=\\int_a^b{f(t)dt}\\&amp;（3）\\int_a^bdx=b-a\\&amp;（4）\\int_{a}^{a}f(x)=0,\\int_a^bf(x)dx=-\\int_b^a{f(t)}dt\\end{align}$$ 二、定积分的性质1.不等式性质$$\\begin{align}&amp;(1)保序性：若在区间[a,b]上f(x)\\leqslant{g(x)},则\\int_a^{b}{f(x)dx}\\leqslant{\\int_a^{b}{g(x)dx}}\\&amp;推论：\\&amp;(1)f(x)\\geq0,\\forall x\\in[a,b],则\\int_a^b{f(x)dx}\\geq0\\&amp;(2)f(x)\\geq0,\\forall x\\in[a,b],且[c,d]\\subset[a,b],则\\int_a^b{f(x)dx}\\geq\\int_c^d{f(x)dx}\\&amp;(3)|\\int_a^bf(x)dx|\\leq\\int_a^b{|f(x)|dx}\\&amp;-|f|\\leq f\\leq |f|\\Rightarrow \\int_a^b-|f|\\leq \\int_a^bf\\leq \\int_a^b|f|\\Rightarrow |\\int_a^bf|\\leq\\int_a^b|f|\\&amp;如：x^2\\leq x^3,x\\in[0,1],则\\int_0^1{x^3dx}\\leq\\int_0^1{x^2dx}\\\\end{align}$$ $$\\begin{align}&amp;(4)(估值不等式)若M及m分别是f(x)在[a,b]上的最大值和最小值,\\&amp;则m(b-a)\\leqslant{\\int_a^{b}{f(x)dx}\\leqslant{M(b-a)}}\\\\end{align}$$ $$\\begin{align}&amp;证明：M(b-a)=S_{AFDC}=S_1+S_2+S_3\\&amp;m(b-a)=S_{EBDC}=S_3\\&amp;\\int_a^{b}{f(x)dx}=S_{ADBC}=S_2+S_3\\&amp;S_3\\leqslant{S_2+S_3\\leqslant{S_1+S_2+S_3}}\\&amp;\\Leftrightarrow{m(b-a)\\leqslant{\\int_a^{b}{f(x)dx}\\leqslant{M(b-a)}}}\\\\end{align}$$ $$\\begin{align}&amp;(3)|\\int_a^{b}{f(x)dx}|\\leqslant{\\int_a^{b}{|f(x)|dx}}\\\\end{align}$$ 2.中值定理$$\\begin{align}&amp;(1)若f(x)在[a,b]上连续,则\\int_a^{b}{f(x)dx}=f(\\xi)(b-a),(a&lt;\\xi&lt;b)\\&amp;称\\frac{1}{b-a}{\\int_{a}^{b}{f(x)dx}为函数y=f(x)在区间[a,b]上的平均值}\\&amp;注解：F’(x)=f(x),F(b)-F(a)=\\int_a^b{f(x)dx},f(\\xi)(b-a)=F’(\\xi)(b-a)\\&amp;(2)若f(x),g(x)在[a,b]上连续，g(x)不变号,则\\int_{a}^{b}{f(x)g(x)dx}=f(\\xi)\\int_a^b{g(x)dx}\\\\end{align}$$ 注解：$$\\begin{align}&amp;\\int_0^1{\\frac{x}{\\sin x}}dx\\&amp;f(x)=\\begin{cases}&amp;\\frac{x}{\\sin x},x\\in[0,1]\\&amp;1,x=0\\\\end{cases}\\&amp;结论：有限处点的函数不影响定积分\\&amp;f(x)={\\begin{cases}&amp;x+1,[1,2]\\&amp;x,[0,1]\\\\end{cases}}\\&amp;\\int_0^2{f(x)dx}=\\int_0^1{xdx}+\\int_1^2{(x+1)dx}\\\\end{align}$$ $$\\begin{align}&amp;证明：\\frac{1}{2}\\leq\\int_0^{\\frac{1}{2}}\\frac{1}{\\sqrt{1-x^n}}dx\\leq\\frac{\\pi}{6}\\&amp;估值积分：x\\in[0,\\frac{1}{2}]\\&amp;\\\\end{align}$$ 例题：$$\\begin{align}&amp;1.求极限\\lim_{n\\rightarrow \\infty}\\int_0^1{\\frac{x^ne^x}{1+e^x}dx}\\&amp;根据积分容易知道0\\leq\\frac{x^ne^x}{1+e^x}\\leq x^n,x\\in[0,1],n\\in N^*\\&amp;用积分的保号性\\&amp;0\\leq\\int_0^1{\\frac{x^ne^x}{1+e^x}dx}\\leq \\int_0^1{x^n}dx=\\frac{1}{n+1}\\&amp;用夹逼定理\\&amp;\\lim_{n\\rightarrow\\infty}\\frac{1}{n+1}=0\\&amp;\\lim_{n\\rightarrow \\infty}\\int_0^1{\\frac{x^ne^x}{1+e^x}dx}=0\\\\end{align}$$ $$\\begin{align}&amp;2.设I_1=\\int_0^{\\frac{4}{\\pi}}\\frac{\\tan x}{x}dx,I_2=\\int_0^{\\frac{4}{\\pi}}\\frac{x}{\\tan x}dx则\\&amp;(A)I_1I_21(B)1I_1I_2(C)I_2I_11(D)1I_2I_1\\&amp;解：用保序性a&lt;b,f(x)\\leq g(x),\\int_a^b f(x)\\leq \\int_a^b g(x)\\&amp;\\tan xx,x\\in[0,\\frac{\\pi}{2}]\\&amp;\\frac{\\tan x}{x}1\\frac{x}{\\tan x},x\\in[0,\\frac{\\pi}{4}]\\&amp;根据保序性\\&amp;\\int_0^{\\frac{\\pi}{4}}\\frac{\\tan x}{x}dx\\int_0^{\\frac{\\pi}{4}}1dx=\\frac{\\pi}{4}\\int_0^{\\frac{\\pi}{4}}\\frac{x}{\\tan x},x\\in[0,\\frac{\\pi}{4}]\\&amp;证：\\int_0^{\\frac{\\pi}{4}}\\frac{\\tan x}{x}与1的关系\\&amp;积分中值定理\\&amp;\\int_0^{\\frac{\\pi}{4}}\\frac{\\tan x}{x}=f(\\xi)(\\frac{\\pi}{4}-0)=\\frac{\\tan \\xi}{\\xi}*\\frac{\\pi}{4},\\xi\\in{[0,\\frac{\\pi}{4}]}\\&amp;根据\\frac{\\tan x}{x}在x\\in[0,\\frac{\\pi}{4}]上单调递增\\&amp;0&lt;f(\\xi)&lt;\\frac{4}{\\pi},0&lt;\\int_0^{\\frac{\\pi}{4}}\\frac{\\tan x}{x}&lt;1\\&amp;选(B)\\\\end{align}$$ 三、积分上限函数$$\\begin{align}&amp;如果f(x)在区间[a,b]上连续,则\\Phi(x)=\\int_a^b{f(t)dt}在[a,b]上可导,且\\int_a^b{f(t)dt})\\&amp;(\\int_a^xf(t)dt)’=f(x),(\\int_a^{x^2}f(t)dt)’=f(x^2)*2x\\&amp;如果f(x)在区间[a,b]上连续,\\phi_1(x),\\phi_2(x)为可导函数,则\\Phi(x)=\\int_a^b{f(t)dt}在[a,b]上可导,且(\\int_{\\phi_1(x)}^{\\phi_2(x)}{f(t)dt})’\\&amp;=f[\\phi_2(x)]*\\phi_2’(x)-f[\\phi_1(x)]*\\phi_1’(x)=(\\int_{\\phi_1(x)}^0{f(t)dt}+\\int_{\\phi_2(x)}^0{f(t)dt})’\\&amp;设函数f(x)在[-l,l]上连续,则\\&amp;如果f(x)为奇函数,那么\\int_0^xf(t)dt必为偶函数\\&amp;如果f(x)为偶函数,那么\\int_0^xf(t)dt必为奇函数\\\\end{align}$$ $$\\begin{align}&amp;任取x\\in[a,b),取\\Delta x0,使x+\\Delta x\\in[a,b)\\&amp;\\frac{\\Delta F}{\\Delta x}=\\frac{F(x+\\Delta x)-F(x)}{\\Delta x}=\\frac{1}{\\Delta x}[\\int_a^{x+\\Delta x}f(t)dt-\\int_a^xf(t)dt]=\\frac{1}{\\Delta x}\\int_x^{x+\\Delta x}f(t)dt=f(x+\\sigma\\Delta x)\\rightarrow f(x)(\\Delta x\\rightarrow 0^+)\\\\end{align}$$推论：$$\\begin{align}&amp;若f(x)、\\phi’(x)、\\psi(x)于[a,b]上连续,则\\&amp;(1)(\\int_a^{\\phi(x)}f(t)dt)’=f(\\phi(x))\\phi’(x)\\&amp;(2)(\\int_b^{\\psi(x)}f(t)dt)’=-f(\\psi(x))\\psi’(x)\\&amp;(3)(\\int_{\\psi(x)}^{\\phi(x)}f(t)dt)’=f(\\phi(x))\\phi’(x)-f(\\psi(x))\\psi’(x)\\\\end{align}$$例题$$\\begin{align}&amp;1.设函数f(x)在R上连续,且是奇函数,则其原函数均是偶函数.当f(x)是偶函数时？是周期函数？\\&amp;证：\\&amp;令F_0(x)\\int_0^xf(t)dt,x\\in R\\&amp;F_0(-x)=\\int_0^{-x}f(t)dt\\overset{t=-u}{=}\\int_0^xf(-u)d(u)=\\int_0^xf(u)du=F_0(x)\\Rightarrow F_0(x)为偶函数\\\\end{align}$$ $$\\begin{align}&amp;求变现积分导数\\&amp;(1)F(x)=\\int_x^{e^{-x}}f(t)dt\\&amp;(2)F(x)=\\int_0^{x^2}(x^2-t)f(t)dt\\&amp;(3)F(x)=\\int_0^{x}f(x^2-t)dt\\&amp;(4)设函数y=y(x)由参数方程\\begin{cases}&amp;x=1+2t^2\\&amp;y=\\int_1^{1+2\\ln t}\\frac{e^u}{u}du\\\\end{cases}(t1),求\\frac{d^2y}{dx^2}|_{x=9}\\&amp;解:\\&amp;(1)F(x)’=(\\int_x^{e^{-x}}f(t)dt)’=f(e^{-x})(-e^{-x})-f(x)\\&amp;(2)F(x)’=(\\int_0^{x^2}(x^2-t)f(t)dt)’=(\\int_0^{x^2}x^2f(t)dt-\\int_0^{x^2}tf(t)dt)’\\&amp;=2x\\int_0^{x^2}f(t)dt+x^2f(x^2)2x-x^2f(x^2)2x=2x\\int_0^{x^2}f(t)dt\\&amp;(3)F(x)=\\int_0^{x}f(x^2-t)dt=-\\frac{1}{2}\\int_0^xf(x^2-t^2)d(x^2-t^2)\\overset{u=x^2-t^2}{=}-\\frac{1}{2}\\int_0^xf(u)du\\&amp;F(x)’=\\frac{1}{2}f(x^2)2x=xf(x^2)\\&amp;(4)\\frac{dy}{dx}=\\frac{\\frac{e^{1+2\\ln t}}{1+2\\ln t}\\frac{2}{t}}{4t^2}=\\frac{e}{2(1+2\\ln t)}\\&amp;\\frac{d^2y}{dx^2}=\\frac{d(\\frac{dy}{dx})}{dx}=\\frac{e}{2}(-\\frac{\\frac{2}{t}}{(1+2\\ln t)^2})\\frac{1}{4t}\\\\end{align}$$ $$\\begin{align}&amp;2.求变现积分的积分:\\&amp;(1)设f(x)=\\int_0^x{\\frac{\\sin t}{\\pi -t}dt},求\\int_0^\\pi{f(x)}dx\\&amp;解:\\&amp;\\int_0^\\pi{f(x)}dx=\\int_0^{\\pi}\\int_0^x\\frac{\\sin t}{\\pi -t}dt\\space dx\\&amp;=x\\int_0^x\\frac{\\sin t}{\\pi t}|0^{\\pi}-\\int_0^{\\pi}x\\frac{\\sin x}{\\pi -x}dx\\&amp;=\\pi\\int_0^{\\pi}\\frac{\\sin x}{\\pi t}+\\int_0^{\\pi}\\frac{[(\\pi-x)-\\pi]\\sin x}{\\pi-x}dx=\\int_0^{\\pi}\\sin xdx=2\\&amp;(2)\\lim{x\\rightarrow\\infty}{\\frac{(\\int_0^x{e^{t^2}}dt)^2}{\\int_0^xe^{2t^2}dt}}=\\lim_{x\\rightarrow\\infty}{\\frac{(2\\int_0^{x}e^{t^2}dt)e^{x^2}}{e^{2x^2}}}=\\lim_{x\\rightarrow\\infty}\\frac{2\\int_0^{x}e^{t^2}}{e^{x^2}}=\\lim_{x\\rightarrow\\infty}\\frac{1}{2x}=0\\\\end{align}$$ { } $$\\begin{align}&amp;(3)设f(x)连续,\\phi(x)=\\int_0^1{f(tx)dt},且\\lim_{x\\rightarrow0}\\frac{f(x)}{x}=A(常数),求\\phi’(x)并讨论\\phi’(x)在x=0处的连续性\\&amp;当x\\neq0时\\&amp;令u=tx,t\\in[0,1],u=tx\\in[0,x],\\phi(x)=\\int_0^1f(tx)dt\\overset{tx=u}{=}\\int_0^x{f(u)d(\\frac{u}{x})}=\\frac{\\int_0^xf(u)du}{x}\\&amp;\\phi’(x)=\\frac{xf(x)-\\int_0^xf(u)du}{x^2}\\&amp;当x=0时,f(0)=0,\\phi(0)=f(0)=0,\\phi’(0)=\\lim_{x\\rightarrow0}\\frac{\\phi(x)\\phi(0)}{x-0}=\\lim_{x\\rightarrow0}\\frac{\\int_0^xf(u)du}{x^2}=\\lim_{x\\rightarrow 0}\\frac{f(x)}{2x}=\\frac{1}{2}A\\&amp;\\lim_{x\\rightarrow0}\\phi’(x)=\\lim_{x\\rightarrow 0}{\\frac{xf(x)-\\int_0^xf(u)du}{x^2}}=A-\\frac{1}{2}A=\\frac{1}{2}A=\\phi’(0)\\Leftrightarrow\\phi’(x)在x=0处连续\\\\end{align}$$ 注解：$$\\begin{align}&amp;注意变限积分进行正逆运算时上下限的映射\\&amp;例如F(x)=\\int_0^x{f(t)dt}\\overset{t=-u}{=}\\int_{-a}^{x}f(-u)d(-u)\\\\end{align}$$ 四、定积分的计算1.牛顿莱布尼茨公式$$\\int_a^bf(x)dx=F(x)|_a^b=F(b)-F(a)$$ 2.换元积分法$$\\int_a^bf(x)dx=\\int_\\alpha^\\beta{f(\\Phi(t))\\Phi’(t)dt}$$ 3.分部积分法$$\\int_a^budv=uv|_a^b-\\int_a^bvdu$$ 4.奇偶性和周期性$$\\begin{align}&amp;直接使用奇偶性周期性定义证明\\&amp;(1)设f(x)为[-a,a]上的连续函数(a0),则\\&amp;\\int_{-a}{a}f(x)dx=\\begin{cases}0,&amp;f(x)奇函数\\2\\int_0^af(x)dx,&amp;f(x)偶函数\\end{cases}\\&amp;证：\\int_{-a}^0{f(x)dx}\\overset{x=-t}{=}\\int_0^a{f(-t)d(-t)}=-\\int_{0}^{a}f(t)d(t)=-\\int_0^a{f(x)dx}\\\\end{align}$$ $$\\begin{align}&amp;(2)设f(x)是以T为周期的连续函数,则对\\forall A，有\\int_a^{a+T}f(x)=\\int_0^T{f(x)dx}\\&amp;\\int_a^{a+T}f(x)dx\\overset{x=a+t}{=}\\int_0^T{f(a+t)d(a+t)}=\\int_0^{a+t}f(a+t)dt\\\\end{align}$$ $$\\begin{align}&amp;\\Phi:x\\in[a,b]\\rightarrow y\\in[c,d],令\\frac{x-a}{b-a}=\\frac{y-c}{d-c},y=c+\\frac{d-c}{b-a}(x-a)\\\\end{align}\\$$ 5.奇偶函数积分后的奇偶性(奇偶函数求导后的奇偶性)1.奇偶函数求导后的奇偶性$$\\begin{align}&amp;(1)f(x)为奇函数:\\&amp;f(-x)=-f(x)\\&amp;\\Leftrightarrow f’(-x)(-1)=-f’(x)\\&amp;\\Leftrightarrow f’(-x)=f’(x)\\&amp;\\Leftrightarrow f’(x)为偶函数\\&amp;(2)f(x)为偶函数:\\&amp;f(-x)=f(x)\\&amp;\\Leftrightarrow f’(-x)=f’(x)\\&amp;\\Leftrightarrow f’(-x)(-1)=f’(x)\\&amp;\\Leftrightarrow f’(-x)=-f’(x)\\&amp;\\Leftrightarrow f’(x)为奇函数\\\\end{align}$$ 2.奇偶函数求积分后的奇偶性$$\\begin{align}&amp;设F(x)为f(x)的原函数\\&amp;(1)f(x)为奇函数:\\&amp;f(-x)=-f(x)\\&amp;\\Leftrightarrow \\int f(-x)dx=-\\int f(x)dx\\&amp;\\Leftrightarrow -\\int f(-x)d(-x)=-\\int f(x)dx\\&amp;\\Leftrightarrow F(-x)=F(x)\\&amp;\\Leftrightarrow F(x)为偶函数\\&amp;(2)f(x)为偶函数:\\&amp;f(-x)=f(x)\\&amp;\\Leftrightarrow \\int f(-x)dx=\\int f(x)dx\\&amp;\\Leftrightarrow -\\int f(-x)d(-x)=\\int f(x)dx\\&amp;\\Leftrightarrow F(-x)=-F(x)\\&amp;\\Leftrightarrow F(x)为奇函数\\\\end{align}$$ 3.奇偶函数复合后的奇偶性$$\\begin{align}&amp;\\exist f(x),g(x),F(x)=f(g(x))\\&amp;设f(x)为奇函数\\&amp;(1)g(x)为偶函数\\&amp;F(-x)=f(g(-x))=f(g(x))=F(x),F(x)为偶函数\\&amp;(2)g(x)为奇函数\\&amp;F(-x)=f(g(-x))=f(-g(x))=-f(g(x))=-F(x),F(x)为奇函数\\&amp;设f(x)为偶函数\\&amp;(1)g(x)为奇函数\\&amp;F(-x)=f(g(-x))=f(g(x))=F(x),F(x)为偶函数\\&amp;(2)g(x)为偶函数\\&amp;F(-x)=f(g(-x))=f(g(x))=F(x),F(x)为偶函数\\&amp;注解:外偶全偶,外奇奇偶\\\\end{align}$$ 例题：$$\\begin{align}&amp;1.设M=\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}{\\frac{\\sin x}{1+x^2}\\cos^4xdx},N=\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}{(\\sin x^3+\\cos^4x)dx},P=\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}(x^2\\sin^3x-\\cos^4x)dx,则\\&amp;(A)N&lt;P&lt;M(B)M&lt;P&lt;N(C)N&lt;M&lt;P(D)P&lt;M&lt;N\\&amp;根据对称性判断\\&amp;M:f_M(x)为奇函数，F_M(x)为偶函数\\&amp;N:N=\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}{(\\sin x^3+\\cos^4x)dx}=\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}\\sin ^3xdx+\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}\\cos ^4xdx\\&amp;\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}\\sin ^3xdx=0,\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}\\cos ^4xdx\\geq 0,\\Rightarrow N\\geq 0\\&amp;P:P=\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}(x^2\\sin^3x-\\cos^4x)dx=\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}x^2\\sin^3xdx-\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}\\cos^4xdx\\&amp;\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}x^2\\sin^3xdx=0,\\int_{-\\frac{\\pi}{2}}^{\\frac{\\pi}{2}}\\cos^4xdx\\geq0,\\Rightarrow P\\leq0\\&amp;\\Leftrightarrow P&lt;M&lt;N,\\space\\space选(D)\\\\end{align}$$ $$\\begin{align}&amp;2.设f(x)=\\begin{cases}&amp;kx,0\\leq x\\leq \\frac{1}{2}a\\&amp;c,\\frac{1}{2}a&lt;x\\leq a\\\\end{cases},求F(x)=\\int_0^xf(t)dt,x\\in[0,a]\\&amp;F(x)=\\begin{cases}&amp;\\int_0^xktdt=\\frac{1}{2}kt^2|0^x=\\frac{1}{2}kx^2,0\\leq x\\leq \\frac{1}{2}a\\&amp;\\int_0^{\\frac{1}{2}a}ktdt+\\int{\\frac{1}{2}a}^c cdt=\\frac{1}{8}ka^2+c^2-\\frac{1}{2}ac,\\frac{1}{2}a&lt;x\\leq a\\\\end{cases}\\\\end{align}$$ $$\\begin{align}&amp;3.证明：\\int_0^{2\\pi}f(|\\cos x|)dx=4\\int_0^{\\frac{\\pi}{2}}f(|\\cos x|)dx\\\\end{align}$$ 6.已有公式$$\\begin{align}&amp;(1)\\int_0^{\\frac{\\pi}{2}}{\\sin^nxdx=\\int_0^{\\frac{\\pi}{2}}\\cos^n xdx=\\begin{cases}\\frac{n-1}{n}\\frac{n-3}{n-2}…*\\frac{1}{2}*\\frac{\\pi}{2},&amp;n为偶数\\\\frac{n-1}{n}\\frac{n-3}{n-2}…*\\frac{2}{3},&amp;n为大于1的奇数\\\\end{cases}}\\&amp;(2)\\int_0^{\\pi}xf(\\sin x)dx=\\frac{\\pi}{2}\\int_0^{\\pi}f(\\sin x)dx(f(x)为连续函数)\\\\end{align}$$ 7.与定积分有关的证明8.经典例题：例题1:$$\\begin{align}&amp;\\lim_{n\\rightarrow \\infty}{(\\frac{1}{n+1}+\\frac{1}{n+2}+…+\\frac{1}{n+n})}\\&amp;法1：夹逼定理+基本不等式\\&amp;\\frac{1}{1+x}&lt;\\ln(x+1)&lt;x\\&amp;令x=\\frac{1}{n}\\&amp;得\\frac{1}{n+1}=\\frac{\\frac{1}{n}}{\\frac{1}{n}+1}&lt;\\ln(\\frac{1}{n}+1)=\\ln(n+1)-\\ln(n)&lt;\\frac{1}{n}\\&amp;得\\frac{1}{n+2}&lt;ln(n+2)-ln(n+1)&lt;\\frac{1}{n+1}\\&amp;得\\frac{1}{n+n}&lt;\\ln(n+n)-\\ln(n+n-1)&lt;\\frac{1}{n+n-1}\\&amp;得\\frac{1}{n+1}+\\frac{1}{n+2}+…+\\frac{1}{n+n}&lt;ln(2n)-ln(n)=ln2\\&amp;法2：\\lim_{n\\rightarrow \\infty}{(\\frac{1}{n+1}+\\frac{1}{n+2}+…+\\frac{1}{n+n})}中\\&amp;\\frac{1}{n+1}中n为主体，1为变体\\&amp;\\frac{变体}{主体}\\rightarrow^{n \\rightarrow{\\infty}}\\begin{cases}0,次(夹逼定理)\\A\\neq 0,同(定积分)\\end{cases}\\&amp;\\lim_{\\lambda \\rightarrow 0}{\\sum_{i=1}^{n}{f(\\xi_i)\\Delta x_i}=\\lim_{n\\rightarrow \\infty}\\frac{1}{n}\\sum_{i=1}^{n}f(\\xi_i)(b-a)}=\\int_0^1\\frac{1}{1+x}=\\ln(1+x)|_{0}^{1}=\\ln2\\\\end{align}$$ 例题2$$\\begin{align}&amp;设f(x)=\\int_0^{\\pi}{\\frac{\\sin x}{\\pi-t}dt},计算\\int_0^{\\pi}f(x)dx.\\&amp;法1：分部积分+换元法\\&amp;原式=xf(x)|_0^{\\pi}-\\int_0^{\\pi}{\\frac{x\\sin x}{\\pi-x}dx}\\&amp;=\\pi{\\int_0^{\\pi}{\\frac{\\sin{t}}{\\pi-t}dt}-\\int_0^{\\pi}{\\frac{x\\sin x}{\\pi-x}}dx}\\&amp;=\\int_0^{\\pi}{\\frac{(\\pi-x)\\sin x}{\\pi-x}dx}=2\\&amp;法2：\\&amp;原式=\\int_0^\\pi{f(x)d(x-{\\pi})}=(x-\\pi)f(x)|_0^{\\pi}-\\int_0^{\\pi}{\\frac{(x-\\pi)\\sin x}{\\pi-x}dx}=2\\&amp;法3：二重积分转化为累次积分\\&amp;原式=\\int_0^{\\pi}{\\int_0^{\\pi}\\frac{x\\sin t}{\\pi-t}dt}dx\\\\end{align}$$ 例题3 $$\\begin{align}&amp;法1：构造辅助函数\\&amp;根据题意f(1)=f(-1)=1,f(0)=-1\\Rightarrow f(x)为偶函数,f最低点函数值为-1\\&amp;可以构造符合题意的辅助函数f(x)=2x^2-1\\&amp;法2：根据函数的性质直接判断\\end{align}$$ 例题4 $$\\begin{align}&amp;因为\\lim_{x\\rightarrow 0}{\\frac{ax-\\sin x}{\\int_b^x{\\frac{\\ln{1+t^3}}{t}dt}}}=c(c\\neq 0)\\&amp;所以\\lim_{x\\rightarrow 0}{ax-\\sin x}=0并且\\lim_{x \\rightarrow 0}{\\int_b^x{\\frac{\\ln{1+t^3}}{t}dt}}=0\\&amp;化简,使用洛必达法则上下求导\\&amp;\\lim_{x\\rightarrow 0}{\\frac{ax-\\sin x}{\\int_b^x{\\frac{\\ln{1+t^3}}{t}dt}}}=\\lim_{x\\rightarrow 0}{\\frac{a-\\cos x}{\\frac{\\ln{1+x^3}}{x}}}=\\lim_{x\\rightarrow 0}{\\frac{a-\\cos x}{x^2}}\\&amp;\\Rightarrow a=1,c=\\frac{1}{2},b=0\\\\end{align}$$ 反常积分一、无穷区间上的反常积分$$\\begin{align}&amp;(1)\\int_a^{+\\infty}{f(x)}dx=\\lim_{t\\rightarrow +\\infty}{\\int_{a}^{t}f(x)dx}\\&amp;(2)\\int_{-\\infty}^{b}{f(x)}dx=\\lim_{t\\rightarrow -\\infty}{\\int_{t}^{b}f(x)dx}\\&amp;(3)\\int_{-\\infty}^{0}{f(x)}dx和{\\int_{0}^{+\\infty}f(x)dx}都收敛,则{\\int_{-\\infty}^{+\\infty}f(x)dx}收敛\\&amp;且{\\int_{-\\infty}^{+\\infty}f(x)dx}=\\int_{-\\infty}^{0}{f(x)}dx+{\\int_{0}^{+\\infty}f(x)dx}\\&amp;如果其中一个发散,结果也发散\\&amp;常用结论：\\int_a^{+\\infty}{\\frac{1}{x^p}dx}\\begin{cases}&amp;p1,收敛\\&amp;p\\leq1 ,发散\\\\end{cases},(a0)\\\\end{align}$$ 二、无界函数的反常积分$$\\begin{align}&amp;如果函数f(x)在点a的任一领域内都无界,那么点a为函数f(x)的瑕点(也称为无界点).无界函数的反常积分也成为瑕积分\\&amp;(1)设函数f(x)在(a,b]上连续,点a为f(x)的瑕点.如果极限\\lim_{t\\rightarrow a^+}{\\int_{t}^{b}{f(x)dx}}\\exist,\\&amp;则称此极限为函数f(x)在区间[a,b]上的反常区间,记作\\int_{a}^{b}f(x)dx,即\\int_{a}^{b}f(x)dx=\\lim_{t\\rightarrow a^+}{\\int_{t}^{b}{f(x)dx}}\\&amp;这时也称反常积分\\int_a^b{f(x)dx}收敛,如果上述极限不存在，则反常积分\\int_a^b{f(x)dx}发散\\&amp;(2)设函数f(x)在[a,b)上连续,点b为函数f(x)的瑕点,则可以类似定义函数f(x)在区间[a,b]上的反常积分\\int_a^bf(x)dx=\\lim_{t\\rightarrow b^-}{\\int_a^tf(x)dx}\\&amp;设函数f(x)在[a,b]上除点c(a&lt;c&lt;b)外连续,点c为函数f(x)的瑕点,如果反常积分\\int_a^c{f(x)dx}和\\int_c^b{f(x)dx}都收敛\\&amp;则称反常积分\\int_a^b{f(x)dx}收敛,且\\int_a^b{f(x)dx}=\\int_a^c{f(x)dx}+\\int_c^b{f(x)dx}\\&amp;如果至少一个发散,则称\\int_a^b{f(x)dx}发散\\&amp;常用结论：\\&amp;\\int_a^b{\\frac{1}{(x-a)^p}}\\begin{cases}&amp;p&lt;1,收敛\\&amp;p\\geq 1,发散\\\\end{cases}\\&amp;\\int_a^b{\\frac{1}{(x-a)^p}}\\begin{cases}&amp;p&lt;1,收敛\\&amp;p\\geq 1,发散\\\\end{cases}\\\\end{align}$$ 三、例题例题1$$\\begin{align}&amp;\\int\\frac{1}{\\ln^{\\alpha}x}d(\\ln x)\\rightarrow^{\\ln x=u}\\int{\\frac{du}{u^{\\alpha+1}}}\\begin{cases}&amp;{\\alpha-1&lt; 1}\\&amp;{\\alpha+11}\\\\end{cases}\\Rightarrow 0&lt;\\alpha&lt;2\\\\end{align}$$ 定积分的应用微元法$$\\begin{align}&amp;\\\\end{align}$$ 一、几何应用1.平面图形的面积$$\\begin{align}&amp;(1)若平面域D由曲线y=f(x),y=g(x)(f(x)\\geq g(x)),x=a,x=b(a&lt;b)所围成,则平面域D的面积为\\&amp;S=\\int_a^b{[f(x)-g(x)]dx}\\&amp;(2)若平面域D由曲线由\\rho=\\rho(\\theta),\\theta=\\alpha,\\theta=\\beta(\\alpha&lt;\\beta)所围成,则其面积为S=\\frac{1}{2}\\int_{\\alpha}^{\\beta}{\\rho^2(\\theta)d\\theta}\\end{align}$$ 2.旋转体的体积$$\\begin{align}&amp;若区域D由曲线y=f(x)(f(x)\\geq 0)和直线x=a,x=b(0\\leq a&lt;b)及x轴所围成,则\\&amp;(1)区域D绕x轴旋转一周所得到的旋转体体积为V_x=\\pi\\int_a^b{f^2(x)dx}\\&amp;(2)区域D绕y轴旋转一周所得到的旋转体体积为V_y=2\\pi\\int_a^b{xf(x)dx}\\&amp;(3)区域D绕y=kx+b轴旋转一周所得到的旋转体体积为V=2\\pi\\int_D\\int{r(x,y)d\\sigma}\\&amp;例如：求y=x,y=x^2在第一象限的封闭图形绕转轴的体积\\\\end{align}$$ $$\\begin{align}&amp;V_x=2\\pi\\int_D\\int yd\\sigma=2\\pi\\int_0^1{dx}\\int_{x^2}^{x}ydy\\&amp;V_y=2\\pi\\int_D\\int xd\\sigma=2\\pi\\int_0^1{dx}\\int_{x^2}^{x}xdy\\&amp;V_{x=1}=2\\pi\\int_D\\int (1-x)d\\sigma\\&amp;V_{y=2}=2\\pi\\int_D\\int (2-y)d\\sigma\\\\end{align}$$ 3.曲线弧长$$\\begin{align}&amp;(1)C:y=y(x),a\\leq x\\leq b,s=\\int_a^b{\\sqrt{1+y’^2}dx}\\&amp;(2)C:\\begin{cases}&amp;x=x(t)\\&amp;y=y(t)\\\\end{cases},\\alpha \\leq t\\leq \\beta,s=\\int_{\\alpha}^{\\beta}{\\sqrt{x’^2+y’^2}dx}\\&amp;(3)C:\\rho=\\rho(\\theta),\\alpha \\leq \\theta\\leq \\beta,s=\\int_{\\alpha}^{\\beta}{\\sqrt{\\rho^2+\\rho’^2}dx}\\\\end{align}$$ 4.旋转体侧面积$$\\begin{align}&amp;曲线y=f(x)(f(x)\\geq 0)和直线x=a,x=b(0\\leq a&lt;b)及x轴所围成的区域绕x轴旋转所得到的旋转体的侧面积为\\&amp;S=2\\pi\\int_a^b{f(x)\\sqrt{1+f’^2(x)}dx}\\\\end{align}$$ 二、物理应用1.压力2.变力做功3.引力（较少考）例题1$$\\begin{align}&amp;分析题意可知,该容器由x^2+y^2=1的圆和x^2+(y-1)^2=1的偏心圆组成\\&amp;根据图像的对称性可以避免不同表达式带来的困难\\&amp;对圆的小带子进行积分，带子长度为x，积分区间为-1到\\frac{1}{2}，\\int_{-1}^{\\frac{1}{2}}{\\pi x^2dy}\\&amp;由于图像的对称性，将积分结果乘二\\&amp;(1)V=2\\pi\\int_{-1}^{\\frac{1}{2}}{x^2}dy=2\\pi\\int_{-1}^{\\frac{1}{2}}{(1-y^2)dy}=\\frac{9\\pi}{4}\\\\end{align}$$ $$\\begin{align}&amp;(2)W=FS=GS=mgS=\\rho VSg\\&amp;上部为W_1=\\int_{\\frac{1}{2}}^{2}(2y-y^2)(2-y)dy\\rho g\\&amp;下部为W_2=\\int^{\\frac{1}{2}}_{-1}(1-y^2)(2-y)dy*\\rho g\\&amp;W=W_1+W_2\\\\end{align}$$ 例题2$$\\begin{align}&amp;F_p=PA=\\rho ghA\\&amp;将图像分为上部和下部，上部为矩形区域和下部的抛物线围成的面积区域，对其进行依次求解\\&amp;P_1=2\\rho gh\\int_1^{h+1}{h+1-y}dy=\\rho gh^2\\&amp;P_2=2\\rho gh\\int_0^1{(h+1-y)\\sqrt{y}dy=4\\rho g(\\frac{1}{3}h+\\frac{2}{15})}\\&amp;\\frac{P_1}{P_2}=\\frac{4}{5}\\Rightarrow h=2,h=-\\frac{1}{3}(舍去)\\end{align}$$","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86%E4%B8%8E%E5%AE%9A%E7%A7%AF%E5%88%86%E4%B8%8E%E5%8F%8D%E5%B8%B8%E7%A7%AF%E5%88%86/"},{"title":"高等数学二元函数的可偏导","text":"1.二元函数的可偏导 在二元函数中，一元函数的可导的概念变为可偏导，导函数的概念变为偏导函数，具体看下例： 二元函数f(x,y)对x、y的偏导函数分别为： 在求二元函数的偏导函数时，都是假设另外一个变量为常量，然后对余下那个变量求导数。例如，f(x,y)对x的偏导函数，就是假设y为常量，然后f(x,y)对变量x求导数即得。 对于某一点，函数f(x, y)在该点的两个偏导数可能都存在、可能只存在一个、也可能都不存在。 在点(0, 0)的两个偏导数只存在一个的函数例子： 在点(0, 0)的两个偏导数都不存在的函数例子： 在点(0, 0)的两个偏导数都存在的函数例子： 对于上面三个例子，小编建议大家亲手去算算偏导数，这样能加深对二元函数偏导数的理解。 2.二元函数的可微 某一点可微描述的是函数增量与自变量增量之间的线性关系。在一元函数中，若线性主部的系数只与该点有关，则可微。以此类推，在二元函数中，若多个自变量的线性主部的系数都只与该点有关，则可微。下面分别列出一元函数、二元函数函数增量与自变量增量之间的关系式： 对于一特定点，当A、B为常数时，即A、B与自变量增量无关，则函数在该点可微，且A、B分别为函数在该点对x、y求偏导后的偏导数。 3.可微、可偏导、连续、导函数连续之间的关系 为了方便比较一元函数，小编先给出一元函数在某点C上关于可微、可导、连续、导函数连续的关系图。在图1中，函数f(x)可微与可导等价，因此可微与可导之间是双向箭头；在点C可微、可导必能得出函数f(x)在点C连续，但连续不能推出f(x)在点C可导、可微。因此可微、可导与连续之间是单向箭头。而导函数在点C连续，很明显就能推出函数在点C可导、可微、连续，但反过来，无法推出导函数在点C连续。 图1.一元函数可微、可导关系示意图 小编提醒大家，一定要经常记忆上图，而且是要理解性地记忆，比如说一元函数可微，要能明白可微是什么，关系式如何写！ 相比于一元函数，二元函数就复杂多了，下面先给出二元函数可微、可偏导、连续、导函数连续的关系图。 图2.多元函数可微、可偏导关系示意图 当然在记忆这些关系时，我们通常要花时间记忆的是那些不容易理解的关系，而这些不容易理解的关系是与一元函数相比较后的那些不同之处。 3.1可微与可偏导不等价 在阐述二元函数可微与可偏导不等价前，不妨先回顾下，为什么一元函数中可微与可导是等价的？ 在一元函数中，如果函数f(x)在x=x0处可导，则有如下关系式： 假设在一元函数中，函数增量与自变量存在如下关系： 上式两边同除以△x，然后两边对△x取极限，可知A=m，则根据一元函数可微的定义，A只与x=x0有关，与△x无关，所以f(x)在x=x0可微。同理，不难得出在一元函数中，可微亦可推出可导。 那么在二元函数中，如何论证可微必可推导呢？ 假设二元函数在点C(x0, y0)可微，则由可微的定义，必存在(x0, y0)的某邻域，使得下式成立： 不妨分别令△x=0、△y=0，根据①式可得： 之所以可以令△x=0、△y=0，是因为点(x0, y0+△y)和(x0+△x, y0)都在点(x0, y0)的可微邻域内。 对②中两式求极限，可得: 结合偏导数的定义和③中的两个极限，可知可微情况下，函数在点C的两个偏导数都存在，因此可微必可偏导。 尽管可微必可偏导，但反过来不成立，请看下面这个例子： 函数F在(0, 0)的两个偏导数都存在且为0，现在用反证法证明函数F在点(0, 0)不可微。假设函数F在原点可微，则根据可微定义，下列极限必存在，但是下列极限可以通过列举两条路径很容易验证不存在，原假设错误，所以可偏导不一定可微。 3.2 可偏导不一定连续 在二元函数关系图中，另外一个很让人费解的地方，是二元函数在某点的两个偏导数都存在，但是函数在这一点却不一定连续。为了说明这一点，请看下面这个函数： 相信大家都能很熟练地计算出函数F在原点对x、y的偏导数均为0，但是当曲线沿着y=x的路径趋于原点时，函数值会趋于1，不等于0，因此函数F在原点不连续。 从抽象的角度看，二元函数在某一点的两个偏导数都存在，只能说明二元函数沿x方向、沿y方向趋于该点的值等于函数在该点的定义值，但无法保证沿其它方向趋于该点的值也等于函数值。","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%BA%8C%E5%85%83%E5%87%BD%E6%95%B0%E5%8F%AF%E5%BE%AE%E4%B8%8E%E5%81%8F%E5%AF%BC%E7%9A%84%E8%81%94%E7%B3%BB%E2%80%8B/"},{"title":"高等数学函数","text":"函数定义: 二要素：定义域&amp;对应关系$$\\begin{align}&amp;y=f(x),x\\in R \\Leftrightarrow y=(t),t\\in R\\&amp;\\int_{a}^{b}f(t)dt=\\int_{a}^{b}f(x)dx\\&amp;\\sqrt{x^2}=|x|=(x^{2})^{\\frac{1}{2}}\\&amp;-\\sqrt{x^2}=-|x|=-(x^2)^{\\frac{1}{2}}\\end{align}$$ 例题：$$\\begin{align}&amp;证明：|\\frac{x}{1+x^2}|\\leq\\frac{1}{2}\\&amp;用a^2+b^2\\geq 2ab\\&amp;解：|\\frac{x}{1+x^2}|\\geq|\\frac{x}{2x}|=\\frac{1}{2}得证\\end{align}$$ 基本初等函数：$$\\begin{align}&amp;常函数:y=c\\&amp;幂函数:y=x^a\\&amp;指数函数:y=a^x\\&amp;对数函数:y=\\log_{a}x\\&amp;三角函数:y=\\sin x ,y=\\cos x,y=\\tan x,y=\\csc x=\\frac{1}{\\sin x},y=\\sec x=\\frac{1}{\\cos x},y=\\cot x=\\frac{1}{\\tan x}\\&amp;反三角函数:y=\\arcsin x,y=\\arccos x,y=\\arctan x,y=arccot x\\end{align}$$ arcsinx&amp;sinx$$\\begin{align}&amp;y=\\arcsin x,x \\in [-1,1],y \\in [-\\frac{\\pi}{2},\\frac{\\pi}{2}]\\&amp;\\arcsin (x+\\frac{\\sqrt{2}}{2})=+\\frac{\\pi}{4}\\&amp;\\arcsin (x-\\frac{\\sqrt{2}}{2})=-\\frac{\\pi}{4}\\&amp;\\arcsin (x+1)=+\\frac{\\pi}{2}\\&amp;\\arcsin (x-1)=-\\frac{\\pi}{2}\\&amp;\\arcsin x并不是\\sin x的反函数，只是\\sin x在x \\in [-\\frac{\\pi}{2},\\frac{\\pi}{2}]内的逆映射\\end{align}$$ arccosx&amp;cosx$$\\begin{align}&amp;y=\\arccos x,x \\in [-1,1],y \\in [0,\\pi]\\&amp;\\arccos (+1)=0\\&amp;\\arccos (-1)=\\pi\\&amp;\\arccos (\\frac{1}{2})=\\frac{\\pi}{3}\\&amp;\\arccos x并不是\\cos x的反函数，只是\\cos x在x \\in [0,\\pi]内的逆映射\\end{align}$$ arctanx&amp;tanx$$\\begin{align}&amp;y=\\arctan x,x \\in [-\\infty,+\\infty],y \\in [-\\frac{\\pi}{2},\\frac{\\pi}{2}]\\&amp;\\arctan (+\\infty)=\\frac{\\pi}{2}\\&amp;\\arctan (-\\infty)=-\\frac{\\pi}{2}\\end{align}$$ arccotx&amp;cotx$$\\begin{align}&amp;y=arccot x,x \\in [-\\infty,+\\infty],y \\in [0,\\pi]\\&amp;\\arctan (+\\infty)=0\\&amp;\\arctan (-\\infty)=\\pi\\end{align}$$ $$\\begin{align}&amp;连续函数存在反函数，其反函数也是连续函数\\&amp;一个可导函数存在反函数，其反函数不一定可导(可导函数x^3的反函数x^{\\frac{1}{3}}在0处并不可导)\\\\end{align}$$ 常用的三角恒等：$$\\begin{align}&amp;\\sin^{2}x+\\cos^{2}x=1 \\&amp;\\sin 2x=2\\sin x \\cos x=\\frac{2\\tan x}{1+\\tan^{2}x}\\&amp;\\cos 2x=\\cos^{2}x-\\sin^{2}x=1-2\\sin^{2}x=2\\cos^{2}x-1=\\frac{1-\\tan^{2}x}{1+\\tan^{2}x}\\&amp;1+\\tan^{2}x=\\sec^{2}x\\&amp;1+\\cot^{2}x=\\csc^{2}x\\&amp;\\arcsin x+arccosx=\\frac{\\pi}{2}(\\forall x\\in[-1,1])\\&amp;\\arctan x+arccot x=\\frac{\\pi}{2}(\\forall x\\in(-\\infty,+\\infty))\\&amp;\\arcsin x+\\arcsin \\sqrt{1-x^2}=\\frac{\\pi}{2}(\\forall x\\in[0,1])\\&amp;\\arctan x+\\arctan \\frac{1}{x}=\\frac{\\pi}{2}(\\forall x \\in(-\\infty,0)\\cup(0,+\\infty))\\end{align}$$ 函数性质1）奇偶性$$\\begin{align}&amp;奇函数:f(-x)=-f(x),偶函数f(-x)=f(x)\\&amp;f,g为奇函数，f(g(x))为奇函数还是偶函数？\\&amp;用定义:\\&amp;f(g(-x))=f(-g(x))=-f(g(x))\\Leftrightarrow f(g(x))是奇函数\\end{align}$$ 判断奇偶性的方法：（1）定义 （2）奇偶函数的四则运算：奇函数代数和为奇函数，偶函数的代数和为偶函数，奇函数和偶函数的乘积为奇函数 （3）奇函数的复合运算：内外函数至少一个为偶函数，则复合函数为偶函数，奇函数与奇函数复合为奇函数 （4）奇函数的导数为偶函数，偶函数的导函数为奇函数，奇函数的原函数为偶函数，但偶函数的原函数未必为奇函数$$f(x)=1,F(x)=x+1,\\int_{0}^{x}f(t)dt为奇函数$$ 2）周期性3）单调性初等函数由基本初等函数经四则运算以及复合运算后得到的函数 一个初等函数的绝对值还是初等函数 函数有界性$$\\begin{align}&amp;有界\\Leftrightarrow 上下有界\\&amp;无界\\Leftrightarrow 上下界1个或没有\\end{align}$$ 判定有界性方法：$$\\begin{align}&amp;1)定义，对函数的绝对值放大不等式，直到某一正常值，按最值得到函数有界\\&amp;2)若f(x)在D1,D2上均有界，则在D1\\cup D2上也有界\\&amp;3)闭区间上的连续函数一定是有界的(开区间上的连续函数不一定是有界\\tan x)\\&amp;4)收敛数列必有界\\&amp;5)存在极限的函数局部有界\\&amp;\\lim_{x \\rightarrow x_0}f(x)\\Rightarrow f(x)必在x_0的某空心邻域内有界\\&amp;\\lim_{x \\rightarrow +\\infty}f(x)\\Rightarrow 必存在M,使f(x)在(M,+\\infty)内有界\\end{align}$$ 判定函数无界方法：$$\\begin{align}&amp;无穷大量必无界(lim_{x\\rightarrow \\frac{\\pi}{2}}\\tan x=\\infty)\\&amp;局部无界必整体无界(f(x)=x\\sin x)\\end{align}$$例题：$$\\begin{align}&amp;证明：f(x)=\\frac{\\ln x}{x-1}在(0,1)内无界，在(1,+\\infty)内有界\\&amp;证：\\lim_{x\\rightarrow0^{+}}f(x)=+\\infty \\Rightarrow f(x)在(0,\\epsilon)内无界 \\Rightarrow f(x)在(0,1)内无界\\&amp;\\lim_{x\\rightarrow1^{+}}f(x)=1,从而\\exist \\epsilon0,使f(x)在(1,1+\\epsilon)内有界\\&amp;\\lim_{x\\rightarrow+\\infty}f(x)=0,从而\\exist M1+\\epsilon,使f(x)在(1,+\\infty)内有界\\&amp;又由f(x)在[M,+\\infty]上连续，从而有界，使得f(x)在(1,+\\infty)内有界&amp;\\end{align}$$$$\\begin{align}&amp;注解：f(x)在(1,1)处无定义，导致f(x)在全局不连续，需要分类讨论\\&amp;在x\\rightarrow0^+时，在该空心邻域(0,\\epsilon)内函数极限等于+\\infty,故领域内无上界，可推出邻域内无界，进一步可推出f(x)在(0,1)无界\\&amp;在x\\rightarrow1^+时，在该空心领域(1,1+\\epsilon)内函数极限等于1，故领域内有上界，在x\\rightarrow +\\infty时,函数在邻域内极限等于0又由于f(x)在[1,+\\infty)内为连续函数，可以推出在x\\in [1,+\\infty)f(x)\\end{align}$$ 复合函数$$y=f(u),u=g(x) ,y\\leftarrow g\\leftarrow x(逐一传递)$$ 例题：$$\\begin{align}&amp;f(\\sqrt[3]{x}-1)=x-1,求f(x)\\&amp;解：设u=\\sqrt[3]{x}-1\\&amp;x=(u+1)^3,f(u)=(u+1)^3-1\\&amp;f(x)=(x+1)^3-1\\&amp; \\&amp;注解：凑右侧表达式(反解很难时)\\\\end{align}$$ 反函数注解：$$\\begin{align}&amp;1.一一对应的函数有反函数，从而区间上的严格单调必有反函数\\&amp;y=\\sin x无反函数，但y=\\sin x,x\\in[-\\frac{\\pi}{2},\\frac{\\pi}{2}]\\&amp;2.函数x=f^{-1}(y)与y=f^{-1}(x)为同一函数，前者图像与y=f(x)相同，后者图像与y=f(x)关于y=x对称\\&amp;3.对于\\forall x\\in D,f^{-1}(f(x))=x;当y\\in f(D)时,有f(f^{-1}(y))=y\\end{align}$$例题：$$\\begin{align}&amp;\\arcsin (\\sin \\theta)=\\frac{\\pi}{4},且\\theta \\in(\\frac{\\pi}{2},\\pi),求\\theta=?\\&amp;解：\\theta \\in (\\frac{\\pi}{2},\\pi) \\Rightarrow \\pi-\\theta \\in (0,\\frac{\\pi}{2}) \\&amp;\\arcsin (\\sin(\\pi - \\theta))=\\frac{\\pi}{4} \\Rightarrow \\pi - \\theta=\\frac{\\pi}{4}\\&amp;\\theta=\\frac{3\\pi}{4}\\end{align}$$","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/"},{"title":"高等数学向量代数与空间解析几何","text":"第四章 向量代数与空间解析几何第一节 向量及向量代数定义1：$$\\begin{align}&amp;(1)向量:\\vec{a}=x\\vec{i}+y\\vec{j}+z\\vec{k}={x,y,z}\\&amp;(2)向量的模: |\\vec{a}|=\\sqrt{x^2+y^2+z^2}\\&amp;(3)单位向量: |\\vec a|=1,\\vec a=(\\frac{x}{\\sqrt{x^2+y^2+z^2}},\\frac{y}{\\sqrt{x^2+y^2+z^2}},\\frac{z}{\\sqrt{x^2+y^2+z^2}})=(\\cos \\alpha,\\cos\\beta,\\cos \\gamma)\\&amp;(4)向量\\vec{a}的方向余弦(方向数):方向角\\alpha,\\beta,\\gamma\\in[0,\\pi]\\&amp;\\vec{a}=(\\cos \\alpha,\\cos\\beta,\\cos \\gamma)\\\\end{align}$$ 定理1：$$\\begin{align}&amp;设A(a_1,a_2,a_3),B(b_1,b_2,b_3)\\in R^3,则\\vec{AB}={b_1,b_2,b_3}-{a_1,a_2,a_3}={b_1-a_1,b_2-a_2,b_3-a_3}\\\\end{align}$$ 定义2$$\\begin{align}&amp;(1)线性运算:\\vec{a}+\\vec{b},\\vec{a}-\\vec{b}\\&amp;\\lambda\\vec{a}=\\begin{cases}&amp;|\\lambda\\vec a|\\vec a,\\lambda0,即与\\vec a同向\\&amp;\\vec{0},\\lambda=0,即为零向量\\&amp;-|\\lambda\\vec a|\\vec a,\\lambda&lt;0,即与\\vec a反向\\\\end{cases}\\end{align}$$$$\\begin{align}&amp;(2)数积(内积,点积):数积\\vec{a}\\cdot\\vec{b}是一个数\\&amp;\\vec{a}\\cdot\\vec{b}=|\\vec a||\\vec b|\\cos \\theta\\&amp;注解：判定垂直\\&amp;(3)矢积(外积,叉积):矢积\\vec{a}\\vec{b}是一个向量,满足:\\&amp;[1]|\\vec a\\vec b|=|\\vec{a}||\\vec{b}|\\sin \\theta\\&amp;[2]\\vec a\\vec b\\perp\\vec{a}和\\vec{b},\\vec{a},\\vec{b}和\\vec a\\vec b的方向满足右手法则\\&amp;注解：\\&amp;1)判断平行\\&amp;2)|\\vec{a}*\\vec{b}|的几何意义：\\\\end{align}$$$$\\begin{align}&amp;(4)混合积:[\\vec a\\vec b \\vec c]\\overset{\\Delta}{=}(\\vec a *\\vec b)\\cdot \\vec c=\\vec c\\cdot(\\vec a *\\vec b)=(\\vec b *\\vec c)\\cdot \\vec a\\&amp;注解:[\\vec a\\vec b \\vec c]的几何意义是体积\\\\end{align}$$ 定理 2$$\\begin{align}&amp;设\\vec{a}={a_1,a_2,a_3},\\vec{b}={b_1,b_2,b_3}\\&amp;则\\lambda\\vec{a}+\\mu\\vec{b}={\\lambda a_1+\\mu b_1,\\lambda a_2+\\mu b_2,\\lambda a_3+\\mu b_3}\\\\end{align}$$ 定理 3 定理 4 定理 5 定理 6 例题 $$\\begin{align}&amp;解：\\&amp;(a,b,c)表示a,b,c的混合积,即(a,b,c)=(aXb)..c .且(aXb)..c=(bXc)..a=(cXa)..b\\&amp;混合积几何意义为三向量空间围成的体积\\&amp;AXB方向尊崇右手定则 值为ABsin A..B=ABcos\\&amp;因为 (a+b)X(b+c)=aXb+aXc+bXb+bXc=aXb+aXc+bXc\\&amp;所以 (a+b)X(b+c)..(c+a)=(aXb+aXc+bXc)..(c+a)=(a,b,c)+(a,b,a)+(a,c,c)+(a,c,a)+(b,c,c)+(b,c,a).\\&amp;因为 (aXb) 垂直于a\\&amp;所以 (a,b,a)=(aXb)*a=0,\\&amp;同理,(a,c,c)=(a,c,a)=(b,c,c)=0.\\&amp;又因为 (a,b,c)=2,\\&amp;所以 (b,c,a)=(a,b,c)=2.\\&amp;所以 (a+b)x(b+c)..(c+a) =4.\\end{align}$$ 第二节 平面与直线平面点法式方程$$\\begin{align}&amp;\\vec{p_0p}\\cdot\\vec{n}=0\\&amp;\\Leftrightarrow a(x-x_0)+b(y-y_0)+c(z-z_0)=0\\&amp;\\vec{n}={a,b,c}\\neq0为法向量,P_0(x_0,y_0,z_0)为平面上的一点\\\\end{align}$$ 一般式方程$$\\begin{align}&amp;ax+by+cz+d=0,\\vec{n}={a,b,c}\\neq0为法向量\\\\end{align}$$ 注解： 截距式方程$$\\begin{align}&amp;\\frac{x}{a}+\\frac{y}{b}+\\frac{z}{c}=1\\&amp;a,b,c为平面在三个坐标轴上的截距\\&amp;注解:截距式方程只能表示和三个坐标轴都相交的平面\\end{align}$$ 点到面的距离$$\\begin{align}&amp;点P_0(x_0,y_0,z_0)到平面ax+by+cz+d=0的距离\\&amp;\\rho=\\frac{|ax_0+by_0+cz_0+d|}{\\sqrt{a^2+b^2+c^2}}\\end{align}$$ 两平面夹角（法向量夹角）$$\\begin{align}&amp;cos\\theta=\\frac{\\vec{n_1}\\cdot\\vec{n_2}}{|\\vec{n_1}||\\vec{n_2}|}\\\\end{align}$$ 平面与平面的位置关系 直线标准式方程（点向式）$$\\begin{align}&amp;\\vec{p}//\\vec{p_0p}\\&amp;\\frac{x-x_0}{l}=\\frac{y-y_0}{m}=\\frac{z-z_0}{n}\\&amp;其中P_0(x_0,y_0,z_0)为直线上一点,\\vec{L}={l,m,n}\\neq0为直线的方向向量\\end{align}$$ 一般式方程 参数式方程 点到直线的距离 两直线夹角 直线与直线的位置 直线与平面的位置关系 基本方法","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%90%91%E9%87%8F%E4%BB%A3%E6%95%B0%E4%B8%8E%E7%A9%BA%E9%97%B4%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/"},{"title":"高等数学定积分与反常积分","text":"定积分与反常积分定积分一、定积分概念1.定义$$\\begin{align}&amp;定义:设函数f(x)在区间[a,b]上有定义且有界\\&amp;(1)分割：将[a,b]分成n个[x_{i-1},x_{i}]小区间\\&amp;(2)求和：[x_{i-1},x_{i}]上取一点\\xi_{i},\\sum_{i=1}^{n}{f(\\xi_{i})\\Delta x_i},\\lambda=\\max{\\Delta x_{1},\\Delta x_{2},…,\\Delta x_{n}}\\&amp;(3)取极限：若\\lim_{\\lambda \\rightarrow 0}{\\sum_{i=1}^{n}f(\\xi_{i})\\Delta x}\\exist,且极值不依赖区间[a,b]分发以及点\\xi_{i}的取法,则称f(x)在区间[a,b]上可积,\\&amp;\\int^{b}{a}{f(x)dx}=\\lim{\\lambda \\rightarrow 0}{f(\\xi)\\Delta x_{i}}&amp;\\&amp;注解：\\&amp;(1)\\lambda \\rightarrow0 \\rightarrow \\nleftarrow n\\rightarrow \\infty\\&amp;(2)定积分表示一个值,与积分区间[a,b]有关,与积分变化量x无关\\&amp;\\int_{a}^{b}{f(x)dx}=\\int_{a}^{b}{f(t)dt}\\&amp;(3)如果积分\\int_{0}^{1}{f(x)dx}\\exist,将[0,1]n等分，此时\\Delta{x_{i}}=\\frac{1}{n},取\\xi_{i}=\\frac{i}{n},\\&amp;\\int_{0}^{1}f(x)dx=\\lim_{\\lambda \\rightarrow 0}{\\sum_{i=1}{n}{f(\\xi_{i})\\Delta x_{i}}}=\\lim_{n\\rightarrow \\infty}\\sum_{i=1}^{n}f(\\frac{i}{n})\\\\end{align}$$ 定理：(线性)$$\\begin{align}&amp;\\int[\\alpha f(x)+\\beta g(x)]dx=\\alpha\\int f(x)dx+\\beta\\int g(x)dx\\\\end{align}$$注解：积分无小事$$\\begin{align}&amp;\\int{e^{\\pm x^2}dx,\\int{\\frac{\\sin x}{x}}}积不出来\\\\end{align}$$ 2.定积分存在的充分条件$$\\begin{align}&amp;若f(x)在[a,b]上连续,则\\int^{b}{a}{f(x)dx}必定存在\\&amp;若f(x)在[a,b]上有上界,且只有有限个间断点,则\\int^{b}{a}{f(x)dx}必定存在\\&amp;若f(x)在[a,b]上只有有限个第一类间断点,则\\int^{b}_{a}{f(x)dx}必定存在\\\\end{align}$$ 3.定积分的几何意义$$\\begin{align}&amp;(1)f(x)\\geqslant{0},\\int_{a}^{b}{f(x)dx}=S\\\\end{align}$$$$\\begin{align}&amp;(2)f(x)\\leqslant{0},\\int_{a}^{b}{f(x)dx}=-S\\\\end{align}$$ $$\\begin{align}&amp;(3)f(x)\\geqslant{0}\\cup f(x)\\leqslant{0},\\int_{a}^{b}{f(x)dx}=S_1+S_3-S_2\\end{align}$$ 二、定积分的性质1.不等式性质$$\\begin{align}&amp;(1)保序性：若在区间[a,b]上f(x)\\leqslant{g(x)},则\\int_a^{b}{f(x)dx}\\leqslant{\\int_a^{b}{g(x)dx}}\\\\end{align}$$ $$\\begin{align}&amp;(2)若M及m分别是f(x)在[a,b]上的最大值和最小值,\\&amp;则m(b-a)\\leqslant{\\int_a^{b}{f(x)dx}\\leqslant{M(b-a)}}\\\\end{align}$$ $$\\begin{align}&amp;证明：M(b-a)=S_{AFDC}=S_1+S_2+S_3\\&amp;m(b-a)=S_{EBDC}=S_3\\&amp;\\int_a^{b}{f(x)dx}=S_{ADBC}=S_2+S_3\\&amp;S_3\\leqslant{S_2+S_3\\leqslant{S_1+S_2+S_3}}\\&amp;\\Leftrightarrow{m(b-a)\\leqslant{\\int_a^{b}{f(x)dx}\\leqslant{M(b-a)}}}\\\\end{align}$$ $$\\begin{align}&amp;(3)|\\int_a^{b}{f(x)dx}|\\leqslant{\\int_a^{b}{|f(x)|dx}}\\\\end{align}$$ 2.中值定理$$\\begin{align}&amp;(1)若f(x)在[a,b]上连续,则\\int_a^{b}{f(x)dx}=f(\\xi)(b-a),(a&lt;\\xi&lt;b)\\&amp;称\\frac{1}{b-a}{\\int_{a}^{b}{f(x)dx}为函数y=f(x)在区间[a,b]上的平均值}\\&amp;注解：F’(x)=f(x),F(b)-F(a)=\\int_a^b{f(x)dx},f(\\xi)(b-a)=F’(\\xi)(b-a)\\&amp;(2)若f(x),g(x)在[a,b]上连续，g(x)不变号,则\\int_{a}^{b}{f(x)g(x)dx}=f(\\xi)\\int_a^b{g(x)dx}\\\\end{align}$$ 三、积分上限函数$$\\begin{align}&amp;如果f(x)在区间[a,b]上连续,则\\Phi(x)=\\int_a^b{f(t)dt}在[a,b]上可导,且\\int_a^b{f(t)dt})\\&amp;(\\int_a^xf(t)dt)’=f(x),(\\int_a^{x^2}f(t)dt)’=f(x^2)*2x\\&amp;如果f(x)在区间[a,b]上连续,\\phi_1(x),\\phi_2(x)为可导函数,则\\Phi(x)=\\int_a^b{f(t)dt}在[a,b]上可导,且(\\int_{\\phi_1(x)}^{\\phi_2(x)}{f(t)dt})’\\&amp;=f[\\phi_2(x)]*\\phi_2’(x)-f[\\phi_1(x)]*\\phi_1’(x)=(\\int_{\\phi_1(x)}^0{f(t)dt}+\\int_{\\phi_2(x)}^0{f(t)dt})’\\&amp;设函数f(x)在[-l,l]上连续,则\\&amp;如果f(x)为奇函数,那么\\int_0^xf(t)dt必为偶函数\\&amp;如果f(x)为偶函数,那么\\int_0^xf(t)dt必为奇函数\\\\end{align}$$ 四、定积分的计算1.牛顿莱布尼茨公式$$\\int_a^bf(x)dx=F(x)|_a^b=F(b)-F(a)$$ 2.换元积分法$$\\int_a^bf(x)dx=\\int_\\alpha^\\beta{f(\\Phi(t))\\Phi’(t)dt}$$ 3.分部积分法$$\\int_a^budv=uv|_a^b-\\int_a^bvdu$$ 4.奇偶性和周期性$$\\begin{align}&amp;(1)设f(x)为[-a,a]上的连续函数(a0),则\\&amp;\\int_{-a}{a}f(x)dx=\\begin{cases}0,&amp;f(x)奇函数\\2\\int_0^af(x)dx,&amp;f(x)偶函数\\end{cases}\\&amp;(2)设f(x)是以T为周期的连续函数,则对\\forall A，有\\int_a^{a+T}f(x)=\\int_0^T{f(x)dx}\\\\end{align}$$ 5.已有公式$$\\begin{align}&amp;(1)\\int_0^{\\frac{\\pi}{2}}{\\sin^nxdx=\\int_0^{\\frac{\\pi}{2}}\\cos^n xdx=\\begin{cases}\\frac{n-1}{n}\\frac{n-3}{n-2}…*\\frac{1}{2}*\\frac{\\pi}{2},&amp;n为偶数\\\\frac{n-1}{n}\\frac{n-3}{n-2}…*\\frac{2}{3},&amp;n为大于1的奇数\\\\end{cases}}\\&amp;(2)\\int_0^{\\pi}xf(\\sin x)dx=\\frac{\\pi}{2}\\int_0^{\\pi}f(\\sin x)dx(f(x)为连续函数)\\\\end{align}$$ 6.经典例题：例题1:$$\\begin{align}&amp;\\lim_{n\\rightarrow \\infty}{(\\frac{1}{n+1}+\\frac{1}{n+2}+…+\\frac{1}{n+n})}\\&amp;法1：夹逼定理+基本不等式\\&amp;\\frac{1}{1+x}&lt;\\ln(x+1)&lt;x\\&amp;令x=\\frac{1}{n}\\&amp;得\\frac{1}{n+1}=\\frac{\\frac{1}{n}}{\\frac{1}{n}+1}&lt;\\ln(\\frac{1}{n}+1)=\\ln(n+1)-\\ln(n)&lt;\\frac{1}{n}\\&amp;得\\frac{1}{n+2}&lt;ln(n+2)-ln(n+1)&lt;\\frac{1}{n+1}\\&amp;得\\frac{1}{n+n}&lt;\\ln(n+n)-\\ln(n+n-1)&lt;\\frac{1}{n+n-1}\\&amp;得\\frac{1}{n+1}+\\frac{1}{n+2}+…+\\frac{1}{n+n}&lt;ln(2n)-ln(n)=ln2\\&amp;法2：\\lim_{n\\rightarrow \\infty}{(\\frac{1}{n+1}+\\frac{1}{n+2}+…+\\frac{1}{n+n})}中\\&amp;\\frac{1}{n+1}中n为主体，1为变体\\&amp;\\frac{变体}{主体}\\rightarrow^{n \\rightarrow{\\infty}}\\begin{cases}0,次(夹逼定理)\\A\\neq 0,同(定积分)\\end{cases}\\&amp;\\lim_{\\lambda \\rightarrow 0}{\\sum_{i=1}^{n}{f(\\xi_i)\\Delta x_i}=\\lim_{n\\rightarrow \\infty}\\frac{1}{n}\\sum_{i=1}^{n}f(\\xi_i)(b-a)}=\\int_0^1\\frac{1}{1+x}=\\ln(1+x)|_{0}^{1}=\\ln2\\\\end{align}$$ 例题2$$\\begin{align}&amp;设f(x)=\\int_0^{\\pi}{\\frac{\\sin x}{\\pi-t}dt},计算\\int_0^{\\pi}f(x)dx.\\&amp;法1：分部积分+换元法\\&amp;原式=xf(x)|_0^{\\pi}-\\int_0^{\\pi}{\\frac{x\\sin x}{\\pi-x}dx}\\&amp;=\\pi{\\int_0^{\\pi}{\\frac{\\sin{t}}{\\pi-t}dt}-\\int_0^{\\pi}{\\frac{x\\sin x}{\\pi-x}}dx}\\&amp;=\\int_0^{\\pi}{\\frac{(\\pi-x)\\sin x}{\\pi-x}dx}=2\\&amp;法2：\\&amp;原式=\\int_0^\\pi{f(x)d(x-{\\pi})}=(x-\\pi)f(x)|_0^{\\pi}-\\int_0^{\\pi}{\\frac{(x-\\pi)\\sin x}{\\pi-x}dx}=2\\&amp;法3：二重积分转化为累次积分\\&amp;原式=\\int_0^{\\pi}{\\int_0^{\\pi}\\frac{x\\sin t}{\\pi-t}dt}dx\\\\end{align}$$ 例题3 $$\\begin{align}&amp;法1：构造辅助函数\\&amp;根据题意f(1)=f(-1)=1,f(0)=-1\\Rightarrow f(x)为偶函数,f最低点函数值为-1\\&amp;可以构造符合题意的辅助函数f(x)=2x^2-1\\&amp;法2：根据函数的性质直接判断\\end{align}$$ 例题4 $$\\begin{align}&amp;因为\\lim_{x\\rightarrow 0}{\\frac{ax-\\sin x}{\\int_b^x{\\frac{\\ln{1+t^3}}{t}dt}}}=c(c\\neq 0)\\&amp;所以\\lim_{x\\rightarrow 0}{ax-\\sin x}=0并且\\lim_{x \\rightarrow 0}{\\int_b^x{\\frac{\\ln{1+t^3}}{t}dt}}=0\\&amp;化简,使用洛必达法则上下求导\\&amp;\\lim_{x\\rightarrow 0}{\\frac{ax-\\sin x}{\\int_b^x{\\frac{\\ln{1+t^3}}{t}dt}}}=\\lim_{x\\rightarrow 0}{\\frac{a-\\cos x}{\\frac{\\ln{1+x^3}}{x}}}=\\lim_{x\\rightarrow 0}{\\frac{a-\\cos x}{x^2}}\\&amp;\\Rightarrow a=1,c=\\frac{1}{2},b=0\\\\end{align}$$ 反常积分一、无穷区间上的反常积分$$\\begin{align}&amp;(1)\\int_a^{+\\infty}{f(x)}dx=\\lim_{t\\rightarrow +\\infty}{\\int_{a}^{t}f(x)dx}\\&amp;(2)\\int_{-\\infty}^{b}{f(x)}dx=\\lim_{t\\rightarrow -\\infty}{\\int_{t}^{b}f(x)dx}\\&amp;(3)\\int_{-\\infty}^{0}{f(x)}dx和{\\int_{0}^{+\\infty}f(x)dx}都收敛,则{\\int_{-\\infty}^{+\\infty}f(x)dx}收敛\\&amp;且{\\int_{-\\infty}^{+\\infty}f(x)dx}=\\int_{-\\infty}^{0}{f(x)}dx+{\\int_{0}^{+\\infty}f(x)dx}\\&amp;如果其中一个发散,结果也发散\\&amp;常用结论：\\int_a^{+\\infty}{\\frac{1}{x^p}dx}\\begin{cases}&amp;p1,收敛\\&amp;p\\leq1 ,发散\\\\end{cases},(a0)\\\\end{align}$$ 二、无界函数的反常积分$$\\begin{align}&amp;如果函数f(x)在点a的任一领域内都无界,那么点a为函数f(x)的瑕点(也称为无界点).无界函数的反常积分也成为瑕积分\\&amp;(1)设函数f(x)在(a,b]上连续,点a为f(x)的瑕点.如果极限\\lim_{t\\rightarrow a^+}{\\int_{t}^{b}{f(x)dx}}\\exist,\\&amp;则称此极限为函数f(x)在区间[a,b]上的反常区间,记作\\int_{a}^{b}f(x)dx,即\\int_{a}^{b}f(x)dx=\\lim_{t\\rightarrow a^+}{\\int_{t}^{b}{f(x)dx}}\\&amp;这时也称反常积分\\int_a^b{f(x)dx}收敛,如果上述极限不存在，则反常积分\\int_a^b{f(x)dx}发散\\&amp;(2)设函数f(x)在[a,b)上连续,点b为函数f(x)的瑕点,则可以类似定义函数f(x)在区间[a,b]上的反常积分\\int_a^bf(x)dx=\\lim_{t\\rightarrow b^-}{\\int_a^tf(x)dx}\\&amp;设函数f(x)在[a,b]上除点c(a&lt;c&lt;b)外连续,点c为函数f(x)的瑕点,如果反常积分\\int_a^c{f(x)dx}和\\int_c^b{f(x)dx}都收敛\\&amp;则称反常积分\\int_a^b{f(x)dx}收敛,且\\int_a^b{f(x)dx}=\\int_a^c{f(x)dx}+\\int_c^b{f(x)dx}\\&amp;如果至少一个发散,则称\\int_a^b{f(x)dx}发散\\&amp;常用结论：\\&amp;\\int_a^b{\\frac{1}{(x-a)^p}}\\begin{cases}&amp;p&lt;1,收敛\\&amp;p\\geq 1,发散\\\\end{cases}\\&amp;\\int_a^b{\\frac{1}{(x-a)^p}}\\begin{cases}&amp;p&lt;1,收敛\\&amp;p\\geq 1,发散\\\\end{cases}\\\\end{align}$$ 三、例题例题1$$\\begin{align}&amp;\\int\\frac{1}{\\ln^{\\alpha}x}d(\\ln x)\\rightarrow^{\\ln x=u}\\int{\\frac{du}{u^{\\alpha+1}}}\\begin{cases}&amp;{\\alpha-1&lt; 1}\\&amp;{\\alpha+11}\\\\end{cases}\\Rightarrow 0&lt;\\alpha&lt;2\\\\end{align}$$ 定积分的应用一、几何应用1.平面图形的面积$$\\begin{align}&amp;(1)若平面域D由曲线y=f(x),y=g(x)(f(x)\\geq g(x)),x=a,x=b(a&lt;b)所围成,则平面域D的面积为\\&amp;S=\\int_a^b{[f(x)-g(x)]dx}\\&amp;(2)若平面域D由曲线由\\rho=\\rho(\\theta),\\theta=\\alpha,\\theta=\\beta(\\alpha&lt;\\beta)所围成,则其面积为S=\\frac{1}{2}\\int_{\\alpha}^{\\beta}{\\rho^2(\\theta)d\\theta}\\end{align}$$ 2.旋转体的体积$$\\begin{align}&amp;若区域D由曲线y=f(x)(f(x)\\geq 0)和直线x=a,x=b(0\\leq a&lt;b)及x轴所围成,则\\&amp;(1)区域D绕x轴旋转一周所得到的旋转体体积为V_x=\\pi\\int_a^b{f^2(x)dx}\\&amp;(2)区域D绕y轴旋转一周所得到的旋转体体积为V_y=2\\pi\\int_a^b{xf(x)dx}\\&amp;(3)区域D绕y=kx+b轴旋转一周所得到的旋转体体积为V=2\\pi\\int_D\\int{r(x,y)d\\sigma}\\&amp;例如：求y=x,y=x^2在第一象限的封闭图形绕转轴的体积\\\\end{align}$$ $$\\begin{align}&amp;V_x=2\\pi\\int_D\\int yd\\sigma=2\\pi\\int_0^1{dx}\\int_{x^2}^{x}ydy\\&amp;V_y=2\\pi\\int_D\\int xd\\sigma=2\\pi\\int_0^1{dx}\\int_{x^2}^{x}xdy\\&amp;V_{x=1}=2\\pi\\int_D\\int (1-x)d\\sigma\\&amp;V_{y=2}=2\\pi\\int_D\\int (2-y)d\\sigma\\\\end{align}$$ 3.曲线弧长$$\\begin{align}&amp;(1)C:y=y(x),a\\leq x\\leq b,s=\\int_a^b{\\sqrt{1+y’^2}dx}\\&amp;(2)C:\\begin{cases}&amp;x=x(t)\\&amp;y=y(t)\\\\end{cases},\\alpha \\leq t\\leq \\beta,s=\\int_{\\alpha}^{\\beta}{\\sqrt{x’^2+y’^2}dx}\\&amp;(3)C:\\rho=\\rho(\\theta),\\alpha \\leq \\theta\\leq \\beta,s=\\int_{\\alpha}^{\\beta}{\\sqrt{\\rho^2+\\rho’^2}dx}\\\\end{align}$$ 4.旋转体侧面积$$\\begin{align}&amp;曲线y=f(x)(f(x)\\geq 0)和直线x=a,x=b(0\\leq a&lt;b)及x轴所围成的区域绕x轴旋转所得到的旋转体的侧面积为\\&amp;S=2\\pi\\int_a^b{f(x)\\sqrt{1+f’^2(x)}dx}\\\\end{align}$$ 二、物理应用1.压力2.变力做功3.引力（较少考）例题1$$\\begin{align}&amp;分析题意可知,该容器由x^2+y^2=1的圆和x^2+(y-1)^2=1的偏心圆组成\\&amp;根据图像的对称性可以避免不同表达式带来的困难\\&amp;对圆的小带子进行积分，带子长度为x，积分区间为-1到\\frac{1}{2}，\\int_{-1}^{\\frac{1}{2}}{\\pi x^2dy}\\&amp;由于图像的对称性，将积分结果乘二\\&amp;(1)V=2\\pi\\int_{-1}^{\\frac{1}{2}}{x^2}dy=2\\pi\\int_{-1}^{\\frac{1}{2}}{(1-y^2)dy}=\\frac{9\\pi}{4}\\\\end{align}$$ $$\\begin{align}&amp;(2)W=FS=GS=mgS=\\rho VSg\\&amp;上部为W_1=\\int_{\\frac{1}{2}}^{2}(2y-y^2)(2-y)dy\\rho g\\&amp;下部为W_2=\\int^{\\frac{1}{2}}_{-1}(1-y^2)(2-y)dy*\\rho g\\&amp;W=W_1+W_2\\\\end{align}$$ 例题2$$\\begin{align}&amp;F_p=PA=\\rho ghA\\&amp;将图像分为上部和下部，上部为矩形区域和下部的抛物线围成的面积区域，对其进行依次求解\\&amp;P_1=2\\rho gh\\int_1^{h+1}{h+1-y}dy=\\rho gh^2\\&amp;P_2=2\\rho gh\\int_0^1{(h+1-y)\\sqrt{y}dy=4\\rho g(\\frac{1}{3}h+\\frac{2}{15})}\\&amp;\\frac{P_1}{P_2}=\\frac{4}{5}\\Rightarrow h=2,h=-\\frac{1}{3}(舍去)\\end{align}$$","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%A7%AF%E5%88%86%E4%B8%8E%E5%8F%8D%E5%B8%B8%E7%A7%AF%E5%88%86/"},{"title":"高等数学多元函数微分学","text":"第四章 多元函数微分学第一节 基本概念机结论定义1：（二元函数）$$\\begin{align}&amp;z=f(x,y),(x,y)\\in D\\subset R^2\\\\end{align}$$ 例题$$\\begin{align}&amp;f(x,y)=\\arcsin(2x)+\\ln y+\\frac{\\sqrt{4x-y^2}}{\\ln{(1-x^2-y^2)}}\\&amp;解：-1\\leq 2x\\leq 1,y0,1-x^2-y^20,1-x^2-y^2\\neq1,4x-y^2\\geq0\\&amp;D={(x,y)|-\\frac{1}{2}\\leq x\\leq\\frac{1}{2},y0,x^2+y^2&lt;1,x\\geq\\frac{1}{4}y^2}\\\\end{align}$$ 定义2：（二元函数的极限）$$\\begin{align}&amp;\\lim_{(x,y)\\rightarrow(x_0,y_0)}f(x,y)=A或\\lim_{x\\rightarrow x_0,y\\rightarrow y_0}f(x,y)=A\\\\end{align}$$ 例题$$\\begin{align}&amp;求极限\\&amp;解法1；\\&amp;\\lim_{x\\rightarrow 0,y\\rightarrow 0}xy\\frac{x^2-y^2}{x^2+y^2}\\&amp;\\xlongequal[x=r\\cos\\theta]{y=r\\sin\\theta}\\lim_{r\\rightarrow0}{r\\cos\\theta r\\sin\\theta\\frac{r^2\\cos2\\theta}{r^2}}=0\\&amp;解法2：\\&amp;0\\leq|xy\\frac{x^2-y^2}{x^2+y^2}|\\leq{|xy|}\\&amp;\\lim_{x\\rightarrow 0,y\\rightarrow 0}{0}=0\\leq\\lim_{x\\rightarrow 0,y\\rightarrow 0}|xy\\frac{x^2-y^2}{x^2+y^2}|\\leq\\lim_{x\\rightarrow 0,y\\rightarrow 0}|xy|=0\\&amp;\\Leftrightarrow\\lim_{x\\rightarrow 0,y\\rightarrow 0}xy\\frac{x^2-y^2}{x^2+y^2}=0\\&amp;\\&amp;验证极限不存在\\&amp;(1)\\lim_{x\\rightarrow 0,y\\rightarrow 0}\\frac{xy}{x^2+y^2}\\&amp;(2)\\lim_{x\\rightarrow 0,y\\rightarrow 0}\\frac{x^3+y^3}{x^2+y}\\&amp;解：\\&amp;(1)令y=kx\\&amp;\\lim_{x\\rightarrow0,y=kx}\\frac{xkx}{x^2+k^2x^2}=\\frac{k}{1+k^2}\\&amp;(2)令y=-x^2+x^4\\&amp;\\lim_{x\\rightarrow0,y=-x^2+x^4}\\frac{x^3+(x^4-x^2)^3}{x^2+(-x^2+x^4)}=\\lim_{x\\rightarrow0}{[\\frac{1}{x}}+\\frac{(x^4-x^2)^2}{x^4}]=\\infty\\\\end{align}$$注解：$$\\begin{align}&amp;一元函数{(x,f(x))|x\\in D}\\&amp;多元函数{(x,y,f(x,y))|(x,y)\\in D}\\end{align}$$ 定义3（二院函数的连续性）$$\\begin{align}&amp;f(x,y)在点P_0处连续:\\lim_{x\\rightarrow x_0,y\\rightarrow y_0}f(x,y)=f(x_0,y_0)\\&amp;注解1：z=f(x,y)于P_0点连续\\Leftrightarrow\\Delta z=f(x,y)-f(x_0,y_0)\\rightarrow0(x\\rightarrow x_0,y\\rightarrow y_0)\\&amp;注解2：”二元初等函数”在其定义域内处处连续，\\lim_{x\\rightarrow 1,y\\rightarrow2}\\frac{x+y}{x-y}=-3\\\\end{align}$$ 定理1$$\\begin{align}&amp;有界闭区域D\\subset{R}上的连续函数,必有界,且有最大值最小值 \\\\end{align}$$ 定义4（偏导数）$$\\begin{align}&amp;\\frac{\\partial{z}}{\\partial x}|{(x_0,y_0)}=\\lim{\\Delta x\\rightarrow 0}\\frac{\\Delta Z_x}{\\Delta x}=\\lim_{\\Delta x\\rightarrow0}\\frac{f(x_0+\\Delta x,y_0)-f(x_0,y_0)}{\\Delta x}\\&amp;f_y’(x_0,y_0)=\\lim_{\\Delta y\\rightarrow0}\\frac{\\Delta Z_y}{\\Delta y}=\\lim_{y\\rightarrow y_0}\\frac{f(x_0,y_)-f(x_0,y_0)}{y-y_0}\\end{align}$$ 例题$$\\begin{align}&amp;(1)设f(x,y)=\\begin{cases}&amp;\\frac{xy}{x^2+y^2},(x,y)\\neq(0,0)\\&amp;0,(x,y)=(0,0)\\\\end{cases},求f_x’(0,0)和f’y(0,0),但\\lim{x\\rightarrow 0,y\\rightarrow 0}f(x,y)不存在\\&amp;(2)求f(x,y)=\\sqrt{x^2+y^2}在(0,0)处的偏导数，并说明函数在此点的连续性\\\\end{align}$$$$\\begin{align}&amp;（1）f_x’(0,0)=\\lim_{x\\rightarrow0}\\frac{f(x,0)-f(0,0)}{x-0}=\\lim_{x\\rightarrow 0}{\\frac{0-0}{x}}=0\\&amp;同理得f_y’(0,0)=0&amp;\\\\end{align}$$ $$\\begin{align}&amp;\\lim_{x\\rightarrow 0^{\\pm}}\\frac{f(x,0)-f(0,0)}{x-0}=\\lim_{x\\rightarrow x^{\\pm}}\\frac{\\sqrt{x^2}-0}{x}=\\pm 1\\&amp;\\Rightarrow f’_x(0,0),f’_y(0,0)不存在\\\\end{align}$$ 定义5（全微分）$$\\begin{align}&amp;若z=f(x,y),\\Delta z=A\\Delta x+B\\Delta y+o(\\rho)(\\rho\\rightarrow 0),\\rho=\\sqrt{\\Delta x^2+\\Delta y^2},则称z=f(x,y)在点P_0可微，\\&amp;dz|{(x_0,y_0)}=df|{(x_0,y_0)}=A\\Delta x+B\\Delta y\\end{align}$$ 注解：$$\\begin{align}&amp;(1)若\\exist A,B使得\\lim_{\\Delta x\\rightarrow0,\\Delta y\\rightarrow 0}\\frac{\\Delta f-A\\Delta x-B\\Delta y}{\\sqrt{\\Delta x^2+\\Delta y^2}}=0,则f于(0,0)可微\\&amp;(2)若f于(x_0,y_0)可微,则\\lim\\frac{\\Delta f-df}{\\sqrt{\\Delta x^2+\\Delta y^2}}=0\\end{align}$$ 定理2$$\\begin{align}&amp;若z=f(x,y)在点P_0(x_0,y_0)处可微,则偏导数存在，且dz|_{(x_0,y_0)}=f’_x(x_0,y_0)dx+f_y’(x_0,y_0)dy\\\\end{align}$$ 定理3 几个命题之间的关系$$\\begin{align}&amp;可微\\Rightarrow\\begin{cases}&amp;连续\\Rightarrow极限存在\\&amp;偏导数存在\\&amp;方向导数存在\\\\end{cases}\\\\end{align}$$ 二元函数可微与偏导的联系 - blueflylabor - 博客园 (cnblogs.com) 例题 注解：$$\\begin{align}&amp;可微充分条件\\Leftrightarrow偏导函数在(x_0,y_0)处连续\\Rightarrow 可微\\\\end{align}$$ 第二节 多元函数微分法初等函数的微分法 注解：$$\\begin{align}&amp;(1)对x把y看做常数，对y把x看成常数\\&amp;(2)u\\begin{cases}&amp;u_x’\\begin{cases}&amp;u’’{xx}\\&amp;u’’{xy}\\\\end{cases}\\&amp;u_y’\\begin{cases}&amp;u’’{yx}\\&amp;u’’{yy}\\\\end{cases}\\\\end{cases}当偏导函数连续时,u’’{xy}=u’’{yx}\\end{align}$$ 例题$$\\begin{align}&amp;1.设z=\\arcsin\\frac{x}{\\sqrt{x^2+y^2}}，求\\frac{\\partial^2z}{\\partial x^2},\\frac{\\partial^2z}{\\partial x\\partial y}\\&amp;解\\&amp;z’x=\\frac{|y|}{x^2+y^2}\\&amp;z’’{xx}=\\frac{\\partial}{\\partial x}(\\frac{|y|}{x^2+y^2})=\\begin{cases}&amp;\\frac{-2xy}{(x^2+y^2)^2},y0\\&amp;0,x\\neq0,y=0\\&amp;\\frac{2xy}{(x^2+y^2)^2},y0\\end{cases}\\&amp;z’’_{xy}=\\frac{\\partial}{\\partial y}(\\frac{|y|}{x^2+y^2})=\\begin{cases}&amp;\\frac{x^2-y^2}{(x^2+y^2)^2},y0\\&amp;不存在,x\\neq 0,y=0\\&amp;\\frac{y^2-x^2}{(x^2+y^2)^2},y&lt;0\\\\end{cases}\\\\end{align}$$ 复合函数微分法 $$\\begin{align}&amp;\\frac{\\partial z}{\\partial x}=-\\frac{1}{x^2}f(xy)+\\frac{1}{x}f’(xy)y+y\\phi’(x+y)\\&amp;\\frac{\\partial^2 z}{\\partial x\\partial y}=-\\frac{1}{x^2}f’(xy)x+\\frac{1}{x}[f’’(xy)xy+f’(xy)]+\\phi’(x+y)+y\\phi’’(x+y)\\\\end{align}$$3. $$\\begin{align}&amp;法1：\\&amp;\\frac{\\partial f}{\\partial x}=e^{-(xy)^2}y-e^{-(x+y)^2}\\&amp;\\frac{\\partial^2 f}{\\partial x\\partial y}=\\&amp;法2：\\&amp;令u=x+y,v=xy,f(x,y)由\\int_v^ue^{-t^2}dt与\\begin{cases}&amp;u=x+y\\&amp;v=xy\\\\end{cases}复合\\&amp;\\frac{\\partial f}{\\partial x}=e^{-(v)^2}\\frac{\\partial u}{\\partial x}-e^{-(u)^2}\\frac{\\partial v}{\\partial x}\\&amp;\\frac{\\partial^2 f}{\\partial x\\partial y}=\\\\end{align}$$ 多元隐函数的微分法 例题： $$\\begin{align}&amp;法1:公式法\\&amp;F(x,y,u)=u+e^u-xy,u’_x=\\frac{\\partial u}{\\partial x}=-\\frac{F’_x}{F’_x}=-\\frac{-y}{1+e^u}\\&amp;法2:\\&amp;u’_x+e^uu’_x=y,u_x’=\\frac{y}{1+e^u},u’_y={\\frac{x}{1+e^u}}\\&amp;\\frac{\\partial ^2u}{\\partial x\\partial y}={\\frac{1*[1+e^u]-ye^uu_y’}{[1+e^u]^2}}\\\\end{align}$$ 多元函数的极值与最值求法 无条件极值（二元）$$\\begin{align}&amp;(1)定义\\&amp;(2)必要条件\\begin{cases}&amp;z_x’(x_0,y_0)=0\\&amp;z_y’(x_0,y_0)=0\\\\end{cases}\\&amp;(3)充分条件\\Delta=AC-B^2\\begin{cases}&amp;0\\&amp;&lt;0\\\\end{cases}\\&amp;A=f_{xx}’’(x_0,y_0),B=f_{xy}’’(x_0,y_0),C=f’’_{yy}(x_0,y_0)\\\\end{align}$$ 有界闭区域$$\\begin{align}&amp;有界闭区域D上的连续函数f(x,y)的最值：\\&amp;如果函数f(x,y)在有界闭区域D\\subset R^2上连续，则f(x,y)必在D上取得最大值和最小值\\\\end{align}$$ 解题步骤 例题：","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E5%BE%AE%E5%88%86%E5%AD%A6/"},{"title":"高等数学导数与微分","text":"导数与微分(-)导数与微分概念1.导数$$\\begin{aligned}&amp;定义1：(导数)(相当于x_0处的变化率)f’(x_0)=\\lim_{\\Delta x\\to 0} \\tfrac{\\Delta y}{\\Delta x}=\\lim_{\\Delta x\\to 0}\\frac{f(x_0+x)-f(x_0)}{\\Delta x}=\\lim_{h\\to 0}\\frac{f(x_0+h)-f(x_0)}{h}\\&amp;定义2：(左导数)(左领域内可导)\\&amp;f_-‘(x_0)=\\lim_{\\Delta x\\to 0^-} \\tfrac{\\Delta y}{\\Delta x}=\\lim_{\\Delta x\\to 0^-}\\frac{f(x_0+x)-f(x_0)}{\\Delta x}=\\lim_{h\\to 0^-}\\frac{f(x_0+h)-f(x_0)}{h}\\&amp;定义2：(右导数)(右领域内可导)\\&amp;f_+’(x_0)=\\lim_{\\Delta x\\to 0^+} \\tfrac{\\Delta y}{\\Delta x}=\\lim_{\\Delta x\\to 0^+}\\frac{f(x_0+x)-f(x_0)}{\\Delta x}=\\lim_{h\\to 0^+}\\frac{f(x_0+h)-f(x_0)}{h}\\\\end{aligned}$$ $$定理1：f’(x)可导\\Leftrightarrow f’-(x)\\exist f’+(x)\\exist,f’-(x)=f’+(x)$$ 2.微分$$\\begin{align}&amp;定义4：(微分) 如果\\Delta y=f(x_0+\\Delta x)-f(x_0)可以表示为\\&amp;\\Delta y=A\\Delta x+o(\\Delta x)\\&amp;则称函数f(x)在点x_0处可微,称A\\Delta x为微分，记为dy=A\\Delta x\\&amp;dy\\approx \\Delta y在一个微小的区域用均与的变量代替非均匀的变量\\&amp;微分是函数改变量的一个线性主部\\end{align}$$ $$定理2：函数y=f(x)在点x_0处可微\\Leftrightarrow f(x)在点x_0处可导，且有dy=f’(x_0)\\Delta x=f’(x_0)dx$$ $$\\begin{align}&amp;S(x)=x^2,S(x+\\Delta x)=(x+\\Delta x)^2\\&amp;\\Delta S=(x+\\Delta x)^2-x^2=2x+(\\Delta x)^2=2x+O(\\Delta x)\\&amp;线性主部(ds=2x\\Delta x=S’(x)\\Delta x)+高阶无穷小\\&amp;\\Delta S\\approx2x-\\Delta x(\\Delta x\\rightarrow 0)\\&amp;\\&amp;\\Delta f(x)=A\\Delta x+O(\\Delta x)(x\\rightarrow 0)\\Leftrightarrow \\lim_{\\Delta x \\rightarrow 0}\\frac{\\Delta x-A\\Delta x}{\\Delta x}=0\\&amp;(1)若\\exist A,使得\\lim_{\\Delta x \\rightarrow 0}\\frac{\\Delta f-A\\Delta x}{\\Delta x}\\&amp;(2)若f可微,则\\lim_{\\Delta x \\rightarrow 0}\\frac{\\Delta f-f’(x)\\Delta x}{\\Delta x}=0\\\\end{align}$$ 3.导数与微分的几何意义 4.连续，可导，可微之间的关系 $$\\begin{align}&amp;注解：f(x)在x_0处连续\\Leftrightarrow \\lim_{x\\rightarrow x_0}f(x)=f(x_0)\\&amp;\\Leftrightarrow \\lim_{x\\rightarrow x_0}[f(x)-f(x_0)]=0 即\\lim_{\\Delta x\\rightarrow 0}\\Delta f=0\\\\end{align}$$ (二)导数公式及求导法则 “乘除变加减”$$u^v=e^{vln{u}}$$ $$y=u^v \\Leftrightarrow ln{y}=vln{u}$$ 高阶导数$$\\begin{align}&amp;设y=Sin3x,求y^{(n)}\\&amp;y’=Cos3x*3=Sin(3x+\\frac{\\pi}{2})3\\&amp;y’’=Cos(3x+\\frac{\\pi}{2})3^2=Sin(3x+2\\frac{\\pi}{2})\\&amp;\\Rightarrow y^{(n)}=Sin(3x+n\\frac{\\pi}{2})3^n\\&amp;y=Sin(ax+b) \\Rightarrow y^{(n)}=Sin(3x+n\\frac{\\pi}{2})*3^n\\end{align}$$ $$\\begin{align}&amp;设y=x^2Cosx,求y^{(n)}\\&amp;令u=x^2,v=cosx\\&amp;u’=2x,u’’=2,u’’’=0,…u^{(n)}=0\\&amp;(uv)^{(n)}=\\sum_{k=0}^{n}u^{k}v^{(n-k)}\\&amp;y^{(n)}=C_{n}^{0}x^2Cos(x+n*\\frac{\\pi}{2})+C_{n}^1(2x)Cos(x+(n-1)\\frac{\\pi}{2})+C^2_{n}(2)Cos(x+(n-2)*\\frac{\\pi}{2})\\end{align}$$ (三)微分法1.复合函数与初等函数的微分法(1).基本微分 (2).复合函数微分法（链式法则）$$\\begin{align}&amp;设函数u=\\Phi(x)于点x处可导,函数y=f(u)于点u=\\Phi(u)可导\\&amp;则函数y=f(\\Phi(x))在点x处可导,且\\frac{dy}{dx}=\\frac{dy}{du}.\\frac{du}{dx}\\&amp;或写成[f(\\Phi(x))]’=f(\\Phi(x))\\Phi’(x)\\\\end{align}$$ 例题$$\\begin{align}&amp;设u=\\tan y,x=e^t,试将下面y关于x的函数方程F(\\frac{d^2y}{dx^2},\\frac{dy}{dx},y,x)=0\\&amp;解：\\&amp;y=y(u(t(x))),t=\\ln x,y=\\arctan u,y=\\arctan u(\\ln(x))\\&amp;\\frac{dy}{dx}=\\frac{dy}{du}*\\frac{du}{dt}*\\frac{dt}{dx}=\\frac{1}{1+u^2}*\\frac{du}{dt}*\\frac{1}{x}\\&amp;\\frac{d^2y}{dx^2}=d[\\frac{dy}{du}]*\\frac{du}{dt}*\\frac{dt}{dx}+\\frac{dy}{du}*d[\\frac{du}{dt}]*\\frac{dt}{dx}+\\frac{dy}{du}*\\frac{du}{dt}*d[\\frac{dt}{dx}]\\&amp;[\\frac{2u}{(1+u^2)^2}]*\\frac{du}{dt}\\frac{dt}{dx}+\\frac{1}{1+u^2}[\\frac{d^2u}{dt^2}*\\frac{1}{x}]*\\frac{1}{x}+\\frac{1}{1+u^2}\\frac{du}{dt}[-\\frac{1}{x^2}]\\&amp;\\\\end{align}$$ 2.隐函数微分法例题$$\\begin{align}&amp;设y=y(x)由方程e^y+6xy+x^2-1=0确定,y’’(0);设y=y(x)由方程xe^{f(y)}=e^y确定,f二阶可导,且f’\\neq1,求y’’(x)\\&amp;e^yy’+6y+6xy’+2x=0\\&amp;e^yy’’+e^y*(y’)^2+6xy’’+12y’+2=0\\\\end{align}$$ 例题1.$$\\begin{align}&amp;设f’(x_0)=-1,则\\lim_{x\\rightarrow 0}\\frac{x}{f(x_0-2x)-f(x_0-x)}=?\\&amp;\\&amp;解1：\\&amp;I=\\lim_{x\\rightarrow 0}\\frac{1}{(-2)\\frac{f(x_0-2x)-f(x_0)}{(-2x)}+\\frac{f(x_0-x)-f(x_0)}{-x}}=-1\\&amp;解2：\\&amp;因为f’(x_0)=-1,I=\\lim_{x\\rightarrow 0}\\frac{1}{(-1)*\\frac{f(x_0-2x)-f(x_0-x)}{-x}}=-1\\\\end{align}$$ 2.$$\\begin{align}&amp;设函数f(x)在x=0处连续,且\\lim_{h\\rightarrow0}\\frac{f(h^2)}{h^2}=1,则\\&amp;(A)f(0)=0且f_{-}’(0)\\exist\\&amp;(B)f(0)=1且f_{-}’(0)\\exist\\&amp;(C)f(0)=0且f_{+}’(0)\\exist\\&amp;(D)f(0)=1且f_{+}’(0)\\exist\\&amp;\\&amp;解：\\&amp;因为f(x)在x=0处连续,\\lim_{x\\rightarrow 0}f(x)=f(0)\\&amp;因为\\lim_{h\\rightarrow0}\\frac{f(h^2)}{h^2}=1,h\\rightarrow0,h^2=0,h\\rightarrow0,f(h^2)=0\\&amp;\\lim_{h\\rightarrow0}\\frac{f(h^2)}{h^2}\\overset{令t=h^2}{=}\\lim_{t\\rightarrow0^+}\\frac{f(t)}{t}=\\lim_{t\\rightarrow0^+}\\frac{f(t)-f(0)}{t-0}=0\\Leftrightarrow f_{+}’(0)\\exist\\\\end{align}$$ 3.$$\\begin{align}&amp;设f(x)=|x^3-1|\\Phi(x),其中\\Phi(x)在x=1处连续,则f(x)在x=1处可导的充要条件为\\Phi(1)=?\\&amp;分析问题：f(x)在x=1处什么条件可导\\&amp;解：\\&amp;\\lim_{x\\rightarrow 1^+}\\frac{f(x)-f(1)}{x-1}=\\lim_{x\\rightarrow 1^+}\\frac{(x^3-1)\\Phi(x)}{x-1}=\\lim_{x\\rightarrow 1^+}\\frac{(x-1)(x^2+x+1)\\Phi(x)}{x-1}=3\\Phi(1)\\&amp;\\lim_{x\\rightarrow 1^-}\\frac{f(x)-f(1)}{x-1}=\\lim_{x\\rightarrow 1^-}\\frac{(x^3-1)\\Phi(x)}{x-1}=\\lim_{x\\rightarrow 1^-}\\frac{(x-1)(x^2+x+1)\\Phi(x)}{x-1}=-3\\Phi(1)\\&amp;\\&amp;又因f(x)在x=1处连续,则3\\Phi(1)=-3\\Phi(1),所以\\Phi(1)=0\\&amp;注解：a^n-b^n=(a-b)(a^{n-1}b^0+a^{n-2}b^1+…+a^0b^{n-1})\\end{align}$$ 4.$$\\begin{align}&amp;设函数f(x)在x=1处连续,且\\lim_{x\\rightarrow 1}\\frac{f(x)}{x-1}=2,求f’(1).&amp;解：\\&amp;\\lim_{x \\rightarrow 1}f(x)=f(1)\\&amp;\\lim_{x \\rightarrow 1}\\frac{f(x)}{x-1}(x-1)=0=f(1)\\&amp;f’(1)=\\lim_{x \\rightarrow 1}\\frac{f(x)-f(1)}{x-1}=2\\end{align}$$ 三、参数方程所确定函数的微分法$$\\begin{align}&amp;设y=y(x)由参数方程\\cases{&amp;x=x(t)\\&amp;y=y(t)\\}所确定，则\\&amp;\\frac{dy}{dx}=\\frac{y’(t)}{x’(t)}=\\Phi’(\\Phi^{-1}(x),(\\Phi^{-1})(x)),(\\Phi^{-1})(t)=\\frac{1}{\\Phi^1(t)},\\frac{y’’(t)x’(t)-y’(t)x’’(t)}{[x’(t)]^3}\\&amp;\\\\end{align}$$ $$\\begin{align}&amp;设y=y(x)由参数方程\\cases{&amp;x=x(t)\\&amp;y=y(t)\\}所确定，则\\&amp;\\frac{dy}{dx}=\\frac{\\frac{dx}{dt}}{\\frac{dy}{dt}}=\\frac{x’(t)}{y’(t)}\\&amp;\\frac{d^2y}{dx}=\\frac{d(\\frac{dy}{dx})}{dx}=\\frac{(\\frac{x’(t)}{y’(t)})’}{x’(t)}\\\\end{align}$$ 例题：$$\\begin{align}&amp;y=y(x)由参数方程\\begin{cases}&amp;x=\\ln (1+t)^2\\&amp;y=t-\\arctan t\\\\end{cases}求\\frac{d^2y}{dx}\\&amp;\\frac{dy}{dx}=\\frac{\\frac{1+t^2}{1+t^2}-\\frac{1}{1+t^2}}{\\frac{2t}{1+t^2}}=\\frac{t}{2}\\&amp;\\frac{d^2y}{dx}=\\frac{\\frac{1}{2}}{\\frac{1}{t^+1}2t}=\\frac{t^2+1}{4t}\\\\end{align}$$ 四、反函数的微分法$$\\begin{align}&amp;设函数y=f(x)二阶可导，且f’(x)\\neq0，其反函数是x=f^{-1}(y)\\&amp;则\\frac{dx}{dy}=\\frac{1}{\\frac{dy}{dx}}=\\frac{1}{f’(x)},\\frac{d^2x}{dy^2}=-\\frac{\\frac{d^2y}{dx^2}}{(\\frac{dy}{dx})^3}=-\\frac{f’’(x)}{[f’(x)]^3}\\end{align}$$ 五、分段函数的微分法在分段区间内，按初等函数的微分法求;在分段点处，用导数、左右导数定义及导数与左右导数的关系求$$\\begin{align}&amp;设f(x)=\\cases{1-2x^2,x\\leq -1\\x^3,-1\\leq x\\leq2\\12x-16,x\\geq 2}\\&amp;(1)求f(x)的反函数g(x)\\&amp;(2)g(x)是否有间断点、不可导点\\end{align}$$","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%AF%BC%E6%95%B0%E4%B8%8E%E5%BE%AE%E5%88%86/"},{"title":"高等数学微分方程","text":"微分方程一、常微分方程的基本概念1.微分方程$$y’=2x$$ 含有未知函数的导数或微分的方程 2.微分方程的阶$$1阶方程$$ 微分方程中所出现的未知函数最高阶导数的阶数 3.微分方程的解$$y=f(x)=x^2$$ 满足微分方程的函数 4.微分方程的通解$$y=f(x)=x^2+c$$ 如果微分方程的解中包含任意常数，且任意常数的个数与微分方程的阶数相同 5.微分方程的特解$$y=f(x)=x^2+1$$ 微分方程的不含任意常数的解 6. 初始条件确定特解的一组常数 7.积分曲线方程的一个解在平面上对应一条曲线 二、一阶微分方程 y’=f(x,y)1.可分离变量的方程$$\\begin{align}&amp;y’=f(x)g(y)\\Leftrightarrow \\frac{dy}{dx}=f(x)g(y)\\Leftrightarrow \\frac{dy}{g(y)}=f(x)dx \\&amp;求解方法对两端积分\\Leftrightarrow \\int\\frac{dy}{g(y)}=\\int f(x)dx\\\\end{align}$$ 2.齐次微分方程$$\\begin{align}&amp;\\frac{dy}{dx}=\\Phi(\\frac{y}{x})\\&amp;方法：令u=\\frac{y}{x},y=ux,y’=u+u’x\\\\end{align}$$ 例题$$\\begin{align}&amp;y’+\\frac{y}{x}=(\\frac{y}{x})^2\\&amp;令u=\\frac{y}{x},y=ux,y’=u+u’x\\&amp;\\Leftrightarrow u+u’x+u=u^2\\&amp;\\Leftrightarrow u+\\frac{du}{dx}x+u=u^2\\&amp;\\Leftrightarrow \\frac{du}{u^2-2u}=\\frac{1}{x}dx\\&amp;\\Leftrightarrow \\int\\frac{du}{u^2-2u}=\\int\\frac{1}{x}dx\\&amp;\\Leftrightarrow \\frac{1}{2}(\\ln|u-2|-\\ln|u|)=\\ln|x|+C\\&amp;\\Leftrightarrow \\frac{u-2}{u}=Cx^2\\\\end{align}$$ 3.一阶线性微分方程$$\\begin{align}&amp;形如y’+p(x)y=Q(x)\\&amp;通解：y=e^{-\\int p(x)dx}[\\int Q(x)e^{\\int p(x)dx}+C]\\\\end{align}$$ 4.伯努利方程$$\\begin{align}&amp;形如y’+p(x)y=Q(x)y^n(n \\neq 0,1)\\&amp;方法：令u=y^{1-n}\\&amp;y^{-\\alpha}y’+p(x)y^{1-\\alpha}=Q(x)\\&amp;令u=y^{1-\\alpha}\\&amp;(1-\\alpha)y^{-\\alpha}y’=\\frac{du}{dx}\\\\end{align}$$ $$\\begin{align}&amp;观察到微分方程中包含y’’和y’和y,该方程为y’’=f(y,y’)型\\&amp;令y’=p,y’’=p\\frac{dp}{dy}\\&amp;得yp\\frac{dp}{dy}+p^2=0\\&amp;\\Leftrightarrow y\\frac{dp}{dy}+p=0\\&amp;当p=0时,该方程成立,但跟据初始条件y|{x=0}=1\\&amp;即p=1与其不符\\&amp;\\Leftrightarrow \\int\\frac{dp}{p}=-\\int\\frac{dy}{y}\\&amp;\\Leftrightarrow |py|=e^c\\&amp;\\Leftrightarrow p=\\frac{c}{y}\\&amp;\\Leftrightarrow \\frac{dy}{dx}=\\frac{c}{y}\\&amp;根据初始条件y’|{x=0}=\\frac{1}{2}\\Leftrightarrow c=\\frac{1}{2}\\&amp;\\Leftrightarrow y^2=x+c\\&amp;跟据初始条件y|{x=0}=1,y^2=x+1\\&amp;又y|{x=0}=10,y=\\sqrt{x+1}\\end{align}$$ ##### 5.全微分方程 三、可降阶的高阶方程$$\\begin{align}&amp;y’=p=\\frac{dy}{dx},y’’=\\frac{dp}{dx}\\&amp;y’’=f(x,y’)\\Leftrightarrow\\frac{dp}{dx}=f(x,p)\\end{align}$$ $$\\begin{align}&amp;x\\frac{dp}{dx}+3p=0\\&amp;\\int{\\frac{1}{p}dp}=-\\frac{1}{3}\\int{\\frac{1}{x}dx}\\&amp;p=\\frac{c}{x^3}\\&amp;\\frac{dy}{dx}=\\frac{c}{x^3}\\&amp;y=\\frac{c_2}{x^2}+c_1\\\\end{align}$$$$\\begin{align}&amp;y’=p=\\frac{dy}{dx},y’’=\\frac{dp}{dx}\\&amp;可得\\frac{dp}{dy}=f(y,p)无解\\&amp;令y’=p=\\frac{dy}{dx},y’’=\\frac{dp}{dx}=\\frac{dp}{dy}p\\&amp;得\\frac{dp}{dx}p=f(y,y’)\\\\end{align}$$ $$\\begin{align}&amp;y\\frac{dp}{dy}p+p^2=0\\&amp;\\int\\frac{dp}{p}=-\\int\\frac{dy}{y}\\&amp;py=c\\&amp;p=\\frac{c}{y}\\&amp;\\frac{dy}{dx}=\\frac{c}{y}\\&amp;因为y’|{x=0}=\\frac{1}{2}\\&amp;\\frac{dy}{dx}=\\frac{\\frac{1}{2}}{y}\\&amp;y^2=x+c\\&amp;因为y|{x=0}=1\\&amp;y=\\sqrt{x+1}\\end{align}$$ 四、高阶线性微分方程 $$\\begin{align}&amp;y’’+py’+qy\\Leftrightarrow r^2+pr+q=0\\&amp;共轭复根求法：x_{1},x_2=\\frac{-b\\pm i\\sqrt{4ac-b^2}}{2a}(i^2=-1)\\&amp;例：y=xe^x是y’’+py’+qy=0的解，\\&amp;(r-1)^2=0\\&amp;r^2-2r+1=0\\&amp;p=-2,q=1\\\\end{align}$$$$\\begin{align}&amp;r^2-r+\\frac{1}{4}=0\\&amp;(r-\\frac{1}{2})^2=0\\&amp;r_1=r_2=\\frac{1}{2}\\&amp;y=e^{\\frac{1}{2}x}(C_1+C_2x)\\\\end{align}$$$$\\begin{align}&amp;r^2+2r+5=0\\&amp;r_{1,2}=\\frac{-2\\pm i\\sqrt{4-20}}{2}=-1\\pm 2i\\&amp;y=e^{-x}(C_1\\cos{2x}+C_2\\sin{2x})\\end{align}$$ $$\\begin{align}&amp;r^3-2r^2+r-2=0\\&amp;r^2(r-2)+r-2=0\\&amp;(r-2)(r^2+1)=0\\&amp;r_1=2,r_{2,3}=\\pm i\\&amp;y=C_1e^{2x}+C_2\\cos{x}+C_3\\sin{x}\\\\end{align}$$$$\\begin{align}&amp;解法核心：找到齐次特解\\ \\end{align}$$$$\\begin{align}&amp;D=\\frac{d}{dt}\\&amp;令x=e^t或t=\\ln x,t’=\\frac{dt}{dx}=\\frac{1}{x}\\&amp;y’=\\frac{dy}{dx}=\\frac{dy}{dt}\\frac{dt}{dx}=\\frac{1}{x}\\frac{dy}{dt}\\&amp;xy’=\\frac{dy}{dt}=Dy\\&amp;y’’=(\\frac{1}{x}\\frac{dy}{dt})’=(\\frac{dy}{dt})’\\frac{1}{x}-\\frac{1}{x^2}\\frac{dy}{dt}=\\frac{d^2y}{dt^2}\\frac{dt}{dx}\\frac{1}{x}-\\frac{1}{x^2}\\frac{dy}{dt}=\\frac{d^2y}{dt^2}\\frac{1}{x^2}-\\frac{1}{x^2}\\frac{dy}{dt}=D(D-1)y\\\\end{align}$$ $$\\begin{align}&amp;D(D-1)y+4D+2y=0\\&amp;r^2-r+4r+2=0\\&amp;(r+1)(r+2)=0\\&amp;y=C_1e^{-t}+C_2e^{-2t}\\&amp;y=\\frac{C_1}{x}+\\frac{C_2}{x^2}\\\\end{align}$$ 例题1.$$\\begin{align}&amp;若二阶常系数线性齐次微分方程y’’+ay’+by=0的通解为y=(C_1+C_2x)e^x,\\&amp;则非齐次方程y’’+ay’+by=x满足条件y(0)=2,y’(0)=0的通解为？\\&amp;解：\\&amp;由线性齐次微分方程的通解可知r=1是齐次方程的特征方程的二重根，\\&amp;则齐次方程的特征方程为(r-1)^2=0,r^2-2r+1=0\\&amp;可得a=-2,b=1\\&amp;非齐次方程为y’’-2y’+y=x,即x=e^{0x}x,解为线性解y*=a’x+b’\\&amp;带入非齐次方程得0-2a’+a’x+b’=0\\&amp;a’=1,b’=2\\&amp;则非齐次方程的通解为y=(C_1+C_2x)e^x+x+2\\&amp;根据y(0)=2,y’(0)=0,得到y=x(1-e^x)+2\\end{align}$$ 2.$$\\begin{align}&amp;设y=\\frac{1}{2}e^{2x}+(x-\\frac{1}{3})e^x是二阶常系数非齐次线性微分方程\\&amp;y’’+ay’+by=ce^x的一个特解,则a,b,c各为多少？\\&amp;解：\\&amp;y=\\frac{1}{2}e^{2x}+xe^x-\\frac{1}{3}e^x对应y=ay_1+by_2+y^*\\&amp;可知r=2,r=1是齐次方程的两个线性无关解\\&amp;特征方程为(r-1)(r-2)=0,r^2-3r+2=0\\&amp;a=-3,b=2,y’’-3y’+2y=ce^x,将非线性解带入\\&amp;\\begin{cases}&amp;y’=e^x+xe^x\\&amp;y’’=2e^x+xe^x\\\\end{cases}\\&amp;得c=-1\\&amp;a,b,c=-3,2,-1\\\\end{align}$$","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/"},{"title":"高等数学极限","text":"极限极限的定义1）数列极限$$\\begin{align}&amp;\\lim_{n \\rightarrow \\infty}{x_n}=A \\Leftrightarrow对于\\forall \\epsilon0,\\exist N,使得当nN时,有|x_n-A|&lt;\\epsilon\\&amp;\\lim_{x\\rightarrow \\infty}f(x)=A\\Leftrightarrow \\forall \\epsilon0,\\exist M0,使得当|x|M时,有|f(x)-A|&lt;\\epsilon\\&amp;\\lim_{x\\rightarrow +\\infty}f(x)=A\\Leftrightarrow \\forall \\epsilon0,\\exist M0,使得当xM时,有|f(x)-A|&lt;\\epsilon\\&amp;\\lim_{x\\rightarrow -\\infty}f(x)=A\\Leftrightarrow \\forall \\epsilon0,\\exist M0,使得当x&lt;M时,有|f(x)-A|&lt;\\epsilon\\&amp;\\lim_{x\\rightarrow x_0}f(x)=A\\Leftrightarrow \\forall \\epsilon0,\\exist M0,使得当xM时,有|f(x)-A|&lt;\\epsilon\\\\end{align}$$ 极限的性质1）局部保号性$$\\begin{align}&amp;若\\lim_{x\\rightarrow x_0}f(x)=A0(&lt;0),\\&amp;则\\exist \\delta 0,使得当x \\in U^0(x_0,\\delta)时,f(x)0(&lt;0)\\\\end{align}$$ 推论：保序性：$$\\begin{align}&amp;若\\lim_{x\\rightarrow x_0}f(x)=A0(&lt;0),则\\forall \\alpha &lt;A(\\beta A),\\&amp;\\exist \\delta0,使得当x \\in U^0(x_0,\\delta)时,f(x)\\alpha(f(x)&lt;\\beta)\\\\end{align}$$ 2）局部有界性$$\\begin{align}若\\lim_{x\\rightarrow x_0}f(x)=A,则\\exist U^0(x_0),使得f(x)在U^0(x_0)内有界\\end{align}$$ 3）不等式性质$$\\begin{align}&amp;若\\lim_{x \\rightarrow x_0}f(x)=A,\\&amp;\\lim_{x \\rightarrow x_0}g(x)=B都存在,\\&amp;且f(x)\\geq g(x),\\&amp;则A\\geq B\\&amp;\\&amp;注解：若将f(x)\\geq g(x)条件换为f(x)g(x),结论AB不一定成立\\&amp;x\\rightarrow +\\infty,\\frac{1}{x}\\frac{1}{x+1}不能推出\\lim_{x\\rightarrow +\\infty}\\frac{1}{x}\\lim_{x\\rightarrow +\\infty}\\frac{1}{x+1}\\&amp;但可以推出\\lim_{x\\rightarrow +\\infty}\\frac{1}{x}\\geq\\lim_{x\\rightarrow +\\infty}\\frac{1}{x+1}\\end{align}$$ 推论：$$若\\lim_{x\\rightarrow x_0}存在,且f(x)\\geq0(\\leq 0),则A\\geq 0(A\\leq 0)$$ 4）四则运算$$\\begin{align}&amp;若\\lim f(x)=A,\\lim g(x)=B,则\\&amp;\\lim [f(x) \\pm g(x)]=A \\pm B\\&amp;\\lim f(x)g(x)=A*B\\&amp;\\lim \\frac{f(x)}{g(x)}=\\frac{A}{B},(B \\neq 0)\\&amp;\\&amp;注解：若\\lim f(x)不存在,\\lim g(x)=B存在,\\&amp;则\\lim [f(x) \\pm g(x)]必不存在,\\&amp;但\\lim f(x)g(x)不一定必存在\\&amp;\\\\end{align}$$ 数列极限$$\\begin{align}&amp;定义1 \\lim_{n\\rightarrow \\infty}x_n=A:\\&amp;\\forall \\epsilon0,\\exist N0,当nN时,恒有|x_n-A|&lt;\\epsilon\\&amp;注解：\\&amp;(1)\\epsilon与N的作用：\\&amp;\\epsilon刻画x_n与A的接近程度,N是描述n\\rightarrow \\infty的过程\\&amp;(2)几何意义：\\&amp;对任意一个给定的\\epsilon，在\\epsilon领域，当n足够大时，前有限项落在领域外，其余都落在(A-\\epsilon,A+\\epsilon)内\\\\end{align}$$ $$\\begin{align}&amp;(3)一个数列有没有极限与前有限项无关\\\\end{align}$$$$\\begin{align}&amp;(4)\\lim_{n\\rightarrow\\infty}x_n=a\\Leftrightarrow\\lim_{k\\rightarrow\\infty}x_{2k-1}=\\lim_{k\\rightarrow\\infty}x_{2k}=a:\\&amp;数列极限\\exist\\overset{\\Rightarrow}{\\nLeftarrow}奇数列偶数列极限\\exist\\&amp;数列极限\\exist\\overset{\\Rightarrow}{\\Leftarrow}奇数列极限\\exist=偶数列极限\\exist\\&amp;eg:a_n=(-1)^n,a_{2k-1}=-1,-1,-1,…,-1;a_{2k}=1,1,1,…,1;\\lim_{k\\rightarrow \\infty}a_{2k-1}\\neq\\lim_{k\\rightarrow \\infty}a_{2k}\\end{align}$$ 例题1$$\\begin{align}&amp;法1：分奇偶数列\\&amp;奇数项：\\lim_{n\\rightarrow\\infty}(\\frac{n+1}{n})^{-1}=1\\&amp;偶数项：\\lim_{n\\rightarrow\\infty}(\\frac{n+1}{n})^{1}=1\\&amp;法2：缩放法+夹逼原理\\&amp;(\\frac{n+1}{n})^{-1}\\leq(\\frac{n+1}{n})^{(-1)^n}\\leq\\frac{n+1}{n}\\&amp;\\lim_{n\\rightarrow \\infty}(\\frac{n+1}{n})^{-1}=1\\leq\\lim_{n\\rightarrow \\infty}(\\frac{n+1}{n})^{(-1)^n}\\leq\\lim_{n\\rightarrow \\infty}\\frac{n+1}{n}=1\\&amp;I=\\lim_{n\\rightarrow \\infty}(\\frac{n+1}{n})^{(-1)^n}=1\\\\end{align}$$ 例题2$$\\begin{align}&amp;(1)解法:重要不等式||a|-|b||\\leq|a-b|\\&amp;因为\\lim_{n\\rightarrow\\infty}x_n=a由极限定义可知\\&amp;\\forall \\epsilon0,\\exist N0,当nN时,|x_n-a|&lt;\\epsilon\\&amp;根据||x_n|-|a||\\leq|x_n-a|,\\&amp;则\\forall \\epsilon0,\\exist N0,当nN时,||x_n|-|a||&lt;\\epsilon\\&amp;反之不成立,例如x_n=(-1)^n,则\\lim_{n\\rightarrow \\infty}|x_n|=1=|1|,但\\lim_{n\\rightarrow \\infty}(-1)^n不存在\\&amp;(2)由(1)可知,若\\lim_{n\\rightarrow\\infty}x_n=0,则\\lim_{n\\rightarrow \\infty}|x_n|=|0|=0\\&amp;由\\lim_{n\\rightarrow\\infty}|x_n|=0,\\forall \\epsilon0,\\exist N0,当nN时,||x_n|-0|&lt;\\epsilon\\&amp;即|x_n-0|&lt;\\epsilon\\\\end{align}$$ 求数列极限的方法：$$\\begin{align}&amp;（1）将数列极限转化为函数极限\\ \\end{align}$$ 函数极限1)自变量趋于无穷大时函数的极限 例题$$\\begin{align}&amp;极限\\lim_{x\\rightarrow \\infty}\\frac{\\sqrt{x^2+1}}{x}=?\\&amp;解：\\&amp;\\sqrt x^2=|x|\\&amp;分左右\\&amp;\\lim_{x\\rightarrow +\\infty}\\frac{x\\sqrt{1+\\frac{1}{x^2}}}{x}=1\\&amp;\\lim_{x\\rightarrow -\\infty}\\frac{x\\sqrt{1+\\frac{1}{x^2}}}{x}=-1\\&amp;\\lim_{x\\rightarrow -\\infty}\\frac{x\\sqrt{1+\\frac{1}{x^2}}}{x}\\neq\\lim_{x\\rightarrow +\\infty}\\frac{x\\sqrt{1+\\frac{1}{x^2}}}{x}\\&amp;\\lim_{x\\rightarrow \\infty}\\frac{\\sqrt{x^2+1}}{x}不存在\\end{align}$$ 2)自变量趋于有限值时函数的极限$$\\begin{align}&amp;注解：(1)\\epsilon的任意性,\\epsilon与\\delta时,恒有|f(x)-A|&lt;\\epsilon\\&amp;\\Rightarrow A-\\epsilon&lt;f(x)&lt;A+\\epsilon\\&amp;(2)几何意义：f(x_0)这一点可无定义，与去心邻域的函数值有关系\\\\end{align}$$ 易错点：$$\\begin{align}&amp;正确：\\lim_{x\\rightarrow 0}\\frac{\\sin x}{x}=1(x\\rightarrow 0,x\\neq 0)\\&amp;错误：\\lim_{x\\rightarrow 0}\\frac{\\sin(x\\sin \\frac{1}{x})}{x\\sin\\frac{1}{x}}=1\\&amp;需保证x{\\sin\\frac{1}{x}}\\rightarrow 0,x{\\sin\\frac{1}{x}}\\neq 0\\&amp;即在0点的去心领域内x{\\sin\\frac{1}{x}}\\neq0\\&amp;但当x=\\frac{1}{n\\pi},使得x{\\sin\\frac{1}{x}}=0\\&amp;所以原始极限不存在\\\\end{align}$$ 极限性质$$\\begin{align}&amp;1)有界性\\&amp;(1)数列有界性：如果数列[x_n],那么数列[x_n]一定有界\\&amp;x_n\\rightarrow a,nN,因为x_n\\leq M\\end{align}$$ $$\\begin{align}&amp;x_n前n项为有限元,必有一个数M大于前n项最大值\\&amp;收敛\\overset{\\Rightarrow}{\\nLeftarrow}有界\\&amp;eg:x_n=(-1)^n\\&amp;(2)局部有界性：若\\lim_{x\\rightarrow x_0}f(x)\\exist,则f(x)在x_0某去心邻域有界\\&amp;\\lim_{x\\rightarrow x_0}f(x)\\exist\\overset{\\Rightarrow}{\\nLeftarrow}f(x)局部有界(去心邻域有界)\\&amp;eg:f(x)=\\sin\\frac{1}{x},\\lim_{x\\rightarrow 0}{\\sin\\frac{1}{x}}有界,但不存在\\&amp;2)保号性\\&amp;(1)数列极限保号性\\&amp;设\\lim_{n\\rightarrow \\infty}{x_n}=A\\&amp;[1]如果A0(或A&lt;0),则存在N0,当nN,x_n0(或x_n&lt;0)\\&amp;[2]如果存在N0,当nN时,x_n\\geq 0(或x_n\\leq0),则A\\geq0(或A\\leq 0)\\&amp;(2)函数极限保号性\\&amp;[1]如果A0(或A&lt;0),则存在\\delta0,当x\\in \\dot{U}(x_0,\\delta)时,f(x)0(或f(x_0)&lt;0)\\&amp;[2]如果存在\\delta0,当x\\in \\dot{U}(x_0,\\delta)时,f(x)\\geq0(或f(x)\\leq0),那么A\\geq0(或A\\leq0)\\end{align}$$","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E6%9E%81%E9%99%90/"},{"title":"高等数学泰勒公式","text":"泰勒公式在数学中，泰勒公式是一个用函数在某点的信息描述其附近取值的公式。如果函数足够光滑的话，在已知函数在某一点的各阶导数值的情况之下，泰勒公式可以用这些导数值做系数构建一个多项式来近似函数在这一点的邻域中的值。泰勒公式还给出了这个多项式和实际的函数值之间的偏差。 整体思想：用多项式函数逼近目标函数近似替代 以下推导为皮亚诺型余项的泰勒公式 1.泰勒公式的推导 $$(1)Sinx$$ 首先对f(x)=Sinx进行n阶求导可以发先规律$$Sinx\\rightarrow Cosx\\rightarrow -Sinx\\rightarrow -Cosx$$用多项式函数近似代替$$g(x)=\\sum_{i=0}^{n}a_0x^i$$得到如下推导$$\\begin{align}g^{(0)}(x)&amp;=Sinx =a_0x^0+a_1x^1+a_2x^2+a_3x^3+a_4x^4+a_5x^5+…+a_nx^n\\g^{(1)}(x)&amp;=Cosx =a_1x^0+2a_2x^1+3a_3x^2+4a_4x^3+5a_5x^4+…+a_nx^n\\g^{(2)}(x)&amp;=-Sinx =21a_2x^0+32a_3x^1+43a_4x^2+54a_5x^3+…+a_nx^n\\g^{(3)}(x)&amp;=-Cosx=321a_3x^0+432a_4x^1+543a_5x^2+…+a_nx^n\\g^{(4)}(x)&amp;=Sinx=4321a_4x^0+5432a_5x^1+…+a_nx^n\\g^{(5)}(x)&amp;=Cosx=54321a_5x^0+…+a_nx^n\\end{align}$$当x=0时：$$\\begin{align}0&amp;=a_0\\+1&amp;=1a_1\\0&amp;=21a_2\\-1&amp;=321a_3\\0&amp;=4321a_4\\+1&amp;=54321a_5\\\\end{align}$$归纳得：$$a_k= \\begin{cases}0 &amp; 除以四余数为0 \\\\frac{1}{k!} &amp; 除以四余数为1 \\0 &amp; 除以四余数为2 \\\\frac{-1}{k!} &amp; 除以四余数为3 \\\\end{cases}$$可以得出$$Sinx=x-\\frac{x^3}{3!}+\\frac{x^5}{5!}-\\frac{x^7}{7!}+…+(-1)^{n-1}\\frac{x^{2n-1}}{2n-1!}+o(x^{2x-1})$$根据上述思想和推到方法可以对其他基本初等函数进行泰勒展开 $$(2)e^x$$ 发现求导规律：$$e^x\\rightarrow e^x\\rightarrow e^x\\rightarrow e^x$$ $$\\begin{align}g^{(0)}(x)&amp;=e^x =a_0x^0+a_1x^1+a_2x^2+a_3x^3+a_4x^4+a_5x^5+…+a_nx^n\\g^{(1)}(x)&amp;=e^x =a_1x^0+2a_2x^1+3a_3x^2+4a_4x^3+5a_5x^4+…+a_nx^n\\g^{(2)}(x)&amp;=e^x =21a_2x^0+32a_3x^1+43a_4x^2+54a_5x^3+…+a_nx^n\\ \\end{align}$$当x=0时：$$\\begin{align}1&amp;=a_0\\1&amp;=1a_1\\1&amp;=21*a_2\\\\end{align}$$归纳得$$\\begin{align}a_k=\\frac{1}{k!}\\end{align}$$可以得出$$e^x=1+x+\\frac{x^2}{2!}+\\frac{x^3}{3!}+…+\\frac{x^n}{n!}+o(x^n)$$ $$(3)ln(1+x)$$ 发现求导规律：$$ln(1+x)\\rightarrow (1+x)^{-1}\\rightarrow (-1)(1+x)^{-2}\\rightarrow (-2)(1+x)^{-3}$$ $$\\begin{align}g^{(0)}(x)&amp;=ln(1+x) =a_0x^0+a_1x^1+a_2x^2+a_3x^3+a_4x^4+a_5x^5+…+a_nx^n\\g^{(1)}(x)&amp;=(1+x)^{-1} =a_1x^0+2a_2x^1+3a_3x^2+4a_4x^3+5a_5x^4+…+a_nx^n\\g^{(2)}(x)&amp;=(-1)(1+x)^{-2} =21a_2x^0+32a_3x^1+43a_4x^2+54a_5x^3+…+a_nx^n\\g^{(3)}(x)&amp;=(-1)^2(1+x)^{-3}=321a_3x^0+432a_4x^1+543a_5x^2+…+a_nx^n\\g^{(4)}(x)&amp;=(-1)^3(1+x)^{-4}=4321a_4x^0+5432a_5x^1+…+a_nx^n\\g^{(5)}(x)&amp;=(-1)^4(1+x)^{-5}=54321a_5x^0+…+a_nx^n\\end{align}$$当x=0时：$$\\begin{align}0&amp;=a_0\\1&amp;=1a_1\\-1&amp;=21a_2\\1&amp;=321a_3\\-1&amp;=4321a_4\\1&amp;=54321*a_5\\\\end{align}$$归纳得$$\\begin{align}a_k=\\frac{(-1)^{k-1}}{k!}\\end{align}$$可以得出$$ln(1+x)=x-\\frac{x^2}{2!}+\\frac{x^3}{3!}+…+ \\frac{(-1)^{n-1}x^n}{n!}+o(x^n)$$ $$(4)Cosx$$ 发现求导规律：$$Cosx\\rightarrow -Sinx\\rightarrow -Cosx\\rightarrow Sinx\\rightarrow Cosx$$ $$\\begin{align}g^{(0)}(x)&amp;=Cosx =a_0x^0+a_1x^1+a_2x^2+a_3x^3+a_4x^4+a_5x^5+…+a_nx^n\\g^{(1)}(x)&amp;=-Sinx =a_1x^0+2a_2x^1+3a_3x^2+4a_4x^3+5a_5x^4+…+a_nx^n\\g^{(2)}(x)&amp;=-Cosx =21a_2x^0+32a_3x^1+43a_4x^2+54a_5x^3+…+a_nx^n\\g^{(3)}(x)&amp;=Sinx=321a_3x^0+432a_4x^1+543a_5x^2+…+a_nx^n\\g^{(4)}(x)&amp;=Cosx=4321a_4x^0+5432a_5x^1+…+a_nx^n\\g^{(5)}(x)&amp;=Sinx=54321a_5x^0+…+a_nx^n\\end{align}$$当x=0时：$$\\begin{align}1&amp;=a_0\\0&amp;=1a_1\\-1&amp;=21a_2\\0&amp;=321a_3\\1&amp;=4321a_4\\0&amp;=54321*a_5\\\\end{align}$$归纳得$$a_k= \\begin{cases}\\frac{1}{k!}&amp; 除以四余数为0 \\0 &amp; 除以四余数为1 \\\\frac{-1}{k!} &amp; 除以四余数为2 \\0&amp; 除以四余数为3 \\\\end{cases}$$可以得出$$Cosx=1-\\frac{x^{2}}{2!}+\\frac{x^4}{4!}-\\frac{x^6}{6!}+…+(-1)^{n}\\frac{x^{2n}}{2n!}+o(x^{2n})$$ $$(5)(1+x)^a$$ 发现求导规律：$$(1+x)^a\\rightarrow a(1+x)^{a-1}\\rightarrow a(a-1)(1+x)^{a-2}\\rightarrow a(a-1)(a-2)(1+x)^{a-3}$$ $$\\begin{align}g^{(0)}(x)&amp;=(1+x)^a =a_0x^0+a_1x^1+a_2x^2+a_3x^3+a_4x^4+a_5x^5+…+a_nx^n\\g^{(1)}(x)&amp;=a(1+x)^{a-1} =a_1x^0+2a_2x^1+3a_3x^2+4a_4x^3+5a_5x^4+…+a_nx^n\\g^{(2)}(x)&amp;=a(a-1)(1+x)^{a-2} =21a_2x^0+32a_3x^1+43a_4x^2+54a_5x^3+…+a_nx^n\\g^{(3)}(x)&amp;=a(a-1)(a-2)(1+x)^{a-3}=321a_3x^0+432a_4x^1+543a_5x^2+…+a_nx^n\\ \\end{align}$$当x=0时：$$\\begin{align}&amp;1=a_0\\&amp;a=1a_1\\&amp;a(a-1)=21a_2\\&amp;a(a-1)(a-2)=321a_3\\\\end{align}$$归纳得$$a_k=\\frac{a(a-1)(a-2)…(a-k+1)}{k!}$$可以得出$$(1+x)^a=1+ax+\\frac{a(a-1)x^2}{2!}+\\frac{a(a-1)(a-2)x^3}{3!}+…+\\frac{a(a-1)(a-2)…(a-n+1)x^n}{n!}+o(x^n)$$ 2.皮亚诺与拉格朗日型余项（1)皮亚诺型余项泰勒公式$$\\begin{align}&amp;如果f(x)在点x_0有直至n阶的导数，则有\\&amp;f(x)=f(x_0)+f’(x_0)(x-x_0)+\\frac{1}{2!}f’’(x_0)(x-x_0)^2+…+\\frac{1}{n!}f^{(n)}(x_0)(x-x_0)^n+o[(x-x_0)^{n}]\\&amp;x_0=0时，得到麦克劳林公式\\&amp;f(x)=f(0)+f’(0)x+\\frac{1}{2!}f’’(0)x^2+…+\\frac{1}{n!}f^{(n)}(0)x^n+o(x^n)\\end{align}$$(2)拉格朗日余项泰勒公式$$\\begin{align}&amp;设函数f(x)在含有x_0的开区间(a,b)内有n+1阶的导数，则当x\\in(a,b)时有\\&amp;f(x)=f(x_0)+f’(x_0)(x-x_0)+\\frac{1}{2!}f’’(x_0)(x-x_0)^2+…+\\frac{1}{n!}f^{(n)}(x_0)(x-x_0)^n+R_n(x)\\&amp;其中R_n(x)=\\frac{f^{(n+1)}(\\xi)}{(n+1)!}(x-x_0)^{(n+1)},这里\\xi介于x_0与x之间，称为拉格朗日余项\\end{align}$$(3)区别 1、描述对象区别： 拉格朗日余项的泰勒公式是描述整体$$拉格朗日余项(整体)\\rightarrow \\begin{cases}最值\\不等式\\end{cases}$$ 皮亚诺余项的泰勒公式描述局部$$皮亚诺余项(整体)\\rightarrow \\begin{cases}极限\\极值\\end{cases}$$ 2、表达式区别： 其中拉格朗日余项使用的是具体表达式，为某个n+1阶导数乘以（x-x0)的(n+1)次方 皮亚诺型余项没有具体表达式只是一个高阶无穷小 Rn(x)=0((x-x0)的n次方) 3、公式计算方式的区别 麦克劳林公式是泰勒公式中（在a=0 ,记ξ=θX）的一种特殊形式; 皮亚诺型余项为Rn(x) = o(x^n)； 因此再展开时候只需根据要求","link":"/2018/09/06/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E6%B3%B0%E5%8B%92%E5%85%AC%E5%BC%8F/"}],"tags":[],"categories":[],"pages":[]}